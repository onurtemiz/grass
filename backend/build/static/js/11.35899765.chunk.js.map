{"version":3,"sources":["components/HomePage/Home/HomeTheme.js","components/ControlPage/LessonsPage/Lessons/SubLesson.js","components/ControlPage/TeachersPage/Teachers/SubTeacher.js","components/ControlPage/QuestionsPage/Questions/SubQuestion.js","components/HomePage/Home/Tips.js","components/Search/Search.js","components/HomePage/Home/Home.js"],"names":["HomeSearch","styled","div","HomeGrid","Grid","HomeHeader","Header","SubLesson","lesson","main","style","marginLeft","marginRight","marginBottom","as","Link","to","LESSON_PATH","fluid","marginTop","paddingLeft","paddingTop","display","color","Content","name","toUpperCase","active","Description","bold","pointer","key","parentName","SubTeacher","teacher","TEACHER_PATH","lessons","map","l","i","length","getLessonString","SubQuestion","question","QUESTION_PATH","paddingBottom","overflowWrap","whiteSpace","overflow","textOverflow","maxWidth","description","Tips","home","useState","isOpen","setIsOpen","isLoading","setIsLoading","useForm","register","handleSubmit","errors","isAnonim","setIsAnonim","position","bottom","width","onClick","open","reply","Field","label","disabled","value","onChange","inline","rows","isMobile","height","placeholder","ref","required","maxLength","message","tip","basic","pointing","Actions","negative","content","icon","labelPosition","positive","primary","data","tipsService","postTip","Search","size","dispatch","useDispatch","all","useSelector","state","questions","clubs","teachers","storedTimeout","setStoredTimeout","setValue","refValue","useRef","first","fetching","mix","setMix","current","setCurrent","useEffect","addInfAll","addInfQuestions","addInfClubs","addInfTeacher","setTimeout","t","searchType","c","q","questionId","id","filter","m","toLocaleUpperCase","includes","fullName","loading","minCharacters","onSearchChange","e","target","clearTimeout","handleOnSearchChange","results","noResultsMessage","resultRenderer","SubClub","club","autoFocus","Home","setTip","location","useLocation","getTip","a","Container","verticalAlign","centered","columns","stretched","Row","Column","textAlign","user"],"mappings":"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","file":"static/js/11.35899765.chunk.js","sourcesContent":["import { Grid, Header } from 'semantic-ui-react';\nimport styled from 'styled-components';\nexport const HomeSearch = styled.div`\n  .input {\n    width: 75vw !important;\n    max-width: 1000px;\n    min-width: 300px;\n  }\n\n  .results {\n    margin-left: 12.5vw;\n    min-width: 300px;\n    max-width: 1000px;\n    width: 100vw !important;\n    color: palevioletred !important;\n    font-weight: bold;\n  }\n`;\n\nexport const HomeGrid = styled(Grid)`\n  height: 60vh;\n`;\n\nexport const HomeHeader = styled(Header)`\n  font-size: 5em;\n  color: #21ba45;\n`;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { LESSON_PATH } from '../../../../utils/config';\nimport {\n  Card,\n  Header,\n  Label as SLabel,\n} from 'semantic-ui-react';\nimport { Label } from '../../../Nav/NavTheme';\nconst SubLesson = ({ lesson, main }) => {\n\n  return (\n    <div\n      style={\n        main\n          ? { marginLeft: '1em', marginRight: '1em', marginBottom: '1em' }\n          : null\n      }\n    >\n      <Card\n        as={Link}\n        to={LESSON_PATH(lesson)}\n        fluid\n        style={\n          main\n            ? {\n                marginTop: '1em',\n                paddingLeft: '0.5em',\n                paddingTop: '0.5em',\n              }\n            : {\n                paddingLeft: '0.5em',\n                paddingTop: '0.5em',\n              }\n        }\n      >\n        <Card.Header style={{ display: 'inline' }}>\n          <Header as=\"h2\" color=\"blue\">\n            <Header.Content>{lesson.name.toUpperCase()} </Header.Content>\n            {lesson.active ? (\n              <SLabel color=\"green\">Bu dönem açık</SLabel>\n            ) : null}\n          </Header>\n        </Card.Header>\n        <Card.Description>\n          <Label\n            color=\"green\"\n            bold\n            pointer\n            key={`${lesson.parentName}${lesson.name}`}\n          >\n            {lesson.parentName}\n          </Label>\n        </Card.Description>\n      </Card>\n    </div>\n  );\n};\n\nexport default SubLesson;\n","import React from 'react';\nimport { TEACHER_PATH } from '../../../../utils/config';\nimport { Link } from 'react-router-dom';\nimport { Card, Header } from 'semantic-ui-react';\nimport { Label } from '../../../Nav/NavTheme';\n\nconst SubTeacher = ({ teacher, main }) => {\n  const getLessonString = (lesson, i) => {\n    if (teacher.lessons.length === 1) {\n      return `${lesson.toUpperCase()}`;\n    } else if (teacher.lessons.length === i + 1) {\n      return `${lesson.toUpperCase()}`;\n    } else {\n      return `${lesson.toUpperCase()} · `;\n    }\n  };\n\n  return (\n    <div\n      style={\n        main\n          ? { marginLeft: '1em', marginRight: '1em', marginBottom: '1em' }\n          : null\n      }\n    >\n      <Card\n        as={Link}\n        to={TEACHER_PATH(teacher)}\n        fluid\n        style={\n          main\n            ? {\n                marginTop: '1em',\n                paddingLeft: '0.5em',\n                paddingTop: '0.5em',\n              }\n            : {\n                paddingLeft: '0.5em',\n                paddingTop: '0.5em',\n              }\n        }\n      >\n        <Card.Header style={{ display: 'inline' }}>\n          <Header as=\"h2\" color=\"blue\">\n            <Header.Content>{teacher.name.toUpperCase()}</Header.Content>\n          </Header>\n        </Card.Header>\n\n        <Card.Description>\n          {teacher.lessons.map((l, i) => (\n            <Label color=\"green\" bold pointer key={`${teacher.name}${l.name}`}>\n              {getLessonString(l.name, i)}\n            </Label>\n          ))}\n        </Card.Description>\n      </Card>\n    </div>\n  );\n};\n\nexport default SubTeacher;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { QUESTION_PATH } from '../../../../utils/config';\nimport { Card, Header } from 'semantic-ui-react';\nimport { Label } from '../../../Nav/NavTheme';\n\nconst SubQuestion = ({ question, main }) => {\n  return (\n    <div\n      style={\n        main\n          ? { marginLeft: '1em', marginRight: '1em', marginBottom: '1em' }\n          : null\n      }\n    >\n      <Card\n        as={Link}\n        to={QUESTION_PATH(question)}\n        fluid\n        style={\n          main\n            ? {\n                marginTop: '1em',\n                paddingLeft: '0.5em',\n                paddingTop: '0.5em',\n                paddingBottom: '0.2em',\n              }\n            : {\n                paddingLeft: '0.5em',\n                paddingTop: '0.5em',\n              }\n        }\n      >\n        <Card.Header style={{ display: 'inline',overflowWrap:'anywhere' }}>\n          <Header as=\"h2\">\n            <Header.Content>\n              <Label color=\"blue\" bold pointer>\n                {question.question}\n              </Label>\n            </Header.Content>\n          </Header>\n        </Card.Header>\n        <Card.Description\n          style={{\n            whiteSpace: 'nowrap',\n            overflow: 'hidden',\n            textOverflow: 'ellipsis',\n            maxWidth: '100ch',\n          }}\n        >\n          <Label color=\"green\" bold pointer>\n            {question.description}\n          </Label>\n        </Card.Description>\n      </Card>\n    </div>\n  );\n};\n\nexport default SubQuestion;\n","import React, { useState} from 'react';\nimport {\n  Modal,\n  Button,\n  Form,\n  Checkbox,\n  Divider,\n  Label as ErrorLabel,\n} from 'semantic-ui-react';\nimport { Label } from '../../Nav/NavTheme';\nimport TextareaAutosize from 'react-textarea-autosize';\nimport tipsService from '../../../services/tips';\nimport { useForm } from 'react-hook-form';\nimport { isMobile } from 'react-device-detect';\n\nconst Tips = ({ home }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const { register, handleSubmit, errors } = useForm();\n  const [isAnonim, setIsAnonim] = useState(false);\n\n  const onSubmit = (data) => {\n    setIsLoading(true);\n    tipsService.postTip({ ...data, isAnonim }, setIsLoading, setIsOpen);\n  };\n\n  return (\n    <>\n      <Label\n        color=\"blue\"\n        pointer\n        bold\n        style={\n          home ? { position: 'fixed', bottom: '3em', width: '100%' } : null\n        }\n        onClick={() => setIsOpen(true)}\n      >\n        Tavsiye Ver\n      </Label>\n      <Modal open={isOpen}>\n        <Modal.Header>\n          <Label color=\"blue\">\n            Tavsiyeniz <Label color=\"green\">250</Label> harften az olmalı.\n          </Label>\n        </Modal.Header>\n        <Modal.Content>\n          <Modal.Description>\n            <Form reply style={{ marginBottom: '1em', marginLeft: '1em' }}>\n              <Form.Field>\n                <Checkbox\n                  label=\"Kullanıcı adım gözükmesin\"\n                  disabled={isLoading}\n                  value={isAnonim}\n                  onChange={() => setIsAnonim(!isAnonim)}\n                />\n              </Form.Field>\n              <br />\n              <Divider />\n              <Form.Field inline>\n                <TextareaAutosize\n                  disabled={isLoading}\n                  rows={4}\n                  style={{ width: isMobile ? '80vw' : '30vw', height: '4rem' }}\n                  placeholder=\"Tavsiyen Nedir?\"\n                  ref={register({\n                    required: 'Lütfen tavsiyenizi yazın',\n                    maxLength: {\n                      value: 250,\n                      message: 'Tavsiyeniz 250 karakterden daha az olmalı.',\n                    },\n                  })}\n                  name=\"tip\"\n                />\n                {errors.tip && (\n                  <ErrorLabel basic color=\"red\" pointing=\"left\">\n                    {errors.tip.message}\n                  </ErrorLabel>\n                )}\n              </Form.Field>\n            </Form>\n          </Modal.Description>\n        </Modal.Content>\n        <Modal.Actions>\n          <Button\n            disabled={isLoading}\n            negative\n            content=\"İptal\"\n            icon=\"cancel\"\n            labelPosition=\"right\"\n            onClick={() => setIsOpen(false)}\n          />\n          <Button\n            disabled={isLoading}\n            positive\n            labelPosition=\"right\"\n            primary\n            icon=\"checkmark\"\n            content=\"Yolla\"\n            onClick={handleSubmit(onSubmit)}\n          />{' '}\n        </Modal.Actions>\n      </Modal>\n    </>\n  );\n};\n\nexport default Tips;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addInfAll } from '../../reducers/allReducer';\nimport { addInfQuestions } from '../../reducers/questionReducer';\nimport { addInfClubs } from '../../reducers/clubReducer';\nimport { addInfTeacher } from '../../reducers/teacherReducer';\n\nimport SubLesson from '../ControlPage/LessonsPage/Lessons/SubLesson';\nimport SubTeacher from '../ControlPage/TeachersPage/Teachers/SubTeacher';\nimport SubQuestion from '../ControlPage/QuestionsPage/Questions/SubQuestion';\nimport { SubClub } from '../ControlPage/ClubsPage/Clubs/SubClub';\nimport { Search as S } from 'semantic-ui-react';\n\nconst Search = ({ size }) => {\n  const dispatch = useDispatch();\n  const all = useSelector((state) => state.all.all);\n  const questions = useSelector((state) => state.questions.questions);\n  const clubs = useSelector((state) => state.clubs.clubs);\n  const teachers = useSelector((state) => state.teachers.teachers);\n  const [isLoading, setIsLoading] = useState(false);\n  const [storedTimeout, setStoredTimeout] = useState(null);\n  const [value, setValue] = useState('');\n  const refValue = useRef('');\n  const first = useRef(false);\n  const fetching = useRef(false);\n  const [mix, setMix] = useState([]);\n  const [current, setCurrent] = useState([]);\n  useEffect(() => {\n    dispatch(addInfAll(0, 3, value, first, fetching));\n    dispatch(addInfQuestions(0, 3, value, first, fetching));\n    dispatch(addInfClubs(0, 3, value, first, fetching));\n    dispatch(addInfTeacher(0, 3, value, first, fetching));\n    setTimeout(() => {\n      setIsLoading(false);\n    }, 600);\n  }, [value]);\n\n  useEffect(() => {\n    setMix([\n      ...teachers.map((t) => ({ ...t, searchType: 'teacher' })),\n      ...clubs.map((c) => ({ ...c, searchType: 'club' })),\n      ...questions.map((q) => ({\n        ...q,\n        searchType: 'question',\n        questionId: q.id,\n      })),\n      ...all.map((l) => ({ ...l, searchType: 'lesson' })),\n    ]);\n  }, [all, questions, clubs, teachers]);\n\n  useEffect(() => {\n    setCurrent(\n      mix.filter((m) => {\n        if (m.searchType === 'teacher') {\n          return m.name\n            .toLocaleUpperCase('tr-TR')\n            .includes(value.toLocaleUpperCase('tr-TR'));\n        } else if (m.searchType === 'club') {\n          return m.fullName.toUpperCase().includes(value.toUpperCase()) ||\n            m.name.toUpperCase().includes(value.toUpperCase())\n            ? true\n            : false;\n        } else if (m.searchType === 'lesson') {\n          return m.name.toUpperCase().includes(value.toUpperCase());\n        } else if (m.searchType === 'question') {\n          return m.question.toUpperCase().includes(value.toUpperCase());\n        }\n      })\n    );\n  }, [mix]);\n\n  const resRender = (m) => {\n    if (m.searchType === 'teacher') {\n      return <SubTeacher teacher={m} key={m.id} />;\n    } else if (m.searchType === 'lesson') {\n      return <SubLesson lesson={m} key={m.id} />;\n    } else if (m.searchType === 'club') {\n      return <SubClub club={m} key={m.id} />;\n    } else if (m.searchType === 'question') {\n      return <SubQuestion question={m} key={m.id} />;\n    }\n  };\n\n  const handleOnSearchChange = (e) => {\n    refValue.current = e.target.value;\n    if (storedTimeout) clearTimeout(storedTimeout);\n    setStoredTimeout(\n      setTimeout(() => {\n        setIsLoading(true);\n        setValue(refValue.current);\n      }, 300)\n    );\n  };\n\n  return (\n    <S\n      loading={isLoading}\n      minCharacters={1}\n      onSearchChange={(e) => handleOnSearchChange(e)}\n      value={refValue.current}\n      results={current}\n      placeholder=\"Ders, Hoca, Kulüp ya da Soru Arayın.\"\n      size={size ? size : 'massive'}\n      noResultsMessage=\"Aradığınız kritere uygun bir şey bulunamadı.\"\n      resultRenderer={resRender}\n      autoFocus\n    ></S>\n  );\n};\n\nexport default Search;\n","import React, { useState, useEffect } from 'react';\nimport {\n  Grid,\n  Container,\n} from 'semantic-ui-react';\nimport { HomeSearch, HomeHeader, HomeGrid } from './HomeTheme';\nimport Search from '../../Search/Search';\nimport { Label } from '../../Nav/NavTheme';\nimport { useLocation } from 'react-router-dom';\nimport Tips from './Tips';\nimport tipsService from '../../../services/tips';\nconst Home = () => {\n  const [tip, setTip] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    getTip();\n  }, [location]);\n\n  const getTip = async () => {\n    const tip = await tipsService.getTip();\n    setTip(tip);\n  };\n\n  if (tip === null) {\n    return null;\n  }\n  return (\n    <Container fluid>\n      <HomeGrid verticalAlign=\"middle\" centered columns={1} stretched>\n        <Grid.Row centered stretched>\n          <Grid.Column textAlign=\"center\">\n            <HomeHeader as=\"h1\">\n              <label style={{ color: '#2185D0' }}>BOUN</label> ÇİM\n            </HomeHeader>\n            <Label color=\"blue\" bold>\n              Daha iyi bir Boğaziçi deneyimi\n            </Label>\n            <br />\n            <HomeSearch>\n              <Search />\n            </HomeSearch>\n            <br />\n            <Label color=\"green\" bold style={{overflowWrap:'anywhere'}}>\n              {tip.isAnonim ? 'Boğaziçili' : tip.user} Tavsiye Ediyor:{' '}\n              <Label color=\"blue\" bold>\n                {tip.tip}\n              </Label>\n            </Label>\n            <br />\n            <Tips />\n          </Grid.Column>\n        </Grid.Row>\n        <Label\n          color=\"blue\"\n          \n          bold\n          style={{ position: 'fixed', bottom: '3em', width: '100%' }}\n        >\n          © 2020 Onur Temiz. Tüm hakları saklıdır.\n        </Label>\n      </HomeGrid>\n    </Container>\n  );\n};\n\nexport default Home;\n"],"sourceRoot":""}