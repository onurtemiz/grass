{"version":3,"sources":["components/Nav/NavTheme.js","components/HomePage/Home/HomeTheme.js","components/Login/Login.js","components/Signup/Signup.js","components/Verify/Verify.js","components/ResetPassword/ForgotPassword.js","components/ResetPassword/ResetPassword.js","UnauthorizedApp.js"],"names":["InfiniteListStyle","isMobile","minHeight","maxHeight","overflow","getColorCode","styled","div","props","color","StyledRange","Range","StyledSlider","Slider","HeadingStyle","fontSize","display","whiteSpace","alignItems","HeadingStyleMobile","flexDirection","StyledDropdown","Dropdown","Label","label","pointer","bold","nolink","HomeSearch","HomeGrid","Grid","HomeHeader","Header","Login","useForm","register","handleSubmit","errors","setValue","useState","loading","setLoading","dispatch","useDispatch","history","useHistory","onSubmit","data","a","loginUser","useEffect","push","name","required","pattern","value","message","minLength","textAlign","style","height","verticalAlign","columns","Column","maxWidth","as","Message","padding","Form","size","Segment","Field","inline","Input","fluid","onChange","e","icon","Icon","iconPosition","placeholder","autoFocus","className","email","basic","pointing","type","password","Divider","Button","primary","info","to","error","Signup","watch","send","setSend","setEmail","activationLoading","setActivaitonLoading","validate","comment","trim","length","maxLength","sendVerification","signup","res","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","success","signupUser","username","autoComplete","samePassword","Loader","active","onClick","Verify","location","useLocation","verifyCode","setVerifyCode","situation","setSituation","queryString","parse","search","code","u","verifyUser","ForgotPassword","forgotPassword","ResetPassword","setActiveIndex","parsed","setParsed","sucess","setSucess","resetPassword","UnauthorizedApp","path","component"],"mappings":"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","file":"static/js/13.be2a6440.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport Slider, { Range } from 'rc-slider';\nimport {  Dropdown } from 'semantic-ui-react';\nimport { isMobile } from 'react-device-detect';\n\nexport const InfiniteListStyle = !isMobile\n  ? { minHeight: '300px', maxHeight: '500px', overflow: 'auto' }\n  : null;\n\nexport const NavSearch = styled.div`\n  .ui.search .prompt {\n    border-radius: 0rem;\n  }\n  .input {\n    min-width: 300px;\n  }\n  .results {\n    min-width: 300px;\n    font-weight: bold;\n  }\n`;\n\nconst getColorCode = (props) => {\n  return props.color === 'green'\n    ? '#21ba45'\n    : props.color === 'blue'\n    ? '#2185d0 !important'\n    : props.color === 'red'\n    ? '#db2828'\n    : props.color === 'hot red'\n    ? '#F44336'\n    : props.color === 'white'\n    ? '#FFF'\n    : '#21ba45';\n};\n\nexport const StyledRange = styled(Range)`\n  .rc-slider-handle {\n    background-color: ${(props) => getColorCode(props)};\n    border-color: ${(props) => getColorCode(props)};\n  }\n  .rc-slider-handle:active {\n    box-shadow: ${(props) => `0 0 5px ${getColorCode(props)}`};\n  }\n  .rc-slider-handle-dragging.rc-slider-handle-dragging.rc-slider-handle-dragging {\n    background-color: ${(props) => getColorCode(props)};\n    border-color: ${(props) => getColorCode(props)};\n    box-shadow: ${(props) => `0 0 5px ${getColorCode(props)}`};\n`;\n\nexport const StyledSlider = styled(Slider)`\n  .rc-slider-handle {\n    background-color: ${(props) => getColorCode(props)};\n    border-color: ${(props) => getColorCode(props)};\n  }\n  .rc-slider-handle:active {\n    box-shadow: ${(props) => `0 0 5px ${getColorCode(props)}`};\n  }\n  .rc-slider-handle-dragging.rc-slider-handle-dragging.rc-slider-handle-dragging {\n    background-color: ${(props) => getColorCode(props)};\n    border-color: ${(props) => getColorCode(props)};\n    box-shadow: ${(props) => `0 0 5px ${getColorCode(props)}`};\n  }\n`;\n\nexport const HeadingStyle = {\n  fontSize: '2em',\n  display: 'flex',\n  whiteSpace: 'pre-wrap',\n  alignItems: 'center',\n};\n\nexport const HeadingStyleMobile = {\n  display: 'flex',\n  fontSize: '2em',\n  flexDirection: 'column',\n};\n\nexport const StyledDropdown = styled(Dropdown)`\n  .dropdown.icon {\n    color: #2185d0;\n  }\n`;\n\nexport const Label = styled.label`\n  color: ${(props) =>\n    props.color === 'green'\n      ? '#21ba45'\n      : props.color === 'blue'\n      ? '#2185d0 !important'\n      : props.color === 'red'\n      ? '#db2828'\n      : props.color === 'hot red'\n      ? '#F44336'\n      : props.color === 'white'\n      ? '#FFF'\n      : '#333'};\n  cursor: ${(props) => (props.pointer ? 'pointer' : 'auto')};\n  font-weight: ${(props) => (props.bold ? 'bold' : 'auto')};\n  &:hover {\n    filter: ${(props) =>\n      props.pointer && !props.nolink ? 'brightness(110%)' : null};\n  }\n`;\n\nexport const GreenLabel = styled.label`\n  color: #21ba45;\n  cursor: pointer;\n`;\n\nexport const BlueLabel = styled.label`\n  color: #21ba45;\n  cursor: pointer;\n`;\n","import { Grid, Header } from 'semantic-ui-react';\nimport styled from 'styled-components';\nexport const HomeSearch = styled.div`\n  .input {\n    width: 75vw !important;\n    max-width: 1000px;\n    min-width: 300px;\n  }\n\n  .results {\n    margin-left: 12.5vw;\n    min-width: 300px;\n    max-width: 1000px;\n    width: 100vw !important;\n    color: palevioletred !important;\n    font-weight: bold;\n  }\n`;\n\nexport const HomeGrid = styled(Grid)`\n  height: 60vh;\n`;\n\nexport const HomeHeader = styled(Header)`\n  font-size: 5em;\n  color: #21ba45;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { loginUser } from '../../reducers/userReducer';\nimport { useDispatch } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Segment,\n  Icon,\n  Label,\n  Divider,\n} from 'semantic-ui-react';\nimport { useForm } from 'react-hook-form';\nimport { HomeHeader } from '../HomePage/Home/HomeTheme';\nconst Login = () => {\n  const { register, handleSubmit, errors, setValue } = useForm();\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const onSubmit = async (data) => {\n    setLoading(true);\n    dispatch(loginUser(data, setLoading));\n  };\n\n  useEffect(() => {\n    history.push('/login');\n  }, []);\n\n  useEffect(() => {\n    register(\n      { name: 'email' },\n      {\n        required: 'Lütfen boun eposta adresinizi girin.',\n        pattern: {\n          value: /^[A-Z0-9._%+-]+@boun\\.edu\\.tr$/i,\n          message: 'Epostanız @boun.edu.tr ile bitiyor olmalı.',\n        },\n      }\n    );\n    register(\n      { name: 'password' },\n      {\n        required: 'Lütfen şifrenizi girin.',\n        minLength: {\n          value: 8,\n          message: 'Şifreniz en az 8 karakterden oluşmalı.',\n        },\n      }\n    );\n  }, []);\n\n  return (\n    <Grid\n      textAlign=\"center\"\n      style={{ height: '100vh' }}\n      verticalAlign=\"middle\"\n      columns=\"equal\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <HomeHeader as=\"h1\">\n          <label style={{ color: '#2185D0' }}>BOUN</label> ÇİM\n        </HomeHeader>\n        <Header as=\"h1\" color=\"green\">\n          Çimlere Hoşgeldiniz.\n        </Header>\n\n        <Message color=\"green\">\n          Çim uygulamasına sadece{' '}\n          <Label color=\"blue\" style={{ padding: 5 }}>\n            @boun.edu.tr\n          </Label>{' '}\n          emaili olanlar giriş yapabilir.\n        </Message>\n        <Form size=\"large\" onSubmit={handleSubmit(onSubmit)}>\n          <Segment>\n            <Form.Field inline>\n              <Form.Input\n                fluid\n                onChange={(e, { name, value }) => setValue(name, value)}\n                icon={<Icon color=\"green\" name=\"mail\" />}\n                iconPosition=\"left\"\n                placeholder=\"Eposta Adresi\"\n                name=\"email\"\n                autoFocus\n                className=\"email-input\"\n              />\n              {errors.email && (\n                <Label\n                  basic\n                  color=\"red\"\n                  pointing=\"above\"\n                  className=\"email-error\"\n                >\n                  {errors.email.message}\n                </Label>\n              )}\n            </Form.Field>\n            <Form.Field inline>\n              <Form.Input\n                fluid\n                icon={<Icon color=\"green\" name=\"key\" />}\n                iconPosition=\"left\"\n                placeholder=\"Şifre\"\n                type=\"password\"\n                name=\"password\"\n                className=\"password-input\"\n                onChange={(e, { name, value }) => setValue(name, value)}\n              />\n              {errors.password && (\n                <Label\n                  basic\n                  color=\"red\"\n                  pointing=\"above\"\n                  className=\"password-error\"\n                >\n                  {errors.password.message}\n                </Label>\n              )}\n            </Form.Field>\n            <Divider />\n            <Button\n              fluid\n              size=\"large\"\n              primary\n              type=\"submit\"\n              className=\"login-button\"\n              loading={loading}\n            >\n              Giriş Yap\n            </Button>\n          </Segment>\n        </Form>\n        <Message info>\n          <Link to=\"/signup\">\n            <b>Hesap Oluştur</b>\n          </Link>\n        </Message>\n        <Message error>\n          <Link to=\"/forgot_password\" style={{ color: '#f53131' }}>\n            <b>Şifremi Unuttum</b>\n          </Link>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Login;\n","import React, { useEffect, useState } from 'react';\nimport { signupUser } from '../../reducers/userReducer';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Segment,\n  Icon,\n  Label,\n  Divider,\n  Loader,\n} from 'semantic-ui-react';\nimport { useForm } from 'react-hook-form';\nimport { HomeHeader } from '../HomePage/Home/HomeTheme';\nimport { Label as SLabel } from '../Nav/NavTheme';\nimport signup from '../../services/signup';\nimport { toast } from 'react-toastify';\n\nconst Signup = () => {\n  const dispatch = useDispatch();\n  const [loading, setLoading] = useState(false);\n  const { register, handleSubmit, errors, setValue, watch } = useForm();\n  const [send, setSend] = useState(false);\n  const [email, setEmail] = useState('');\n  const [activationLoading, setActivaitonLoading] = useState(false);\n\n  useEffect(() => {\n    register(\n      { name: 'email' },\n      {\n        required: 'Lütfen boun eposta adresinizi girin.',\n        pattern: {\n          value: /^[A-Z0-9._%+-]+@boun\\.edu\\.tr$/i,\n          message: 'Epostanız @boun.edu.tr ile bitiyor olmalı.',\n        },\n      }\n    );\n    register(\n      { name: 'password' },\n      {\n        required: 'Lütfen şifrenizi girin.',\n        minLength: {\n          value: 8,\n          message: 'Şifreniz en az 8 karakterden oluşmalı.',\n        },\n        validate: (comment) =>\n          comment.trim().length !== 0 ||\n          'Şifreniz sadece boşluklardan oluşamaz.',\n      }\n    );\n    register(\n      { name: 'samePassword' },\n      {\n        required: 'Lütfen şifrenizi tekrar girin.',\n        validate: (value) =>\n          value === watch('password') || 'Şifreleriniz uyuşmuyor.',\n      }\n    );\n    register(\n      { name: 'username' },\n      {\n        required: 'Lütfen bir kullanıcı adı girin.',\n        maxLength: {\n          value: 15,\n          message: 'Kullanıcı adınız 15 veya daha az harften oluşmalı.',\n        },\n        minLength: {\n          value: 1,\n          message: 'Kullanıcı adınız en az 1 harften oluşmalı',\n        },\n        validate: (comment) =>\n          comment.trim().length !== 0 ||\n          'Kullanıcı adınız sadece boşluklardan oluşamaz.',\n      }\n    );\n  }, []);\n\n  const onSubmit = (data) => {\n    setLoading(true);\n    setEmail(data.email);\n    dispatch(signupUser(data, setLoading, setSend));\n  };\n\n  const sendVerification = async () => {\n    setActivaitonLoading(true);\n    const res = await signup.sendVerification(email);\n    if (res.error) {\n      toast.error(`${res.error}`, {\n        position: 'bottom-left',\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    } else {\n      toast.success(`Yeni bir aktivasyon linki emailinize gönderildi.`, {\n        position: 'bottom-left',\n        autoClose: 5000,\n        hideProgressBar: true,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n    }\n    setActivaitonLoading(false);\n  };\n\n  return (\n    <Grid\n      textAlign=\"center\"\n      style={{ height: '100vh' }}\n      verticalAlign=\"middle\"\n      columns=\"equal\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <HomeHeader as=\"h1\">\n          <label style={{ color: '#2185D0' }}>BOUN</label> ÇİM\n        </HomeHeader>\n        <Header as=\"h1\" color=\"green\" textAlign=\"center\">\n          Çimlerde Yerinizi Alın.\n        </Header>\n\n        <Message color=\"green\">\n          Çim uygulamasına sadece{' '}\n          <Label color=\"blue\" style={{ padding: 5 }}>\n            @boun.edu.tr\n          </Label>{' '}\n          emaili olanlar kayıt olabilir.\n        </Message>\n        <Form size=\"large\" onSubmit={handleSubmit(onSubmit)}>\n          <Segment>\n            <Form.Field inline>\n              <Form.Input\n                fluid\n                icon={<Icon name=\"user\" color=\"green\" />}\n                iconPosition=\"left\"\n                placeholder=\"Kullanıcı Adı\"\n                onChange={(e, { name, value }) => setValue(name, value)}\n                name=\"username\"\n              />\n\n              {errors.username && (\n                <Label basic color=\"red\" pointing=\"above\">\n                  {errors.username.message}\n                </Label>\n              )}\n            </Form.Field>\n            <Form.Field inline>\n              <Form.Input\n                fluid\n                icon={<Icon color=\"green\" name=\"mail\" />}\n                iconPosition=\"left\"\n                placeholder=\"Eposta Adresi\"\n                onChange={(e, { name, value }) => setValue(name, value)}\n                name=\"email\"\n              />\n              {errors.email && (\n                <Label basic color=\"red\" pointing=\"above\">\n                  {errors.email.message}\n                </Label>\n              )}\n            </Form.Field>\n            <Form.Field inline>\n              <Form.Input\n                fluid\n                icon={<Icon color=\"green\" name=\"key\" />}\n                iconPosition=\"left\"\n                placeholder=\"Şifre\"\n                type=\"password\"\n                onChange={(e, { name, value }) => setValue(name, value)}\n                name=\"password\"\n              />\n              {errors.password && (\n                <Label basic color=\"red\" pointing=\"above\">\n                  {errors.password.message}\n                </Label>\n              )}\n            </Form.Field>\n            <Form.Field inline>\n              <Form.Input\n                fluid\n                icon={<Icon color=\"green\" name=\"key\" />}\n                iconPosition=\"left\"\n                placeholder=\"Şifrenizi Tekrar Yazın\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                onChange={(e, { name, value }) => setValue(name, value)}\n                name=\"samePassword\"\n              />\n              {errors.samePassword && (\n                <Label basic color=\"red\" pointing=\"above\">\n                  {errors.samePassword.message}\n                </Label>\n              )}\n            </Form.Field>\n            <Divider />\n            <Button fluid size=\"large\" primary type=\"submit\" loading={loading}>\n              Hesap Oluştur\n            </Button>\n          </Segment>\n        </Form>\n        {send ? (\n          <Message info>\n            {activationLoading ? (\n              <Loader active={true} inline=\"centered\" />\n            ) : (\n              <SLabel\n                color=\"blue\"\n                pointer\n                bold\n                onClick={() => sendVerification()}\n              >\n                <b>Aktivasyon Kodunu Tekrar Yolla</b>\n              </SLabel>\n            )}\n          </Message>\n        ) : null}\n        <Message success>\n          <Link to=\"/login\">\n            <SLabel color=\"green\" pointer bold>\n              <b>Giriş Yap</b>\n            </SLabel>\n          </Link>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Signup;\n","import React, { useEffect, useState } from 'react';\nimport {  verifyUser } from '../../reducers/userReducer';\nimport { useDispatch } from 'react-redux';\nimport {  useLocation, Redirect } from 'react-router-dom';\nimport {\n  Grid,\n  Loader,\n} from 'semantic-ui-react';\nimport { HomeHeader } from '../HomePage/Home/HomeTheme';\nimport queryString from 'query-string';\nimport { Label as SLabel } from '../Nav/NavTheme';\nimport { toast } from 'react-toastify';\n\nconst Verify = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const [verifyCode, setVerifyCode] = useState();\n  const [situation, setSituation] = useState('started');\n\n  useEffect(() => {\n    setVerifyCode(queryString.parse(location.search));\n  }, [location]);\n\n  useEffect(() => {\n    if (verifyCode && verifyCode.code && verifyCode.u) {\n      dispatch(verifyUser(verifyCode.code, verifyCode.u, setSituation));\n    }\n  }, [verifyCode]);\n\n  if (situation === 'success') {\n    toast.success(`Üyeliğiniz onaylandı`, {\n      position: 'bottom-left',\n      autoClose: 5000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <Grid\n      textAlign=\"center\"\n      style={{ height: '100vh' }}\n      verticalAlign=\"middle\"\n      columns=\"equal\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <HomeHeader as=\"h1\">\n          <label style={{ color: '#2185D0' }}>BOUN</label> ÇİM\n        </HomeHeader>\n\n        <SLabel color=\"blue\" bold style={{ fontSize: '1.5em' }}>\n          {situation === 'started'\n            ? 'Üyeliğinizi onaylıyoruz'\n            : situation === 'failed'\n            ? 'Üyeliğiniz onaylanamadı'\n            : 'Üyeliğiniz Onaylandı'}\n        </SLabel>\n        <br />\n        <br />\n        <Loader\n          active={situation === 'started' ? true : false}\n          inline=\"centered\"\n        />\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Verify;\n","import React, { useEffect, useState } from 'react';\nimport {\n  forgotPassword,\n} from '../../reducers/userReducer';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Segment,\n  Icon,\n  Label,\n  Divider,\n} from 'semantic-ui-react';\nimport { useForm } from 'react-hook-form';\nimport { HomeHeader } from '../HomePage/Home/HomeTheme';\nimport { Label as SLabel } from '../Nav/NavTheme';\nconst ForgotPassword = () => {\n  const { register, handleSubmit, errors, setValue } = useForm();\n  const [loading, setLoading] = useState(false);\n  const dispatch = useDispatch();\n  const onSubmit = async (data) => {\n    setLoading(true);\n    dispatch(forgotPassword(data, setLoading));\n  };\n\n  useEffect(() => {\n    register(\n      { name: 'email' },\n      {\n        required: 'Lütfen boun eposta adresinizi girin.',\n        pattern: {\n          value: /^[A-Z0-9._%+-]+@boun\\.edu\\.tr$/i,\n          message: 'Epostanız @boun.edu.tr ile bitiyor olmalı.',\n        },\n      }\n    );\n  }, []);\n\n  return (\n    <Grid\n      textAlign=\"center\"\n      style={{ height: '100vh' }}\n      verticalAlign=\"middle\"\n      columns=\"equal\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <HomeHeader as=\"h1\">\n          <label style={{ color: '#2185D0' }}>BOUN</label> ÇİM\n        </HomeHeader>\n        <Header as=\"h1\" color=\"green\">\n          Çim Şifrenizi Sıfırlayın.\n        </Header>\n\n        <Form size=\"large\" onSubmit={handleSubmit(onSubmit)}>\n          <Segment>\n            <Form.Field inline>\n              <Form.Input\n                fluid\n                onChange={(e, { name, value }) => setValue(name, value)}\n                icon={<Icon color=\"green\" name=\"mail\" />}\n                iconPosition=\"left\"\n                placeholder=\"Eposta Adresi\"\n                name=\"email\"\n                autoFocus\n                className=\"email-input\"\n              />\n              {errors.email && (\n                <Label\n                  basic\n                  color=\"red\"\n                  pointing=\"above\"\n                  className=\"email-error\"\n                >\n                  {errors.email.message}\n                </Label>\n              )}\n            </Form.Field>\n\n            <Divider />\n            <Button\n              fluid\n              size=\"large\"\n              primary\n              type=\"submit\"\n              loading={loading}\n              className=\"login-button\"\n            >\n              Şifreyi Sıfırla\n            </Button>\n          </Segment>\n        </Form>\n        <Message success>\n          <Link to=\"/login\">\n            <SLabel color=\"green\" bold pointer>\n              Giriş Yap\n            </SLabel>\n          </Link>\n        </Message>\n        <Message info>\n          <Link to=\"/signup\">\n            <b>Hesap Oluştur</b>\n          </Link>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default ForgotPassword;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport {  useLocation, Redirect } from 'react-router';\n\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Segment,\n  Icon,\n  Label,\n  Divider,\n} from 'semantic-ui-react';\nimport { useForm } from 'react-hook-form';\nimport { HomeHeader } from '../HomePage/Home/HomeTheme';\nimport queryString from 'query-string';\nimport {  resetPassword } from '../../reducers/userReducer';\n\nconst ResetPassword = ({ setActiveIndex }) => {\n  const dispatch = useDispatch();\n  const { register, handleSubmit, errors, setValue, watch } = useForm();\n  const location = useLocation();\n  const [parsed, setParsed] = useState();\n  const [sucess, setSucess] = useState(false);\n  useEffect(() => {\n    setParsed(queryString.parse(location.search));\n  }, [location]);\n\n  useEffect(() => {\n    register(\n      { name: 'password' },\n      {\n        minLength: {\n          value: 8,\n          message: 'Yeni şifreniz en az 8 karakterden oluşmalı.',\n        },\n        validate: (comment) =>\n          comment\n            ? (comment && comment.trim().length !== 0) ||\n              'Yeni şifreniz sadece boşluklardan oluşamaz.'\n            : true,\n      }\n    );\n    register(\n      { name: 'samePassword' },\n      {\n        validate: (value) =>\n          value === watch('password') || 'Şifreleriniz uyuşmuyor.',\n      }\n    );\n  }, []);\n\n  const onSubmit = async (data) => {\n    dispatch(resetPassword(data.password, parsed.code, parsed.u, setSucess));\n  };\n\n  if (sucess) {\n    return <Redirect to=\"login\" />;\n  }\n\n  return (\n    <Grid\n      textAlign=\"center\"\n      style={{ height: '90vh' }}\n      verticalAlign=\"middle\"\n      columns=\"equal\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <HomeHeader as=\"h1\">\n          <label style={{ color: '#2185D0' }}>BOUN</label> ÇİM\n        </HomeHeader>\n        <Header as=\"h1\" color=\"green\" textAlign=\"center\">\n          Çim Şifrenizi Güncelleyin.\n        </Header>\n\n        <Form size=\"large\">\n          <Segment>\n            <Form.Field inline>\n              <Form.Input\n                autoComplete=\"new-password\"\n                fluid\n                icon={<Icon color=\"green\" name=\"key\" />}\n                iconPosition=\"left\"\n                placeholder=\"Yeni şifre\"\n                type=\"password\"\n                onChange={(e, { name, value }) => setValue(name, value)}\n                name=\"password\"\n              />\n              {errors.password && (\n                <Label basic color=\"red\" pointing=\"above\">\n                  {errors.password.message}\n                </Label>\n              )}\n            </Form.Field>\n            <Form.Field inline>\n              <Form.Input\n                fluid\n                icon={<Icon color=\"green\" name=\"key\" />}\n                iconPosition=\"left\"\n                placeholder=\"Yeni şifrenizi tekrar girin\"\n                type=\"password\"\n                onChange={(e, { name, value }) => setValue(name, value)}\n                name=\"samePassword\"\n              />\n\n              {errors.samePassword && (\n                <Label basic color=\"red\" pointing=\"above\">\n                  {errors.samePassword.message}\n                </Label>\n              )}\n            </Form.Field>\n            <Divider />\n            <Button fluid size=\"large\" primary onClick={handleSubmit(onSubmit)}>\n              Güncelle\n            </Button>\n          </Segment>\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default ResetPassword;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Login from './components/Login/Login';\nimport Signup from './components/Signup/Signup';\nimport Verify from './components/Verify/Verify';\nimport ForgotPassword from './components/ResetPassword/ForgotPassword';\nimport ResetPassword from './components/ResetPassword/ResetPassword';\nconst UnauthorizedApp = () => {\n  return (\n    <>\n      <Switch>\n        <Route path=\"/signup\" component={Signup} />\n        <Route path=\"/verify\" component={Verify} />\n        <Route path=\"/forgot_password\" component={ForgotPassword} />\n        <Route path=\"/reset_password\" component={ResetPassword} />\n\n        <Route path=\"/\" component={Login} />\n      </Switch>\n    </>\n  );\n};\n\nexport default UnauthorizedApp;\n"],"sourceRoot":""}