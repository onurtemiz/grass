{"version":3,"sources":["components/CoursePlanner/CoursePlannerTable/CoursePlannerTable.js","components/Quota/QuotaLabel.js","components/CoursePlanner/SelectedCourses/SelectedCourses.js","components/CoursePlanner/RequiredCourses/RequiredColumn.js","components/CoursePlanner/RequiredCourses/RequiredCourses.js","components/CoursePlanner/CoursePlannerTable/SearchCourses/SubCourse.js","components/CoursePlanner/CoursePlannerTable/SearchCourses/SearchCourses.js","components/CoursePlanner/ProgramOptions/CreditsSlider.js","components/CoursePlanner/ProgramOptions/ConflictOptions.js","components/CoursePlanner/ProgramOptions/CourseSlider.js","components/CoursePlanner/ProgramOptions/CreateProgram.js","components/CoursePlanner/ProgramOptions/ScenariosSlider.js","components/CoursePlanner/ProgramOptions/ProgramOptions.js","components/CoursePlanner/CoursePlanner.js"],"names":["CellDropdown","c","f","visibleCourses","courses","filter","cCourse","visible","Table","Cell","selectable","style","backgroundColor","color","textAlign","length","upper","Dropdown","icon","fluid","Menu","Item","onClick","findCellTime","notFindCellTime","resetCellTime","FirstThreeCells","dispatch","useDispatch","slice","map","cellCourse","key","name","marginTop","bold","Icon","toggleCellCoursesVisiblity","AllCells","CoursePlannerTable","saving","selectedCourses","useSelector","state","scenarios","useState","scenariosActivePage","setScenariosActivePage","cells","extraHours","rows","setRows","saveColor","setSaveColor","setVisible","paginationVisible","setPaginationVisible","useEffect","setCurrentScenario","dropdownFuncs","findTimeCell","notFindTimeCell","resetTimeCell","toggleVisibilty","i","push","Row","opacity","position","left","time","sort","a","b","day","id","CommentsLoading","celled","size","unstackable","isMobile","Header","HeaderCell","loading","setTimeout","findTime","notFindTime","tryEmptyDay","conflict","requiredCourses","creditsRange","scenariosSlider","courseRange","currentScenario","window","localStorage","setItem","JSON","stringify","saveState","Body","r","Footer","fullWidth","column","colSpan","Pagination","activePage","onPageChange","event","data","evet","handleScenarioChange","firstItem","lastItem","pointing","secondary","totalPages","QuotaLabel","course","text","user","checked","setChecked","followingCourses","includes","parentName","pointer","unFollowCourse","followCourse","float","fontSize","MultipleCourses","stack","stackVisible","setStackVisible","eye","stackEye","setStackEye","toggleStackVisibility","compareNames","last","shortName","stackCourse","sectionCode","cursor","removeSelectedCoursesWithStack","toggleSelectedCoursesEye","SingleCourseSelected","removeSelectedCourse","changeCourseVisibility","to","LESSON_PATH","target","href","areaCode","digitCode","SelectedCourses","credits","setCredits","courseLength","setCourseLength","stackedCourses","setStackedCourses","sc","reduce","total","Number","getStackedCourses","mappedStack","filteredCourses","stacked","forEach","presentsInStacked","find","maxHeight","overflow","marginBottom","columns","marginRight","visibility","MultiRowCourse","rc","removeRequiredWithStack","SingleRowCourse","removeFromRequiredColumn","handleRemoveFromRequiredColumn","RequiredColumn","narrowedCourses","setNarrowedCourses","narrowRequired","stackCourses","presentsInColumns","columnContainsSections","findColumnContainsSections","rcCourse","Grid","Column","removeRequiredColumn","handleRemoveColumn","Popup","content","trigger","className","button","basic","scrolling","addToRequiredColumnMulti","addToRequiredColumn","handleAddToRequiredColumn","RequiredCourses","Button","addNewRequiredColumn","SubCourse","convertDays","days","d","margin","Card","padding","onMouseOver","onHoverCourse","onMouseLeave","foundCourse","clicked","offHoverCourse","handleMouseLeave","display","justifyContent","flexDirection","addSelectedCourse","handleClick","nolink","fullName","hours","place","final","req","extras","e","alignItems","addAllSections","filterCourses","search","isOffline","s","toUpperCase","currentCourses","q","t","hour","found","SearchCourses","count","start","hasMore","targets","setSearch","currentTarget","setCurrentTarget","ready","setReady","noResult","setNoResult","first","useRef","fetching","setIsOffline","refValue","storedTimeout","setStoredTimeout","searchCourse","current","Input","placeholder","value","onChange","clearTimeout","handleValueChange","lang","width","marginLeft","Checkbox","label","hoverable","paddingLeft","fitted","pageStart","loadMore","loader","skeletonLength","useWindow","getMarks","acc","elem","CreditsSlider","min","max","allowCross","changeCreditsRange","marks","trackStyle","HoursDetails","conflictRange","changeConflictRange","getMark","ConflictOptions","accordionOpen","setAccordionOpen","Accordion","Title","active","index","defaultChecked","makeConflict","onOffConflict","Content","CourseSlider","changeCourseRange","between","n","inclusive","Math","apply","CreateProgram","setValue","setLoading","createWithRequired","createWithoutRequired","setScenarios","createWithParams","createProgram","canProgram","checkCanProgram","can","error","maxProgramsLength","possibleScenarios","requiredColumns","otherSelectedCourses","onlys","requiredColumnCourses","rcColumn","lodash","flatten","presents","getOnlySelectedCourses","requiredCoursesCourses","stackedSelectedCourses","loopTwoTimesStack","loopOverStack","requiredStack","optionalStack","scenario","helper","arr","j","l","loopedStack","aditional","canAddToScenarios","potentialCourses","getTotalCoursesCredits","emptyDayMatch","conflictMatch","possibleConflictLength","getPossibleConflictLength","getCoursesDays","singledCourses","uniqBy","possibleCourses","allCellIds","unionCellIds","cellIds","union","getCoursesConflictLength","unionDays","resetCurrentState","ScenariosSlider","changeScenariosSlider","ProgramOptions","toggleTryEmptyDay","CoursePlanner","setSaving","isEqual","initialState","getCurrentState","Dimmer","Loader","inline","height","stretched","timeout","onIdle","debounce","events"],"mappings":"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","file":"static/js/17.6366d846.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Table,\n  Dropdown,\n  Icon,\n  Pagination,\n  Popup,\n  Label as SLabel,\n} from 'semantic-ui-react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  findTimeCell,\n  resetTimeCell,\n  notFindTimeCell,\n  setCurrentScenario,\n  toggleCellCoursesVisiblity,\n} from '../../../reducers/courseReducer';\nimport { Label, StyledLabel } from '../../Nav/NavTheme';\nimport CommentsLoading from '../../Comments/CommentsLoading';\nimport { isMobile } from 'react-device-detect';\nimport { compareNames } from '../../../utils/utils';\nimport { resetCurrentState } from '../../../reducers/courseReducer';\nimport coursesService from '../../../services/courses';\n\nconst CoursePlannerTable = ({ saving }) => {\n  const selectedCourses = useSelector((state) => state.courses.selectedCourses);\n  const scenarios = useSelector((state) => state.courses.scenarios);\n  const [scenariosActivePage, setScenariosActivePage] = useState(0);\n  const cells = useSelector((state) => state.courses.cells);\n  const extraHours = useSelector((state) => state.courses.extraHours);\n  const state = useSelector((state) => state.courses);\n  const dispatch = useDispatch();\n  const [rows, setRows] = useState([]);\n  const [saveColor, setSaveColor] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [paginationVisible, setPaginationVisible] = useState(false);\n  const TOTAL_HOURS = 14;\n\n  useEffect(() => {\n    if (scenarios.length > 0 && scenariosActivePage > 0) {\n      dispatch(setCurrentScenario(scenarios[scenariosActivePage - 1]));\n    }\n  }, [scenariosActivePage, scenarios]);\n\n  useEffect(() => {\n    if (scenarios.length > 0) {\n      setPaginationVisible(true);\n      setScenariosActivePage(1);\n    } else {\n      setScenariosActivePage(0);\n      setPaginationVisible(false);\n      dispatch(setCurrentScenario(selectedCourses));\n    }\n  }, [scenarios]);\n\n  const handleScenarioChange = (evet, data) => {\n    setScenariosActivePage(data.activePage);\n  };\n\n  const findCellTime = (c) => {\n    dispatch(findTimeCell(c));\n  };\n\n  const notFindCellTime = (c) => {\n    dispatch(notFindTimeCell(c));\n  };\n\n  const resetCellTime = (c) => {\n    dispatch(resetTimeCell(c));\n  };\n\n  const dropdownFuncs = { findCellTime, notFindCellTime, resetCellTime };\n\n  const toggleVisibilty = () => {\n    setVisible(!visible);\n  };\n\n  const resetState = () => {\n    dispatch(resetCurrentState());\n  };\n\n  const saveState = () => {\n    setSaveColor(true);\n    setTimeout(() => {\n      setSaveColor(false);\n    }, 2000);\n    const {\n      selectedCourses,\n      cells,\n      findTime,\n      notFindTime,\n      tryEmptyDay,\n      conflict,\n      extraHours,\n      requiredCourses,\n      creditsRange,\n      scenariosSlider,\n      courseRange,\n      scenarios,\n      currentScenario,\n    } = state;\n    window.localStorage.setItem(\n      'planner',\n      JSON.stringify({\n        selectedCourses,\n        cells,\n        findTime,\n        notFindTime,\n        tryEmptyDay,\n        conflict,\n        extraHours,\n        requiredCourses,\n        creditsRange,\n        scenariosSlider,\n        courseRange,\n        scenarios,\n        currentScenario,\n      })\n    );\n  };\n\n  useEffect(() => {\n    const rows = [];\n    for (let i = 0; i < TOTAL_HOURS; i++) {\n      rows.push(\n        <Table.Row\n          style={{\n            opacity: visible || i <= 8 ? null : '0,0',\n            position: visible || i <= 8 ? null : 'absolute',\n            left: visible || i <= 8 ? null : '-999999px',\n          }}\n          key={i}\n        >\n          <Table.Cell style={{ backgroundColor: '#F9FAFB' }}>\n            <Label color=\"green\" bold>\n              {i === 0 ? '09' : i + 9}:00\n            </Label>\n          </Table.Cell>\n          {cells\n            .filter((c) => c.time === i)\n            .sort((a, b) => a.day - b.day)\n\n            .map((c) => {\n              return <CellDropdown key={c.id} c={c} f={dropdownFuncs} />;\n            })}\n        </Table.Row>\n      );\n    }\n    setRows(rows);\n  }, [cells, visible]);\n\n  if (cells.length === 0 || rows.length === 0) {\n    return <CommentsLoading />;\n  }\n  return (\n    <Table celled size=\"small\" unstackable={isMobile}>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell textAlign=\"center\">\n            {saving ? (\n              <Icon name=\"sync\" loading={true} color=\"green\" size=\"large\" />\n            ) : (\n              <Icon\n                name=\"save outline\"\n                color={saveColor ? 'green' : 'blue'}\n                size=\"large\"\n                onClick={() => saveState()}\n              />\n            )}\n          </Table.HeaderCell>\n\n          <Table.HeaderCell>\n            <Label color=\"blue\" bold>\n              Pazartesi\n            </Label>\n          </Table.HeaderCell>\n          <Table.HeaderCell>\n            <Label color=\"blue\" bold>\n              Salı\n            </Label>\n          </Table.HeaderCell>\n          <Table.HeaderCell>\n            <Label color=\"blue\" bold>\n              Çarşamba\n            </Label>\n          </Table.HeaderCell>\n          <Table.HeaderCell>\n            <Label color=\"blue\" bold>\n              Perşembe\n            </Label>\n          </Table.HeaderCell>\n          <Table.HeaderCell>\n            <Label color=\"blue\" bold>\n              Cuma\n            </Label>\n          </Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n\n      <Table.Body>\n        {rows.map((r) => {\n          return r;\n        })}\n      </Table.Body>\n      <Table.Footer fullWidth>\n        <Table.Row\n          column={1}\n          textAlign=\"center\"\n          style={{\n            opacity: paginationVisible ? null : '0,0',\n            position: paginationVisible ? null : 'absolute',\n            left: paginationVisible ? null : '-999999px',\n          }}\n        >\n          <Table.Cell colSpan=\"6\">\n            <Pagination\n              activePage={scenariosActivePage}\n              onPageChange={(event, data) => handleScenarioChange(event, data)}\n              firstItem={null}\n              lastItem={null}\n              pointing\n              secondary\n              totalPages={scenarios.length}\n            />\n          </Table.Cell>\n        </Table.Row>\n        <Table.Row textAlign=\"center\" column={1}>\n          <Table.Cell selectable colSpan=\"6\" onClick={() => toggleVisibilty()}>\n            <Icon\n              color={extraHours ? 'green' : 'blue'}\n              name={visible ? 'sort up' : 'dropdown'}\n              size=\"large\"\n              onClick={() => toggleVisibilty()}\n            />\n          </Table.Cell>\n        </Table.Row>\n      </Table.Footer>\n    </Table>\n  );\n};\n\nconst CellDropdown = ({ c, f }) => {\n  const visibleCourses = c.courses.filter((cCourse) => cCourse.visible == true);\n  return (\n    <Table.Cell\n      selectable\n      style={{\n        backgroundColor: c.color ? c.color : null,\n      }}\n      textAlign=\"center\"\n    >\n      {visibleCourses.length < 4 ? (\n        <AllCells visibleCourses={visibleCourses} c={c} />\n      ) : c.visible ? (\n        <AllCells visibleCourses={visibleCourses} c={c} upper />\n      ) : (\n        <FirstThreeCells visibleCourses={visibleCourses} c={c} />\n      )}\n\n      <Dropdown icon=\"\" fluid>\n        <Dropdown.Menu>\n          <Dropdown.Item onClick={() => f.findCellTime(c)}>\n            Bu saatte ders ara\n          </Dropdown.Item>\n          <Dropdown.Item onClick={() => f.notFindCellTime(c)}>\n            Bu saatte ders arama\n          </Dropdown.Item>\n          <Dropdown.Item onClick={() => f.resetCellTime(c)}>\n            Sıfırla\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    </Table.Cell>\n  );\n};\n\nconst FirstThreeCells = ({ visibleCourses, c }) => {\n  const dispatch = useDispatch();\n  const makeCellCoursesVisible = () => {\n    dispatch(toggleCellCoursesVisiblity(c, true));\n  };\n  return (\n    <>\n      {c.courses\n        .filter((cCourse) => cCourse.visible)\n        .slice(0, 3)\n        .map((cellCourse) => {\n          return (\n            <div key={cellCourse.name}>\n              <StyledLabel\n                style={{ marginTop: '0.5em' }}\n                color={cellCourse.color}\n              >\n                <Label color=\"white\" bold>\n                  {cellCourse.name}\n                </Label>\n              </StyledLabel>\n              <br />\n            </div>\n          );\n        })}\n      <Icon name=\"caret down\" onClick={() => makeCellCoursesVisible()} />\n    </>\n  );\n};\n\nconst AllCells = ({ visibleCourses, c, upper }) => {\n  const dispatch = useDispatch();\n  const makeCellCoursesHidden = () => {\n    dispatch(toggleCellCoursesVisiblity(c, false));\n  };\n\n  return (\n    <>\n      {visibleCourses.length !== 0 &&\n        c.courses\n          .filter((cCourse) => cCourse.visible)\n          .map((cellCourse) => {\n            return (\n              <div key={cellCourse.name}>\n                <StyledLabel\n                  color={cellCourse.color}\n                  style={{ marginTop: '0.5em' }}\n                >\n                  <Label color=\"white\" bold>\n                    {cellCourse.name}\n                  </Label>\n                </StyledLabel>\n                <br />\n              </div>\n            );\n          })}\n      {upper ? (\n        <Icon name=\"caret up\" onClick={() => makeCellCoursesHidden()} />\n      ) : null}\n    </>\n  );\n};\n\nexport default CoursePlannerTable;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { followCourse, unFollowCourse } from '../../reducers/userReducer';\nimport { Icon } from 'semantic-ui-react';\nimport { Label } from '../Nav/NavTheme';\n\nconst QuotaLabel = ({ course, text }) => {\n  const user = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n  const [checked, setChecked] = useState(false);\n\n  useEffect(() => {\n    setChecked(user.followingCourses.includes(course.id));\n  }, [user]);\n\n  const handleFollowCourse = () => {\n    if (checked) {\n      dispatch(unFollowCourse(user, course.id));\n    } else {\n      dispatch(followCourse(user, course.id));\n    }\n  };\n  return course.parentName === 'STAFF STAFF' ? null : (\n    <>\n      <Label\n        color={!text ? (checked ? 'blue' : 'green') : 'blue'}\n        bold\n        pointer\n        onClick={() => handleFollowCourse()}\n        style={{ float: 'right', fontSize: '0.8em' }}\n      >\n        <Icon name=\"sliders\" />\n        {text && (checked ? ' Kota Takip Bırak' : ' Kota Takip Et')}\n      </Label>\n    </>\n  );\n};\n\nexport default QuotaLabel;\n","import React, { useState, useEffect } from 'react';\nimport { Table, Icon } from 'semantic-ui-react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Label } from '../../Nav/NavTheme';\nimport {\n  removeSelectedCourse,\n  changeCourseVisibility,\n  removeSelectedCoursesWithStack,\n  toggleSelectedCoursesEye,\n} from '../../../reducers/courseReducer';\nimport { compareNames } from '../../../utils/utils';\nimport { LESSON_PATH } from '../../../utils/config';\nimport { Link } from 'react-router-dom';\nimport QuotaLabel from '../../Quota/QuotaLabel';\n\nconst SelectedCourses = () => {\n  const selectedCourses = useSelector((state) => state.courses.selectedCourses);\n  const [credits, setCredits] = useState(0);\n  const [courseLength, setCourseLength] = useState(0);\n  const [stackedCourses, setStackedCourses] = useState([]);\n  useEffect(() => {\n    setCredits(\n      selectedCourses\n        .filter((sc) => sc.visible === true)\n        .reduce((total, c) => {\n          return total + Number(c.credits);\n        }, 0)\n    );\n    setCourseLength(selectedCourses.filter((sc) => sc.visible === true).length);\n    setStackedCourses(getStackedCourses());\n  }, [selectedCourses]);\n\n  const getStackedCourses = () => {\n    let filteredStack = stackedCourses.filter((stack) =>\n      selectedCourses\n        .map((sc) => `${sc.areaCode}${sc.digitCode}`)\n        .includes(stack.shortName)\n    );\n    let mappedStack = filteredStack.map((stack) => {\n      let filteredCourses = stack.courses.filter((stackCourse) =>\n        selectedCourses.map((sc) => sc.id).includes(stackCourse)\n      );\n      return { ...stack, courses: filteredCourses };\n    });\n    let stacked = [...mappedStack];\n    selectedCourses.forEach((sc) => {\n      let presentsInStacked = stacked.find(\n        (stack) => stack.shortName === `${sc.areaCode}${sc.digitCode}`\n      );\n      if (presentsInStacked) {\n        presentsInStacked.courses.push(sc);\n      } else {\n        stacked.push({\n          courses: [sc],\n          shortName: `${sc.areaCode}${sc.digitCode}`,\n          visible: false,\n          eye: true,\n        });\n      }\n    });\n    return stacked;\n  };\n\n  return (\n    <>\n      <div style={{ maxHeight: '70vh', overflow: 'auto', marginBottom: '1em' }}>\n        <Table columns={1}>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>\n                <Label color=\"blue\" bold>\n                  Seçili Dersler\n                </Label>\n\n                <Label color=\"green\" bold style={{ float: 'right' }}>\n                  {credits} Kredi\n                </Label>\n                <Label\n                  color=\"green\"\n                  bold\n                  style={{ float: 'right', marginRight: '1em' }}\n                >\n                  {courseLength} Ders\n                </Label>\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {stackedCourses.length === 0 ? (\n              <Table.Row>\n                <Table.Cell>\n                  <span style={{ visibility: 'hidden' }}>a</span>\n                </Table.Cell>\n              </Table.Row>\n            ) : (\n              stackedCourses.map((stack, i) => {\n                return stack.courses.length === 1 ? (\n                  <SingleCourseSelected\n                    c={stack.courses[0]}\n                    key={stack.courses[0].id}\n                  />\n                ) : (\n                  <MultipleCourses stack={stack} id={i} key={i} />\n                );\n              })\n            )}\n          </Table.Body>\n        </Table>\n      </div>\n    </>\n  );\n};\n\nconst MultipleCourses = ({ stack }) => {\n  const dispatch = useDispatch();\n  const [stackVisible, setStackVisible] = useState(stack.visible);\n  const [stackEye, setStackEye] = useState(stack.eye);\n\n  const toggleStackVisibility = () => {\n    setStackVisible(!stackVisible);\n  };\n\n  const handleRemove = () => {\n    dispatch(removeSelectedCoursesWithStack(stack));\n  };\n\n  const toggleStackEye = () => {\n    dispatch(toggleSelectedCoursesEye(stack, !stackEye));\n    setStackEye(!stackEye);\n  };\n\n  if (stackVisible) {\n    return stack.courses.sort(compareNames).map((c, i) => {\n      return (\n        <SingleCourseSelected\n          c={c}\n          key={c.id}\n          last={i === stack.courses.length - 1 ? true : false}\n          toggleStackVisibility={toggleStackVisibility}\n        />\n      );\n    });\n  }\n  return (\n    <Table.Row>\n      <Table.Cell>\n        <Label color=\"blue\" bold>\n          {stack.shortName}{' '}\n        </Label>\n\n        {stack.courses.sort(compareNames).map((stackCourse) => {\n          return (\n            <Label color=\"green\" bold key={stackCourse.id}>\n              {stackCourse.sectionCode}{' '}\n            </Label>\n          );\n        })}\n        <Icon\n          name=\"delete\"\n          color=\"green\"\n          style={{ float: 'right', cursor: 'pointer' }}\n          onClick={() => {\n            handleRemove();\n          }}\n        />\n        <Icon\n          name={'caret down'}\n          color=\"green\"\n          style={{ float: 'right', cursor: 'pointer' }}\n          onClick={() => toggleStackVisibility()}\n        />\n        <Icon\n          name={stackEye ? 'eye' : 'eye slash'}\n          color={stackEye ? 'green' : 'red'}\n          style={{ float: 'right', cursor: 'pointer' }}\n          onClick={() => toggleStackEye()}\n        />\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nexport const SingleCourseSelected = ({ c, last, toggleStackVisibility }) => {\n  const dispatch = useDispatch();\n  const handleClick = (course) => {\n    dispatch(removeSelectedCourse(course));\n  };\n\n  const toggleCourseVisiblity = (course) => {\n    dispatch(changeCourseVisibility(course));\n  };\n  return (\n    <Table.Row>\n      <Table.Cell>\n        <Label color=\"blue\" bold>\n          {c.name}{' '}\n        </Label>\n        <Icon\n          name=\"delete\"\n          color=\"green\"\n          style={{ float: 'right', cursor: 'pointer' }}\n          onClick={() => {\n            handleClick(c);\n          }}\n        />\n        {last && (\n          <Icon\n            name={'caret up'}\n            color=\"green\"\n            style={{ float: 'right', cursor: 'pointer' }}\n            onClick={() => toggleStackVisibility()}\n          />\n        )}\n        <Icon\n          name={c.visible ? 'eye' : 'eye slash'}\n          color={c.visible ? 'green' : 'red'}\n          style={{ float: 'right', cursor: 'pointer' }}\n          onClick={() => toggleCourseVisiblity(c)}\n        />\n        {c.parentName !== 'STAFF STAFF' && (\n          <Link to={LESSON_PATH(c)}>\n            <Icon\n              name={'comment'}\n              color={'green'}\n              style={{ float: 'right', cursor: 'pointer' }}\n            />\n          </Link>\n        )}\n        {c.parentName !== 'STAFF STAFF' && (\n          <a\n            target=\"_blank\"\n            href={`http://registration.boun.edu.tr/scripts/schedule/coursedescription.asp?course=${c.areaCode}${c.digitCode}&section=${c.sectionCode}&term=2019%2F2020-1`}\n          >\n            <Label\n              color=\"green\"\n              bold\n              pointer\n              style={{ float: 'right', fontSize: '0.8em' }}\n            >\n              <Icon name=\"file alternate\" />\n            </Label>\n          </a>\n        )}\n        {c.parentName !== 'STAFF STAFF' && <QuotaLabel course={c} />}\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nexport default SelectedCourses;\n","import React, { useState, useEffect } from 'react';\nimport { Table, Grid, Icon, Dropdown, Popup } from 'semantic-ui-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  removeRequiredColumn,\n  addToRequiredColumn,\n  removeFromRequiredColumn,\n  removeRequiredWithStack,\n  addToRequiredColumnMulti,\n} from '../../../reducers/courseReducer';\nimport { Label } from '../../Nav/NavTheme';\nimport { compareNames } from '../../../utils/utils';\n\nconst RequiredColumn = ({ rc, i }) => {\n  const dispatch = useDispatch();\n  const selectedCourses = useSelector((state) => state.courses.selectedCourses);\n  const requiredCourses = useSelector((state) => state.courses.requiredCourses);\n  const [narrowedCourses, setNarrowedCourses] = useState([]);\n  const [stackedCourses, setStackedCourses] = useState([]);\n  useEffect(() => {\n    setNarrowedCourses(narrowRequired());\n  }, [selectedCourses, requiredCourses]);\n\n  useEffect(() => {\n    setStackedCourses(stackCourses(rc.courses));\n  }, [rc]);\n\n  const handleRemoveColumn = (rc) => {\n    dispatch(removeRequiredColumn(rc));\n  };\n\n  const stackCourses = (courses) => {\n    let stacked = [];\n    courses.forEach((sc) => {\n      let presentsInStacked = stacked.find(\n        (stack) => stack.shortName === `${sc.areaCode}${sc.digitCode}`\n      );\n      if (presentsInStacked) {\n        presentsInStacked.courses.push(sc);\n      } else {\n        stacked.push({\n          courses: [sc],\n          shortName: `${sc.areaCode}${sc.digitCode}`,\n          visible: false,\n        });\n      }\n    });\n    return stacked;\n  };\n\n  const handleAddToRequiredColumn = (rc, course) => {\n    if (course.stack) {\n      dispatch(addToRequiredColumnMulti(rc, course));\n    } else {\n      dispatch(addToRequiredColumn(rc, course));\n    }\n  };\n  const handleRemoveFromRequiredColumn = (rc, course) => {\n    dispatch(removeFromRequiredColumn(rc, course));\n  };\n\n  const narrowRequired = () => {\n    let narrowedCourses = [];\n\n    for (let i = 0; i < selectedCourses.length; i++) {\n      if (presentsInColumns(selectedCourses[i])) continue;\n      const columnContainsSections = findColumnContainsSections(\n        selectedCourses[i]\n      );\n      if (columnContainsSections && columnContainsSections.id !== rc.id)\n        continue;\n\n      narrowedCourses.push(selectedCourses[i]);\n    }\n    stackCourses(narrowedCourses).forEach((stack) => {\n      if (stack.courses.length > 1) {\n        narrowedCourses.push({\n          name: `${stack.shortName} HEPSİ`,\n          courses: stack.courses,\n          stack: true,\n        });\n      }\n    });\n\n    return narrowedCourses;\n  };\n\n  const presentsInColumns = (course) => {\n    for (let i = 0; i < requiredCourses.length; i++) {\n      let foundCourse = requiredCourses[i].courses.find(\n        (rcCourse) => rcCourse.id === course.id\n      );\n      if (foundCourse) return true;\n    }\n    return false;\n  };\n\n  function findColumnContainsSections(course) {\n    for (let i = 0; i < requiredCourses.length; i++) {\n      let foundSections = requiredCourses[i].courses.find(\n        (rcCourse) =>\n          rcCourse.digitCode === course.digitCode &&\n          rcCourse.areaCode === course.areaCode\n      );\n      if (foundSections) return requiredCourses[i];\n    }\n  }\n\n  return (\n    <Grid.Column style={{ marginTop: '1em' }}>\n      <Table>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>\n              <Label color=\"blue\" bold style={{ fontSize: '12px' }}>\n                Bu Derslerden Biri Kesin Eklensin\n              </Label>\n              {i > 0 ? (\n                <Icon\n                  color=\"green\"\n                  name=\"cancel\"\n                  style={{ float: 'right' }}\n                  onClick={() => handleRemoveColumn(rc)}\n                />\n              ) : (\n                <Popup\n                  content=\"Oluşturulan her bir programda aşağıdaki derslerden bir tanesi programda kesinlikle yer alacak.\"\n                  trigger={\n                    <Icon\n                      name=\"question circle outline\"\n                      color=\"grey\"\n                      style={{ float: 'right' }}\n                      size=\"large\"\n                    />\n                  }\n                  position=\"top center\"\n                />\n              )}\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          <Table.Row>\n            <Table.Cell>\n              <Dropdown\n                text=\"Seçili Derslerden EKLE\"\n                className=\"icon\"\n                button\n                basic\n                fluid\n                scrolling\n                pointing={\n                  (i + 1) % 5 === 0 && narrowedCourses.length === 0\n                    ? 'right'\n                    : 'up'\n                }\n              >\n                <Dropdown.Menu>\n                  {narrowedCourses.length === 0 ? (\n                    <Dropdown.Item>\n                      Buraya eklenecek başka uygun bir ders yok.\n                    </Dropdown.Item>\n                  ) : (\n                    narrowedCourses.sort(compareNames).map((sc) => {\n                      return (\n                        <Dropdown.Item\n                          onClick={() => handleAddToRequiredColumn(rc, sc)}\n                          key={sc.name}\n                        >\n                          {sc.name}\n                        </Dropdown.Item>\n                      );\n                    })\n                  )}\n                </Dropdown.Menu>\n              </Dropdown>\n            </Table.Cell>\n          </Table.Row>\n          {stackedCourses.map((stack) => {\n            return stack.courses.length === 1 ? (\n              <SingleRowCourse\n                rc={rc}\n                course={stack.courses[0]}\n                key={stack.id}\n              />\n            ) : (\n              <MultiRowCourse rc={rc} stack={stack} key={stack.id} />\n            );\n          })}\n        </Table.Body>\n      </Table>\n    </Grid.Column>\n  );\n};\n\nconst MultiRowCourse = ({ rc, stack }) => {\n  const dispatch = useDispatch();\n  const [stackVisible, setStackVisible] = useState(stack.visible);\n\n  const toggleStackVisibility = () => {\n    setStackVisible(!stackVisible);\n  };\n\n  const handleRemove = () => {\n    dispatch(removeRequiredWithStack(stack));\n  };\n\n  if (stackVisible) {\n    return stack.courses.sort(compareNames).map((c, i) => {\n      return (\n        <SingleRowCourse\n          rc={rc}\n          key={c.id}\n          course={c}\n          last={i === stack.courses.length - 1 ? true : false}\n          toggleStackVisibility={toggleStackVisibility}\n        />\n      );\n    });\n  }\n  return (\n    <Table.Row>\n      <Table.Cell>\n        <Label color=\"blue\" bold>\n          {stack.shortName}{' '}\n        </Label>\n\n        {stack.courses.sort(compareNames).map((stackCourse) => {\n          return (\n            <Label color=\"green\" bold>\n              {stackCourse.sectionCode}{' '}\n            </Label>\n          );\n        })}\n        <Icon\n          name=\"delete\"\n          color=\"green\"\n          style={{ float: 'right', cursor: 'pointer' }}\n          onClick={() => {\n            handleRemove();\n          }}\n        />\n        <Icon\n          name={'caret down'}\n          color=\"green\"\n          style={{ float: 'right', cursor: 'pointer' }}\n          onClick={() => toggleStackVisibility()}\n        />\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nconst SingleRowCourse = ({ rc, course, last, toggleStackVisibility }) => {\n  const dispatch = useDispatch();\n  const handleRemoveFromRequiredColumn = (rc, course) => {\n    dispatch(removeFromRequiredColumn(rc, course));\n  };\n  return (\n    <Table.Row>\n      <Table.Cell>\n        <Label color=\"blue\" bold>\n          {course.name}\n        </Label>\n        <Icon\n          name=\"cancel\"\n          color=\"green\"\n          style={{ float: 'right' }}\n          onClick={() => handleRemoveFromRequiredColumn(rc, course)}\n        />{' '}\n        {last ? (\n          <Icon\n            name={'caret up'}\n            color=\"green\"\n            style={{ float: 'right', cursor: 'pointer' }}\n            onClick={() => toggleStackVisibility()}\n          />\n        ) : null}\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nexport default RequiredColumn;\n","import React from 'react';\nimport {  Grid, Button, Icon } from 'semantic-ui-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addNewRequiredColumn,\n} from '../../../reducers/courseReducer';\nimport RequiredColumn from './RequiredColumn';\nconst RequiredCourses = () => {\n  const dispatch = useDispatch();\n  const requiredCourses = useSelector((state) => state.courses.requiredCourses);\n\n  const handleAddColumn = () => {\n    dispatch(addNewRequiredColumn());\n  };\n\n  return (\n    <>\n      {requiredCourses\n        .sort((a, b) => Number(a.id) - Number(b.id))\n        .map((rc, i) => {\n          return <RequiredColumn rc={rc} i={i} key={rc.id} />;\n        })}\n\n      <Grid.Column\n        style={{\n          visibility: requiredCourses.length > 9 ? 'hidden' : 'visible',\n          marginTop: '1em',\n        }}\n      >\n        <Button icon onClick={() => handleAddColumn()} color=\"blue\">\n          <Icon name=\"add\" />\n        </Button>\n      </Grid.Column>\n    </>\n  );\n};\n\nexport default RequiredCourses;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Icon } from 'semantic-ui-react';\nimport { Label } from '../../../Nav/NavTheme';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addSelectedCourse,\n  removeSelectedCourse,\n  onHoverCourse,\n  offHoverCourse,\n  addAllSections,\n} from '../../../../reducers/courseReducer';\nimport { LESSON_PATH } from '../../../../utils/config';\nimport QuotaLabel from '../../../Quota/QuotaLabel';\n\nconst SubCourse = ({ course }) => {\n  const selectedCourses = useSelector((state) => state.courses.selectedCourses);\n  const dispatch = useDispatch();\n  const handleClick = () => {\n    const foundCourse = selectedCourses.find((c) => c.id === course.id);\n    if (foundCourse && foundCourse.clicked) {\n      dispatch(removeSelectedCourse(course));\n    } else {\n      dispatch(addSelectedCourse(course));\n    }\n  };\n  const handleAddAllSections = () => {\n    dispatch(addAllSections(course.areaCode, course.digitCode));\n  };\n\n  const handleMouseEnter = () => {\n    const foundCourse = selectedCourses.find((c) => c.id === course.id);\n    if (!foundCourse) {\n      dispatch(onHoverCourse(course));\n    }\n  };\n\n  const handleMouseLeave = () => {\n    const foundCourse = selectedCourses.find((c) => c.id === course.id);\n    if (foundCourse && !foundCourse.clicked) {\n      dispatch(offHoverCourse(course));\n    }\n  };\n\n  const convertDays = (days) => {\n    days = days.map((d) => {\n      if (d === 0) {\n        return 'M';\n      } else if (d === 1) {\n        return 'T';\n      } else if (d === 2) {\n        return 'W';\n      } else if (d === 3) {\n        return 'Th';\n      } else {\n        return 'F';\n      }\n    });\n    return days;\n  };\n\n  return (\n    <div\n      style={{\n        margin: '0.8em',\n      }}\n    >\n      <Card\n        fluid\n        style={{ padding: '0.5em' }}\n        onMouseOver={() => handleMouseEnter()}\n        onMouseLeave={() => handleMouseLeave()}\n      >\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              cursor: 'pointer',\n            }}\n            onClick={() => handleClick()}\n          >\n            <div>\n              <Label color=\"blue\" bold pointer nolink>\n                {course.name}\n              </Label>{' '}\n              <Label color=\"green\" bold pointer nolink>\n                {course.parentName}\n              </Label>\n            </div>\n            <div style={{ color: '#00000066' }}>{course.fullName}</div>\n            <div>\n              <Label color=\"blue\" bold pointer nolink>\n                <Icon name=\"calendar\" />\n                {convertDays(course.days)}\n              </Label>{' '}\n              <Label color=\"green\" bold pointer nolink>\n                <Icon name=\"clock\" />\n                {course.hours}\n              </Label>{' '}\n              <Label color=\"blue\" bold pointer nolink>\n                {course.credits} Kredi\n              </Label>\n            </div>\n            <div>\n              <Label\n                color={course.place === 'Online' ? 'blue' : 'green'}\n                bold\n                pointer\n                nolink\n              >\n                {course.place} Ders\n              </Label>{' '}\n              <Label\n                color={course.place === 'Online' ? 'blue' : 'green'}\n                bold\n                pointer\n                nolink\n              >\n                {course.final} Final\n              </Label>\n            </div>\n\n            {course.req && (\n              <Label color=\"blue\" bold pointer nolink>\n                Bu Bölümlere Zorunlu: {course.req}\n              </Label>\n            )}\n            {course.extras &&\n              course.extras.length > 0 &&\n              course.extras.map((e, i) => {\n                return (\n                  <div key={i}>\n                    <Label color=\"blue\" bold pointer nolink>\n                      {e.name}\n                    </Label>{' '}\n                    <Label color=\"blue\" bold pointer nolink>\n                      <Icon name=\"calendar\" />\n\n                      {convertDays(e.days)}\n                    </Label>{' '}\n                    <Label color=\"green\" bold pointer nolink>\n                      <Icon name=\"clock\" />\n\n                      {course.hours}\n                    </Label>\n                  </div>\n                );\n              })}\n          </div>\n          <div\n            style={{\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'flex-end',\n            }}\n          >\n            {course.parentName !== 'STAFF STAFF' && (\n              <Link to={LESSON_PATH(course)}>\n                <Label color=\"blue\" bold pointer style={{ fontSize: '0.8em' }}>\n                  <Icon name=\"comments\" />\n                  Yorumlara bak\n                </Label>\n              </Link>\n            )}\n            <QuotaLabel course={course} text />\n            <Label\n              color=\"blue\"\n              bold\n              pointer\n              style={{ fontSize: '0.8em' }}\n              onClick={() => handleAddAllSections()}\n            >\n              <Icon name=\"add\" />\n              Bütün sectionları ekle\n            </Label>\n            {course.parentName !== 'STAFF STAFF' && (\n              <a\n                target=\"_blank\"\n                href={`http://registration.boun.edu.tr/scripts/schedule/coursedescription.asp?course=${course.areaCode}${course.digitCode}&section=${course.sectionCode}&term=2019%2F2020-1`}\n              >\n                <Label color=\"blue\" bold pointer style={{ fontSize: '0.8em' }}>\n                  <Icon name=\"file alternate\" />\n                  Geçmiş Syllabusa Bak\n                </Label>\n              </a>\n            )}\n          </div>\n        </div>\n      </Card>\n    </div>\n  );\n};\n\nexport default SubCourse;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Input, Icon, Popup, Checkbox } from 'semantic-ui-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport InfiniteScroll from 'react-infinite-scroller';\n\nimport { searchCourse } from '../../../../reducers/courseReducer';\nimport { compareNames } from '../../../../utils/utils';\nimport SubCourse from './SubCourse';\nimport CommentsLoading from '../../../Comments/CommentsLoading';\nimport NoSubResult from '../../../Search/NoSubResult';\nconst SearchCourses = () => {\n  const count = useSelector((state) => state.courses.count);\n  const start = useSelector((state) => state.courses.start);\n  const hasMore = useSelector((state) => state.courses.hasMore);\n  const targets = useSelector((state) => state.courses.courses);\n  const findTime = useSelector((state) => state.courses.findTime);\n  const [search, setSearch] = useState('');\n  const notFindTime = useSelector((state) => state.courses.notFindTime);\n  const dispatch = useDispatch();\n  const [currentTarget, setCurrentTarget] = useState([]);\n  const [ready, setReady] = useState(false);\n  const [noResult, setNoResult] = useState(true);\n  const first = useRef(false);\n  const fetching = useRef(false);\n  const [isOffline, setIsOffline] = useState(false);\n  const refValue = useRef('');\n  const [storedTimeout, setStoredTimeout] = useState(null);\n\n  useEffect(() => {\n    dispatch(\n      searchCourse(\n        0,\n        count,\n        first,\n        fetching,\n        search,\n        findTime.map((t) => t.id),\n        notFindTime.map((t) => t.id),\n        isOffline\n      )\n    );\n  }, [search, findTime, notFindTime, isOffline]);\n\n  useEffect(() => {\n    setCurrentTarget(\n      filterCourses(targets, search, findTime, notFindTime, isOffline)\n    );\n  }, [targets, findTime, notFindTime, isOffline]);\n\n  const loadFunc = () => {\n    if (!fetching.current) {\n      dispatch(\n        searchCourse(\n          start,\n          count,\n          first,\n          fetching,\n          search,\n          findTime.map((t) => t.id),\n          notFindTime.map((t) => t.id),\n          isOffline\n        )\n      );\n    }\n  };\n\n  useEffect(() => {\n    if (first.current && currentTarget.length === 0) {\n      setNoResult(true);\n    } else if (currentTarget.length !== 0 && first.current) {\n      setNoResult(false);\n    }\n    if (!first.current) {\n      setReady(false);\n    } else {\n      setReady(true);\n    }\n  }, [currentTarget, first]);\n\n  const handleValueChange = (e) => {\n    refValue.current = e.target.value;\n\n    if (storedTimeout) clearTimeout(storedTimeout);\n    setStoredTimeout(\n      setTimeout(() => {\n        setSearch(refValue.current);\n      }, 300)\n    );\n  };\n\n  return (\n    <>\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <Input\n          icon=\"search\"\n          placeholder={`Ders Arayın...`}\n          value={refValue.current}\n          onChange={(e) => handleValueChange(e)}\n          lang=\"tr\"\n          size=\"big\"\n          style={{ width: '90%', marginLeft: '1em' }}\n        />\n        <Popup\n          content={\n            <Checkbox\n              checked={isOffline}\n              onClick={() => setIsOffline(!isOffline)}\n              label=\"Sadece Offline Dersleri Göster\"\n            />\n          }\n          position=\"bottom right\"\n          hoverable\n          trigger={\n            <Icon\n              name=\"filter\"\n              color=\"blue\"\n              size=\"big\"\n              style={{ paddingLeft: '0.5em' }}\n              fitted\n            />\n          }\n        />\n      </div>\n      <div\n        style={{\n          overflow: 'auto',\n          maxHeight: '70vh',\n          marginTop: '1em',\n        }}\n      >\n        {!ready ? (\n          <CommentsLoading />\n        ) : noResult ? (\n          <div>Sonuç bulunamadı.</div>\n        ) : (\n          <InfiniteScroll\n            pageStart={0}\n            loadMore={loadFunc}\n            hasMore={hasMore}\n            loader={\n              <div className=\"loader\" key={0}>\n                <CommentsLoading skeletonLength={1} />\n              </div>\n            }\n            useWindow={false}\n          >\n            {currentTarget.map((c) => (\n              <SubCourse course={c} key={c.id} />\n            ))}\n          </InfiniteScroll>\n        )}\n      </div>\n    </>\n  );\n};\n\nconst filterCourses = (courses, search, findTime, notFindTime, isOffline) => {\n  let s = search.toUpperCase();\n  let currentCourses = courses\n    .filter((c) => {\n      if (isOffline) {\n        return c.place !== 'Online';\n      } else {\n        return true;\n      }\n    })\n    .filter(\n      (c) =>\n        c.name.toUpperCase().includes(s) ||\n        c.parentName.toUpperCase().includes(s)\n    )\n    .sort(compareNames);\n  if (findTime.length > 0) {\n    currentCourses = currentCourses.filter((course) => {\n      let q = 0;\n      course.days.forEach((d, i) => {\n        findTime.forEach((t) => {\n          if (course.days[i] === t.day && course.hours[i] === t.hour) {\n            q++;\n          }\n        });\n      });\n      return q === findTime.length;\n    });\n  }\n  if (notFindTime.length > 0) {\n    currentCourses = currentCourses.filter((course) => {\n      let found = false;\n      course.days.forEach((d, i) => {\n        notFindTime.forEach((t) => {\n          if (course.days[i] === t.day && course.hours[i] === t.hour) {\n            found = true;\n          }\n        });\n      });\n      return !found;\n    });\n  }\n\n  return currentCourses;\n};\n\nexport default SearchCourses;\n","import React  from 'react';\nimport 'rc-slider/assets/index.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeCreditsRange } from '../../../reducers/courseReducer';\nimport { Label, StyledRange } from '../../Nav/NavTheme';\n\nconst CreditsSlider = () => {\n  const creditsRange = useSelector((state) => state.courses.creditsRange);\n  const dispatch = useDispatch();\n  const onSliderChange = (value) => {\n    dispatch(changeCreditsRange(value));\n  };\n  return (\n    <div>\n      <p>\n        <Label color=\"blue\" bold>\n          Kredi Aralığı\n        </Label>\n      </p>\n      <StyledRange\n        min={2}\n        max={40}\n        allowCross={false}\n        onChange={onSliderChange}\n        value={creditsRange}\n        marks={getMarks(creditsRange)}\n        trackStyle={[\n          { backgroundColor: '#21ba45' },\n          { backgroundColor: '#21ba45' },\n        ]}\n      />\n    </div>\n  );\n};\n\nconst getMarks = (value) => {\n  let y = value.reduce((acc, elem) => {\n    acc[elem] = elem; // or what ever object you want inside\n    return acc;\n  }, {});\n  return y;\n};\n\nexport default CreditsSlider;\n","import React, { useState } from 'react';\nimport 'rc-slider/assets/index.css';\nimport {\n  Checkbox,\n  Accordion,\n  Icon,\n} from 'semantic-ui-react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  onOffConflict,\n  changeConflictRange,\n} from '../../../reducers/courseReducer';\nimport { Label, StyledSlider } from '../../Nav/NavTheme';\n\nconst ConflictOptions = () => {\n  const conflict = useSelector((state) => state.courses.conflict);\n  const [accordionOpen, setAccordionOpen] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const dispatch = useDispatch();\n\n  const toggleConflict = () => {\n    dispatch(onOffConflict());\n    setChecked(!checked);\n    setAccordionOpen(!checked);\n  };\n\n  return (\n    <Accordion style={{ display: 'inline-block' }}>\n      <Accordion.Title active={accordionOpen} index={0}>\n        <div style={{ display: 'flex' }}>\n          <Checkbox\n            defaultChecked={conflict.makeConflict}\n            onChange={() => toggleConflict()}\n          />\n          <Label\n            color=\"blue\"\n            bold\n            pointer\n            onClick={() => setAccordionOpen(!accordionOpen)}\n            style={{ marginLeft: '0.5em' }}\n          >\n            Conflicte izin ver\n          </Label>\n          <Icon\n            name=\"caret down\"\n            color=\"blue\"\n            onClick={() => setAccordionOpen(!accordionOpen)}\n            style={{ marginLeft: '0.3em' }}\n          />\n        </div>\n      </Accordion.Title>\n      <Accordion.Content active={accordionOpen} style={{ marginLeft: '1em' }}>\n        <HoursDetails />\n      </Accordion.Content>\n    </Accordion>\n  );\n};\n\nconst HoursDetails = () => {\n  const conflictRange = useSelector(\n    (state) => state.courses.conflict.conflictRange\n  );\n\n  const dispatch = useDispatch();\n  const onSliderChange = (value) => {\n    dispatch(changeConflictRange(value));\n  };\n\n  return (\n    <div>\n      <p>En fazla kaç saat conflict olabilsin?</p>\n      <StyledSlider\n        min={1}\n        max={40}\n        onChange={onSliderChange}\n        value={conflictRange}\n        marks={getMark(conflictRange)}\n        trackStyle={{ backgroundColor: '#21ba45' }}\n      />\n    </div>\n  );\n};\n\nconst getMark = (value) => {\n  let y = [value].reduce((acc, elem) => {\n    acc[elem] = elem;\n    return acc;\n  }, {});\n  return y;\n};\n\nexport default ConflictOptions;\n","import React from 'react';\nimport 'rc-slider/assets/index.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeCourseRange } from '../../../reducers/courseReducer';\nimport { Label, StyledRange } from '../../Nav/NavTheme';\n\nconst CourseSlider = () => {\n  const courseRange = useSelector((state) => state.courses.courseRange);\n  const dispatch = useDispatch();\n  const onSliderChange = (value) => {\n    dispatch(changeCourseRange(value));\n  };\n\n  return (\n    <div>\n      <p>\n        <Label color=\"blue\" bold>\n          Ders Aralığı\n        </Label>\n      </p>\n      <StyledRange\n        min={2}\n        max={20}\n        allowCross={false}\n        onChange={onSliderChange}\n        value={courseRange}\n        marks={getMarks(courseRange)}\n        trackStyle={[\n          { backgroundColor: '#21ba45' },\n          { backgroundColor: '#21ba45' },\n        ]}\n      />\n    </div>\n  );\n};\n\nconst getMarks = (value) => {\n  let y = value.reduce((acc, elem) => {\n    acc[elem] = elem;\n    return acc;\n  }, {});\n  return y;\n};\n\nexport default CourseSlider;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button } from 'semantic-ui-react';\nimport lodash from 'lodash';\nimport {\n  setScenarios,\n  resetCurrentState,\n} from '../../../reducers/courseReducer';\nimport { compareNames } from '../../../utils/utils';\nconst CreateProgram = () => {\n  const dispatch = useDispatch();\n  const courseRange = useSelector((state) => state.courses.courseRange);\n  const scenariosSlider = useSelector((state) => state.courses.scenariosSlider);\n  const creditsRange = useSelector((state) => state.courses.creditsRange);\n  const requiredCourses = useSelector((state) => state.courses.requiredCourses);\n  const conflict = useSelector((state) => state.courses.conflict);\n  const tryEmptyDay = useSelector((state) => state.courses.tryEmptyDay);\n  const selectedCourses = useSelector((state) => state.courses.selectedCourses);\n  const [value, setValue] = useState('Program Oluştur');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (loading) {\n      createWithParams(\n        requiredCourses,\n        dispatch,\n        createWithRequired,\n        scenariosSlider,\n        createWithoutRequired\n      );\n    }\n  }, [loading]);\n\n  const createProgram = async () => {\n    const canProgram = checkCanProgram();\n    if (!canProgram.can) {\n      setValue(canProgram.error);\n      return;\n    }\n    setLoading(true);\n  };\n\n  const getOnlySelectedCourses = (requiredColumns) => {\n    let onlys = [];\n    let requiredColumnCourses = requiredColumns.map(\n      (rcColumn) => rcColumn.courses\n    );\n    requiredColumnCourses = lodash.flatten(requiredColumnCourses);\n    selectedCourses.forEach((sc) => {\n      let presents = false;\n      requiredColumnCourses.forEach((rc) => {\n        if (rc.areaCode === sc.areaCode && rc.digitCode === sc.digitCode) {\n          presents = false;\n        }\n      });\n      if (!presents) {\n        onlys.push(sc);\n      }\n    });\n    return onlys;\n  };\n\n  const createWithRequired = (maxProgramsLength) => {\n    let possibleScenarios = [];\n    let requiredColumns = requiredCourses.filter((rc) => rc.courses.length > 0);\n    let otherSelectedCourses = getOnlySelectedCourses(requiredColumns);\n    let requiredCoursesCourses = [...requiredColumns.map((rc) => rc.courses)];\n\n    let stackedSelectedCourses = stackedCourses(\n      otherSelectedCourses\n    ).map((stack) => [, ...stack.courses]);\n\n    loopTwoTimesStack(\n      requiredCoursesCourses,\n      stackedSelectedCourses,\n      possibleScenarios,\n      maxProgramsLength\n    );\n\n    return possibleScenarios;\n  };\n\n  const createWithoutRequired = (maxProgramsLength) => {\n    let possibleScenarios = [];\n    let stackedSelectedCourses = stackedCourses(\n      selectedCourses\n    ).map((stack) => [, ...stack.courses]);\n    loopOverStack(stackedSelectedCourses, possibleScenarios, maxProgramsLength);\n    return possibleScenarios;\n  };\n\n  const loopTwoTimesStack = (\n    requiredStack,\n    optionalStack,\n    scenario,\n    length\n  ) => {\n    let max = requiredStack.length - 1;\n    function helper(arr, i) {\n      for (var j = 0, l = requiredStack[i].length; j < l; j++) {\n        if (scenario.length === length) break;\n\n        var a = arr.slice(0);\n        a.push(requiredStack[i][j]);\n        if (i == max) {\n          loopOverStack(optionalStack, scenario, length, a);\n        } else helper(a, i + 1);\n      }\n    }\n    helper([], 0);\n  };\n\n  const loopOverStack = (loopedStack, scenario, length, aditional) => {\n    let max = loopedStack.length - 1;\n    function helper(arr, i) {\n      for (var j = 0, l = loopedStack[i].length; j < l; j++) {\n        if (scenario.length === length) break;\n\n        var a = arr.slice(0);\n        if (loopedStack[i][j]) a.push(loopedStack[i][j]);\n        if (i == max) {\n          if (aditional) a = [...a, ...aditional];\n          if (canAddToScenarios(a)) {\n            scenario.push(a);\n          }\n        } else helper(a, i + 1);\n      }\n    }\n    helper([], 0);\n  };\n\n  const stackedCourses = (courses) => {\n    let stacked = [];\n    courses.sort(compareNames).forEach((sc) => {\n      let presentsInStacked = stacked.find(\n        (stack) => stack.shortName === `${sc.areaCode}${sc.digitCode}`\n      );\n      if (presentsInStacked) {\n        presentsInStacked.courses.push(sc);\n      } else {\n        stacked.push({\n          courses: [sc],\n          shortName: `${sc.areaCode}${sc.digitCode}`,\n        });\n      }\n    });\n    return stacked;\n  };\n\n  const canAddToScenarios = (potentialCourses) => {\n    if (\n      between(potentialCourses.length, courseRange[0], courseRange[1], true) &&\n      // creditsMatch(potentialCourses) &&\n      between(\n        getTotalCoursesCredits(potentialCourses),\n        creditsRange[0],\n        creditsRange[1],\n        true\n      ) &&\n      emptyDayMatch(potentialCourses) &&\n      conflictMatch(potentialCourses)\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  const conflictMatch = (potentialCourses) => {\n    const possibleConflictLength = getPossibleConflictLength(potentialCourses);\n    if (conflict.makeConflict) {\n      return possibleConflictLength > conflict.conflictRange ? false : true;\n    }\n    return possibleConflictLength > 0 ? false : true;\n  };\n\n  const emptyDayMatch = (potentialCourses) => {\n    if (!tryEmptyDay) {\n      return true;\n    }\n    let currentDays = getCoursesDays(potentialCourses);\n    if (currentDays === 5) {\n      return false;\n    }\n    return true;\n  };\n\n  const creditsMatch = (potentialCourses) => {\n    const currentCredits = getTotalCoursesCredits(potentialCourses);\n    return currentCredits > creditsRange[1] ? false : true;\n  };\n\n  const checkCanProgram = () => {\n    const singledCourses = lodash.uniqBy(selectedCourses, (c) => {\n      return `${c.areaCode}${c.digitCode}`;\n    });\n    if (singledCourses.length < courseRange[0]) {\n      return { can: false, error: 'Minimum Ders Aralığı Karşılanmıyor!' };\n    }\n\n    const selectedCoursesCredits = getTotalCoursesCredits(singledCourses);\n    if (selectedCoursesCredits < creditsRange[0]) {\n      return { can: false, error: 'Minimum Kredi Aralığı Karşılanmıyor!' };\n    }\n\n    return { can: true };\n  };\n\n  const getCoursesConflictLength = (courses) => {\n    let allCellIds = [];\n    let unionCellIds = [];\n    courses.forEach((course) => {\n      allCellIds.push(course.cellIds);\n      unionCellIds = lodash.union(unionCellIds, course.cellIds);\n    });\n    allCellIds = lodash.flatten(allCellIds);\n    return allCellIds.length - unionCellIds.length;\n  };\n\n  const getPossibleConflictLength = (possibleCourses) => {\n    const after = getCoursesConflictLength(possibleCourses);\n    return after;\n  };\n\n  const getTotalCoursesCredits = (courses) => {\n    return courses.reduce((total, c) => {\n      return total + Number(c.credits);\n    }, 0);\n  };\n\n  const getCoursesDays = (courses) => {\n    let unionDays = [];\n    courses.forEach((c) => {\n      unionDays = lodash.union(unionDays, c.days);\n    });\n\n    return unionDays.length;\n  };\n\n  function createWithParams(\n    requiredCourses,\n    dispatch,\n    createWithRequired,\n    scenariosSlider,\n    createWithoutRequired\n  ) {\n    const requiredColumnsWithCourses = requiredCourses.filter(\n      (rc) => rc.courses.length > 0\n    );\n    let scenarios;\n    if (requiredColumnsWithCourses.length > 0) {\n      scenarios = createWithRequired(scenariosSlider);\n    } else {\n      scenarios = createWithoutRequired(scenariosSlider);\n    }\n\n    if (scenarios.length > 0) {\n      dispatch(setScenarios(scenarios));\n      setValue('Program Oluşturuldu');\n    } else {\n      dispatch(setScenarios([]));\n      setValue('Bu Parametrelerde Program Oluşturulamadı');\n    }\n\n    setLoading(false);\n  }\n  const resetState = () => {\n    dispatch(resetCurrentState(setLoading));\n  };\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n      <Button color=\"red\" onClick={() => resetState()}>\n        Plannerı Sıfırla{' '}\n      </Button>\n      <Button\n        color={\n          value === 'Program Oluşturuldu' || value === 'Program Oluştur'\n            ? 'blue'\n            : 'red'\n        }\n        onClick={() => createProgram()}\n        loading={loading}\n      >\n        {value}\n      </Button>\n    </div>\n  );\n};\n\nfunction between(n, a, b, inclusive) {\n  var min = Math.min.apply(Math, [a, b]),\n    max = Math.max.apply(Math, [a, b]);\n  return inclusive ? n >= min && n <= max : n > min && n < max;\n}\n\nexport default CreateProgram;\n","import React from 'react';\nimport 'rc-slider/assets/index.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeScenariosSlider } from '../../../reducers/courseReducer';\nimport { Label, StyledSlider } from '../../Nav/NavTheme';\n\nconst ScenariosSlider = () => {\n  const scenariosSlider = useSelector((state) => state.courses.scenariosSlider);\n  const dispatch = useDispatch();\n  const onSliderChange = (value) => {\n    dispatch(changeScenariosSlider(value));\n  };\n\n  return (\n    <div>\n      <p>\n        <Label color=\"blue\" bold>\n          Maksimum Senaryo Sayısı\n        </Label>\n      </p>\n      <StyledSlider\n        min={1}\n        max={50}\n        onChange={onSliderChange}\n        value={scenariosSlider}\n        marks={getMark(scenariosSlider)}\n        trackStyle={{ backgroundColor: '#21ba45' }}\n      />\n    </div>\n  );\n};\n\nconst getMark = (value) => {\n  let y = [value].reduce((acc, elem) => {\n    acc[elem] = elem;\n    return acc;\n  }, {});\n  return y;\n};\n\nexport default ScenariosSlider;\n","import React from 'react';\nimport {\n  Grid,\n  Checkbox,\n} from 'semantic-ui-react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  toggleTryEmptyDay,\n} from '../../../reducers/courseReducer';\nimport { Label } from '../../Nav/NavTheme';\nimport CreditsSlider from './CreditsSlider';\nimport ConflictOptions from './ConflictOptions';\nimport HoursSlider from './CourseSlider';\nimport CreateProgram from './CreateProgram';\nimport ScenariosSlider from './ScenariosSlider';\nconst ProgramOptions = () => {\n  const tryEmptyDay = useSelector((state) => state.courses.tryEmptyDay);\n  const dispatch = useDispatch();\n\n  const toggleDay = () => {\n    dispatch(toggleTryEmptyDay());\n  };\n\n  return (\n    <>\n      <Grid.Row>\n        <Grid.Column>\n          <CreateProgram />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row style={{ marginTop: '1.6em' }}>\n        <Grid.Column>\n          <CreditsSlider />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row style={{ marginTop: '1.6em' }}>\n        <Grid.Column>\n          <HoursSlider />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row style={{ marginTop: '1.6em' }}>\n        <Grid.Column>\n          <ScenariosSlider />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row style={{ marginTop: '1.6em' }}>\n        <Grid.Column>\n          <Checkbox\n            defaultChecked={tryEmptyDay}\n            onChange={() => toggleDay()}\n            label={\n              <Label color=\"blue\" bold>\n                {' '}\n                Bir günü boşta bırak\n              </Label>\n            }\n          />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row style={{ marginTop: '1em' }}>\n        <Grid.Column>\n          <ConflictOptions />\n        </Grid.Column>\n      </Grid.Row>\n    </>\n  );\n};\n\nexport default ProgramOptions;\n","import React, { useState, useEffect } from 'react';\nimport CoursePlannerTable from './CoursePlannerTable/CoursePlannerTable';\nimport { Button, Dimmer, Grid, Loader } from 'semantic-ui-react';\nimport SelectedCourses from './SelectedCourses/SelectedCourses';\nimport RequiredCourses from './RequiredCourses/RequiredCourses';\nimport SearchCourses from './CoursePlannerTable/SearchCourses/SearchCourses';\nimport ProgramOptions from './ProgramOptions/ProgramOptions';\nimport { isMobile } from 'react-device-detect';\nimport IdleTimer from 'react-idle-timer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport coursesService from '../../services/courses';\nimport {\n  getCurrentState,\n  initialState,\n  resetCurrentState,\n} from '../../reducers/courseReducer';\nimport lodash from 'lodash';\nconst CoursePlanner = () => {\n  const state = useSelector((state) => state.courses);\n  const [saving, setSaving] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const {\n      selectedCourses,\n      cells,\n      findTime,\n      notFindTime,\n      tryEmptyDay,\n      conflict,\n      extraHours,\n      requiredCourses,\n      creditsRange,\n      scenariosSlider,\n      courseRange,\n      scenarios,\n      currentScenario,\n    } = state;\n    if (\n      lodash.isEqual(selectedCourses, initialState.selectedCourses) &&\n      lodash.isEqual(scenarios, initialState.scenarios) &&\n      lodash.isEqual(currentScenario, initialState.currentScenario) &&\n      lodash.isEqual(requiredCourses, initialState.requiredCourses) &&\n      lodash.isEqual(cells, initialState.cells) &&\n      lodash.isEqual(findTime, initialState.findTime) &&\n      lodash.isEqual(notFindTime, initialState.notFindTime) &&\n      lodash.isEqual(tryEmptyDay, initialState.tryEmptyDay) &&\n      lodash.isEqual(conflict, initialState.conflict) &&\n      lodash.isEqual(extraHours, initialState.extraHours) &&\n      lodash.isEqual(creditsRange, initialState.creditsRange) &&\n      lodash.isEqual(scenariosSlider, initialState.scenariosSlider) &&\n      lodash.isEqual(courseRange, initialState.courseRange)\n    ) {\n      dispatch(getCurrentState(setLoading));\n    } else {\n      setLoading(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (saving) {\n      setTimeout(() => {\n        setSaving(false);\n      }, 1000);\n      const {\n        selectedCourses,\n        cells,\n        findTime,\n        notFindTime,\n        tryEmptyDay,\n        conflict,\n        extraHours,\n        requiredCourses,\n        creditsRange,\n        scenariosSlider,\n        courseRange,\n        scenarios,\n        currentScenario,\n      } = state;\n      window.localStorage.setItem(\n        'planner',\n        JSON.stringify({\n          selectedCourses,\n          cells,\n          findTime,\n          notFindTime,\n          tryEmptyDay,\n          conflict,\n          extraHours,\n          requiredCourses,\n          creditsRange,\n          scenariosSlider,\n          courseRange,\n          scenarios,\n          currentScenario,\n        })\n      );\n    }\n  }, [saving]);\n\n  const resetState = () => {\n    dispatch(resetCurrentState(setLoading));\n  };\n\n  if (loading) {\n    return (\n      <Dimmer active>\n        <Loader inline content=\"Önceki Planner Yükleniyor.\" />\n\n        <br />\n        <Button color=\"red\" onClick={() => resetState()}>\n          Plannerı Sıfırla\n        </Button>\n      </Dimmer>\n    );\n  }\n\n  return isMobile ? (\n    <div style={{ height: '150vh' }}>\n      <Grid style={{ margin: '0.5em' }}>\n        <Grid.Row>\n          <Grid.Column>\n            <CoursePlannerTable />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column>\n            <SelectedCourses />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column>\n            <SearchCourses stretched />\n          </Grid.Column>\n        </Grid.Row>\n\n        <Grid.Row>\n          <Grid.Column>\n            <ProgramOptions />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row columns={1}>\n          <RequiredCourses />\n        </Grid.Row>\n      </Grid>\n    </div>\n  ) : (\n    <div style={{ height: '150vh' }}>\n      <IdleTimer\n        timeout={1000 * 3}\n        onIdle={() => setSaving(true)}\n        debounce={250}\n        events={[\n          'keydown',\n          'DOMMouseScroll',\n          'mousedown',\n          'touchstart',\n          'touchmove',\n          'MSPointerDown',\n          'MSPointerMove',\n          'visibilitychange',\n        ]}\n      />\n      <Grid columns={3} style={{ margin: '0.5em' }}>\n        <Grid.Row>\n          <Grid.Column stretched width={6}>\n            <CoursePlannerTable saving={saving} />\n            <ProgramOptions />\n          </Grid.Column>\n          <Grid.Column width={4}>\n            <SelectedCourses />\n          </Grid.Column>\n          <Grid.Column>\n            <SearchCourses stretched />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row columns={4}>\n          <RequiredCourses />\n        </Grid.Row>\n      </Grid>\n    </div>\n  );\n};\n\nexport default CoursePlanner;\n"],"sourceRoot":""}