{"version":3,"sources":["components/CoursePlanner/CoursePlannerTable/CoursePlannerTable.js","components/CoursePlanner/SelectedCourses/SelectedCourses.js","components/CoursePlanner/RequiredCourses/RequiredColumn.js","components/CoursePlanner/RequiredCourses/RequiredCourses.js","components/Quota/QuotaLabel.js","components/CoursePlanner/CoursePlannerTable/SearchCourses/SubCourse.js","components/CoursePlanner/CoursePlannerTable/SearchCourses/SearchCourses.js","components/CoursePlanner/ProgramOptions/CreditsSlider.js","components/CoursePlanner/ProgramOptions/ConflictOptions.js","components/CoursePlanner/ProgramOptions/CourseSlider.js","components/CoursePlanner/ProgramOptions/CreateProgram.js","components/CoursePlanner/ProgramOptions/ScenariosSlider.js","components/CoursePlanner/ProgramOptions/ProgramOptions.js","components/CoursePlanner/CoursePlanner.js"],"names":["CellDropdown","c","f","visibleCourses","courses","filter","cCourse","visible","Table","Cell","selectable","style","backgroundColor","color","textAlign","length","upper","Dropdown","icon","fluid","Menu","Item","onClick","findCellTime","notFindCellTime","resetCellTime","FirstThreeCells","dispatch","useDispatch","sort","compareNames","slice","map","cellCourse","bold","key","name","Icon","toggleCellCoursesVisiblity","AllCells","hover","CoursePlannerTable","selectedCourses","useSelector","state","scenarios","useState","scenariosActivePage","setScenariosActivePage","cells","extraHours","rows","setRows","setVisible","paginationVisible","setPaginationVisible","useEffect","setCurrentScenario","dropdownFuncs","findTimeCell","notFindTimeCell","resetTimeCell","toggleVisibilty","i","push","Row","opacity","position","left","time","a","b","day","id","CommentsLoading","celled","size","unstackable","isMobile","Header","HeaderCell","Popup","content","trigger","Body","r","Footer","fullWidth","column","colSpan","Pagination","activePage","onPageChange","event","data","evet","handleScenarioChange","firstItem","lastItem","pointing","secondary","totalPages","MultipleCourses","stack","stackVisible","setStackVisible","eye","stackEye","setStackEye","toggleStackVisibility","last","shortName","stackCourse","sectionCode","float","cursor","removeSelectedCoursesWithStack","toggleSelectedCoursesEye","SingleCourseSelected","course","removeSelectedCourse","changeCourseVisibility","SelectedCourses","credits","setCredits","courseLength","setCourseLength","stackedCourses","setStackedCourses","sc","reduce","total","Number","getStackedCourses","mappedStack","areaCode","digitCode","includes","filteredCourses","stacked","forEach","presentsInStacked","find","maxHeight","overflow","marginBottom","columns","marginRight","visibility","MultiRowCourse","rc","removeRequiredWithStack","SingleRowCourse","removeFromRequiredColumn","handleRemoveFromRequiredColumn","RequiredColumn","requiredCourses","narrowedCourses","setNarrowedCourses","narrowRequired","stackCourses","presentsInColumns","columnContainsSections","findColumnContainsSections","rcCourse","Grid","Column","marginTop","removeRequiredColumn","handleRemoveColumn","text","className","button","basic","scrolling","addToRequiredColumnMulti","addToRequiredColumn","handleAddToRequiredColumn","RequiredCourses","Button","addNewRequiredColumn","QuotaLabel","user","checked","setChecked","followingCourses","parentName","pointer","unFollowCourse","followCourse","fontSize","SubCourse","margin","Card","padding","foundCourse","clicked","addSelectedCourse","handleClick","onMouseEnter","onHoverCourse","onMouseLeave","offHoverCourse","handleMouseLeave","display","nolink","to","LESSON_PATH","Meta","fullName","Description","days","d","hours","addAllSections","place","final","filterCourses","search","findTime","notFindTime","isOffline","s","toUpperCase","currentCourses","q","t","hour","found","SearchCourses","count","start","hasMore","targets","setSearch","currentTarget","setCurrentTarget","ready","setReady","noResult","setNoResult","first","useRef","fetching","setIsOffline","refValue","storedTimeout","setStoredTimeout","searchCourse","current","alignItems","Input","placeholder","value","onChange","e","target","clearTimeout","setTimeout","handleValueChange","lang","width","marginLeft","Checkbox","label","hoverable","paddingLeft","fitted","NoSubResult","pageStart","loadMore","loader","skeletonLength","useWindow","getMarks","acc","elem","CreditsSlider","creditsRange","min","max","allowCross","changeCreditsRange","marks","trackStyle","HoursDetails","conflictRange","conflict","changeConflictRange","getMark","ConflictOptions","accordionOpen","setAccordionOpen","Accordion","Title","active","index","defaultChecked","makeConflict","onOffConflict","Content","CourseSlider","courseRange","changeCourseRange","CreateProgram","scenariosSlider","tryEmptyDay","setValue","loading","setLoading","createWithRequired","createWithoutRequired","setScenarios","createWithParams","createProgram","checkCanProgram","maxProgramsLength","possibleScenarios","requiredColumns","otherSelectedCourses","onlys","requiredColumnsIds","rcColumn","lodash","flatten","getOnlySelectedCourses","requiredCoursesCourses","stackedSelectedCourses","loopTwoTimesStack","loopOverStack","requiredStack","optionalStack","scenario","helper","arr","j","l","loopedStack","aditional","canAddToScenarios","potentialCourses","n","inclusive","Math","apply","between","creditsMatch","emptyDayMatch","conflictMatch","possibleConflictLength","getPossibleConflictLength","getCoursesDays","getTotalCoursesCredits","possibleCourses","allCellIds","unionCellIds","cellIds","union","getCoursesConflictLength","unionDays","ScenariosSlider","changeScenariosSlider","ProgramOptions","toggleTryEmptyDay","CoursePlanner","height","stretched"],"mappings":"4OAkMMA,EAAe,SAAC,GAAc,IAAZC,EAAW,EAAXA,EAAGC,EAAQ,EAARA,EACnBC,EAAiBF,EAAEG,QAAQC,QAAO,SAACC,GAAD,OAAgC,GAAnBA,EAAQC,WAC7D,OACE,kBAACC,EAAA,EAAMC,KAAP,CACEC,YAAU,EACVC,MAAO,CACLC,gBAAiBX,EAAEY,MAAQZ,EAAEY,MAAQ,MAEvCC,UAAU,UAETX,EAAeY,OAAS,EACvB,kBAAC,EAAD,CAAUZ,eAAgBA,EAAgBF,EAAGA,IAC3CA,EAAEM,QACJ,kBAAC,EAAD,CAAUJ,eAAgBA,EAAgBF,EAAGA,EAAGe,OAAK,IAErD,kBAAC,EAAD,CAAiBb,eAAgBA,EAAgBF,EAAGA,IAGtD,kBAACgB,EAAA,EAAD,CAAUC,KAAK,GAAGC,OAAK,GACrB,kBAACF,EAAA,EAASG,KAAV,KACE,kBAACH,EAAA,EAASI,KAAV,CAAeC,QAAS,kBAAMpB,EAAEqB,aAAatB,KAA7C,sBAGA,kBAACgB,EAAA,EAASI,KAAV,CAAeC,QAAS,kBAAMpB,EAAEsB,gBAAgBvB,KAAhD,wBAGA,kBAACgB,EAAA,EAASI,KAAV,CAAeC,QAAS,kBAAMpB,EAAEuB,cAAcxB,KAA9C,yBASJyB,EAAkB,SAAC,GAA0B,EAAxBvB,eAAyB,IAATF,EAAQ,EAARA,EACnC0B,EAAWC,cAIjB,OACE,oCACG3B,EAAEG,QACAC,QAAO,SAACC,GAAD,OAAaA,EAAQC,WAASsB,KAAKC,KAC1CC,MAAM,EAAG,GACTC,KAAI,SAACC,GACJ,OACE,oCACE,kBAAC,IAAD,CAAOpB,MAAO,MAAOqB,MAAI,EAACC,IAAKF,EAAWG,MACvCH,EAAWG,MAEd,iCAIR,kBAACC,EAAA,EAAD,CAAMD,KAAK,aAAad,QAAS,WAjBnCK,EAASW,YAA2BrC,GAAG,SAsBrCsC,EAAW,SAAC,GAAkC,IAAhCpC,EAA+B,EAA/BA,eAAgBF,EAAe,EAAfA,EAAGe,EAAY,EAAZA,MAC/BW,EAAWC,cAIjB,OACE,oCAC6B,IAA1BzB,EAAeY,OACZd,EAAEG,QACCC,QAAO,SAACC,GAAD,OAAaA,EAAQC,WAASsB,KAAKC,KAC1CE,KAAI,SAACC,GACJ,OACE,oCACE,kBAAC,IAAD,CACEpB,MACEV,EAAeY,OAAS,EACpB,MACAkB,EAAWO,MACX,QACA,OAENN,MAAI,EACJC,IAAKF,EAAWG,MAEfH,EAAWG,MAEd,iCAIR,KACHpB,EACC,kBAACqB,EAAA,EAAD,CAAMD,KAAK,WAAWd,QAAS,WA7BnCK,EAASW,YAA2BrC,GAAG,OA8BjC,OAKKwC,EA/QY,WACzB,IAAMC,EAAkBC,aAAY,SAACC,GAAD,OAAWA,EAAMxC,QAAQsC,mBACvDG,EAAYF,aAAY,SAACC,GAAD,OAAWA,EAAMxC,QAAQyC,aAFxB,EAGuBC,mBAAS,GAHhC,mBAGxBC,EAHwB,KAGHC,EAHG,KAIzBC,EAAQN,aAAY,SAACC,GAAD,OAAWA,EAAMxC,QAAQ6C,SAC7CC,EAAaP,aAAY,SAACC,GAAD,OAAWA,EAAMxC,QAAQ8C,cAClDvB,EAAWC,cANc,EAOPkB,mBAAS,IAPF,mBAOxBK,EAPwB,KAOlBC,EAPkB,OAQDN,oBAAS,GARR,mBAQxBvC,EARwB,KAQf8C,EARe,OASmBP,oBAAS,GAT5B,mBASxBQ,EATwB,KASLC,EATK,KAa/BC,qBAAU,WACJX,EAAU9B,OAAS,GAAKgC,EAAsB,GAChDpB,EAAS8B,YAAmBZ,EAAUE,EAAsB,OAE7D,CAACA,EAAqBF,IAIzBW,qBAAU,WACJX,EAAU9B,OAAS,GACrBwC,GAAqB,GACrBP,EAAuB,KAEvBA,EAAuB,GACvBO,GAAqB,GACrB5B,EAAS8B,YAAmBf,OAE7B,CAACG,IAEJ,IAgBMa,EAAgB,CAAEnC,aAZH,SAACtB,GACpB0B,EAASgC,YAAa1D,KAWcuB,gBARd,SAACvB,GACvB0B,EAASiC,YAAgB3D,KAO4BwB,cAJjC,SAACxB,GACrB0B,EAASkC,YAAc5D,MAKnB6D,EAAkB,WACtBT,GAAY9C,IAmCd,OAhCAiD,qBAAU,WAER,IADA,IAAML,EAAO,GADC,WAELY,GACPZ,EAAKa,KACH,kBAACxD,EAAA,EAAMyD,IAAP,CACEtD,MAAO,CACLuD,QAAS3D,GAAWwD,GAAK,EAAI,KAAO,MACpCI,SAAU5D,GAAWwD,GAAK,EAAI,KAAO,WACrCK,KAAM7D,GAAWwD,GAAK,EAAI,KAAO,aAEnC5B,IAAK4B,GAEL,kBAACvD,EAAA,EAAMC,KAAP,CAAYE,MAAO,CAAEC,gBAAiB,YACpC,kBAAC,IAAD,CAAOC,MAAM,QAAQqB,MAAI,GAChB,IAAN6B,EAAU,KAAOA,EAAI,EADxB,QAIDd,EACE5C,QAAO,SAACJ,GAAD,OAAOA,EAAEoE,OAASN,KACzBlC,MAAK,SAACyC,EAAGC,GAAJ,OAAUD,EAAEE,IAAMD,EAAEC,OAEzBxC,KAAI,SAAC/B,GACJ,OAAO,kBAAC,EAAD,CAAckC,IAAKlC,EAAEwE,GAAIxE,EAAGA,EAAGC,EAAGwD,UApB1CK,EAAI,EAAGA,EA9CE,GA8CeA,IAAM,EAA9BA,GAyBTX,EAAQD,KACP,CAACF,EAAO1C,IAIU,IAAjB0C,EAAMlC,QAAgC,IAAhBoC,EAAKpC,OACtB,kBAAC2D,EAAA,EAAD,MAGP,kBAAClE,EAAA,EAAD,CAAOmE,QAAM,EAACC,KAAK,QAAQC,YAAaC,YACtC,kBAACtE,EAAA,EAAMuE,OAAP,KACE,kBAACvE,EAAA,EAAMyD,IAAP,KACE,kBAACzD,EAAA,EAAMwE,WAAP,CAAkBlE,UAAU,UAC1B,kBAACmE,EAAA,EAAD,CACEC,QAAQ,gCACRC,QACE,kBAAC9C,EAAA,EAAD,CAAMD,KAAK,0BAA0BvB,MAAM,OAAO+D,KAAK,QAEzDT,SAAS,kBAIb,kBAAC3D,EAAA,EAAMwE,WAAP,KACE,kBAAC,IAAD,CAAOnE,MAAM,OAAOqB,MAAI,GAAxB,cAIF,kBAAC1B,EAAA,EAAMwE,WAAP,KACE,kBAAC,IAAD,CAAOnE,MAAM,OAAOqB,MAAI,GAAxB,cAIF,kBAAC1B,EAAA,EAAMwE,WAAP,KACE,kBAAC,IAAD,CAAOnE,MAAM,OAAOqB,MAAI,GAAxB,qBAIF,kBAAC1B,EAAA,EAAMwE,WAAP,KACE,kBAAC,IAAD,CAAOnE,MAAM,OAAOqB,MAAI,GAAxB,kBAIF,kBAAC1B,EAAA,EAAMwE,WAAP,KACE,kBAAC,IAAD,CAAOnE,MAAM,OAAOqB,MAAI,GAAxB,WAON,kBAAC1B,EAAA,EAAM4E,KAAP,KACGjC,EAAKnB,KAAI,SAACqD,GACT,OAAOA,MAGX,kBAAC7E,EAAA,EAAM8E,OAAP,CAAcC,WAAS,GACrB,kBAAC/E,EAAA,EAAMyD,IAAP,CACEuB,OAAQ,EACR1E,UAAU,SACVH,MAAO,CACLuD,QAASZ,EAAoB,KAAO,MACpCa,SAAUb,EAAoB,KAAO,WACrCc,KAAMd,EAAoB,KAAO,cAGnC,kBAAC9C,EAAA,EAAMC,KAAP,CAAYgF,QAAQ,KAClB,kBAACC,EAAA,EAAD,CACEC,WAAY5C,EACZ6C,aAAc,SAACC,EAAOC,GAAR,OArHG,SAACC,EAAMD,GAClC9C,EAAuB8C,EAAKH,YAoHaK,CAAqBH,EAAOC,IAC3DG,UAAW,KACXC,SAAU,KACVC,UAAQ,EACRC,WAAS,EACTC,WAAYxD,EAAU9B,WAI5B,kBAACP,EAAA,EAAMyD,IAAP,CAAWnD,UAAU,SAAS0E,OAAQ,GACpC,kBAAChF,EAAA,EAAMC,KAAP,CAAYC,YAAU,EAAC+E,QAAQ,IAAInE,QAAS,kBAAMwC,MAChD,kBAACzB,EAAA,EAAD,CACExB,MAAOqC,EAAa,QAAU,OAC9Bd,KAAM7B,EAAU,UAAY,WAC5BqE,KAAK,QACLtD,QAAS,kBAAMwC,Y,uBC3EvBwC,EAAkB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnB5E,EAAWC,cADoB,EAEGkB,mBAASyD,EAAMhG,SAFlB,mBAE9BiG,EAF8B,KAEhBC,EAFgB,OAGL3D,mBAASyD,EAAMG,KAHV,mBAG9BC,EAH8B,KAGpBC,EAHoB,KAK/BC,EAAwB,WAC5BJ,GAAiBD,IAYnB,OAAIA,EACKD,EAAMnG,QAAQyB,KAAKC,KAAcE,KAAI,SAAC/B,EAAG8D,GAC9C,OACE,kBAAC,EAAD,CACE9D,EAAGA,EACHkC,IAAKlC,EAAEwE,GACPqC,KAAM/C,IAAMwC,EAAMnG,QAAQW,OAAS,EACnC8F,sBAAuBA,OAM7B,kBAACrG,EAAA,EAAMyD,IAAP,KACE,kBAACzD,EAAA,EAAMC,KAAP,KACE,kBAAC,IAAD,CAAOI,MAAM,OAAOqB,MAAI,GACrBqE,EAAMQ,UAAW,KAGnBR,EAAMnG,QAAQyB,KAAKC,KAAcE,KAAI,SAACgF,GACrC,OACE,kBAAC,IAAD,CAAOnG,MAAM,QAAQqB,MAAI,GACtB8E,EAAYC,YAAa,QAIhC,kBAAC5E,EAAA,EAAD,CACED,KAAK,SACLvB,MAAM,QACNF,MAAO,CAAEuG,MAAO,QAASC,OAAQ,WACjC7F,QAAS,WAtCfK,EAASyF,YAA+Bb,OA0CpC,kBAAClE,EAAA,EAAD,CACED,KAAM,aACNvB,MAAM,QACNF,MAAO,CAAEuG,MAAO,QAASC,OAAQ,WACjC7F,QAAS,kBAAMuF,OAEjB,kBAACxE,EAAA,EAAD,CACED,KAAMuE,EAAW,MAAQ,YACzB9F,MAAO8F,EAAW,QAAU,MAC5BhG,MAAO,CAAEuG,MAAO,QAASC,OAAQ,WACjC7F,QAAS,kBAhDfK,EAAS0F,YAAyBd,GAAQI,SAC1CC,GAAaD,SAsDJW,EAAuB,SAAC,GAAwC,IAAtCrH,EAAqC,EAArCA,EAAG6G,EAAkC,EAAlCA,KAAMD,EAA4B,EAA5BA,sBACxClF,EAAWC,cAUjB,OACE,kBAACpB,EAAA,EAAMyD,IAAP,KACE,kBAACzD,EAAA,EAAMC,KAAP,KAGE,kBAAC,IAAD,CAAOI,MAAM,OAAOqB,MAAI,GACrBjC,EAAEmC,KAAM,KAEX,kBAACC,EAAA,EAAD,CACED,KAAK,SACLvB,MAAM,QACNF,MAAO,CAAEuG,MAAO,QAASC,OAAQ,WACjC7F,QAAS,WArBG,IAACiG,IAsBCtH,EArBpB0B,EAAS6F,YAAqBD,OAwB1B,kBAAClF,EAAA,EAAD,CACED,KAAMnC,EAAEM,QAAU,MAAQ,YAC1BM,MAAOZ,EAAEM,QAAU,QAAU,MAC7BI,MAAO,CAAEuG,MAAO,QAASC,OAAQ,WACjC7F,QAAS,kBAvBciG,EAuBctH,OAtB3C0B,EAAS8F,YAAuBF,IADJ,IAACA,KAyBxBT,EACC,kBAACzE,EAAA,EAAD,CACED,KAAM,WACNvB,MAAM,QACNF,MAAO,CAAEuG,MAAO,QAASC,OAAQ,WACjC7F,QAAS,kBAAMuF,OAEf,QAMGa,EArNS,WACtB,IAAMhF,EAAkBC,aAAY,SAACC,GAAD,OAAWA,EAAMxC,QAAQsC,mBADjC,EAEEI,mBAAS,GAFX,mBAErB6E,EAFqB,KAEZC,EAFY,OAGY9E,mBAAS,GAHrB,mBAGrB+E,EAHqB,KAGPC,EAHO,OAIgBhF,mBAAS,IAJzB,mBAIrBiF,EAJqB,KAILC,EAJK,KAK5BxE,qBAAU,WACRoE,EACElF,EACGrC,QAAO,SAAC4H,GAAD,OAAuB,IAAfA,EAAG1H,WAClB2H,QAAO,SAACC,EAAOlI,GACd,OAAOkI,EAAQC,OAAOnI,EAAE0H,WACvB,IAEPG,EAAgBpF,EAAgBrC,QAAO,SAAC4H,GAAD,OAAuB,IAAfA,EAAG1H,WAAkBQ,QACpEiH,EAAkBK,OACjB,CAAC3F,IAEJ,IAAM2F,EAAoB,WACxB,IAKIC,EALgBP,EAAe1H,QAAO,SAACkG,GAAD,OACxC7D,EACGV,KAAI,SAACiG,GAAD,gBAAWA,EAAGM,UAAd,OAAyBN,EAAGO,cAChCC,SAASlC,EAAMQ,cAEY/E,KAAI,SAACuE,GACnC,IAAImC,EAAkBnC,EAAMnG,QAAQC,QAAO,SAAC2G,GAAD,OACzCtE,EAAgBV,KAAI,SAACiG,GAAD,OAAQA,EAAGxD,MAAIgE,SAASzB,MAE9C,OAAO,2BAAKT,GAAZ,IAAmBnG,QAASsI,OAE1BC,EAAO,YAAOL,GAgBlB,OAfA5F,EAAgBkG,SAAQ,SAACX,GACvB,IAAIY,EAAoBF,EAAQG,MAC9B,SAACvC,GAAD,OAAWA,EAAMQ,YAAN,UAAuBkB,EAAGM,UAA1B,OAAqCN,EAAGO,cAEjDK,EACFA,EAAkBzI,QAAQ4D,KAAKiE,GAE/BU,EAAQ3E,KAAK,CACX5D,QAAS,CAAC6H,GACVlB,UAAU,GAAD,OAAKkB,EAAGM,UAAR,OAAmBN,EAAGO,WAC/BjI,SAAS,EACTmG,KAAK,OAIJiC,GAGT,OACE,oCACE,yBAAKhI,MAAO,CAAEoI,UAAW,OAAQC,SAAU,OAAQC,aAAc,QAC/D,kBAACzI,EAAA,EAAD,CAAO0I,QAAS,GACd,kBAAC1I,EAAA,EAAMuE,OAAP,KACE,kBAACvE,EAAA,EAAMyD,IAAP,KACE,kBAACzD,EAAA,EAAMwE,WAAP,KACE,kBAAC,IAAD,CAAOnE,MAAM,OAAOqB,MAAI,GAAxB,qBAIA,kBAAC,IAAD,CAAOrB,MAAM,QAAQqB,MAAI,EAACvB,MAAO,CAAEuG,MAAO,UACvCS,EADH,UAGA,kBAAC,IAAD,CACE9G,MAAM,QACNqB,MAAI,EACJvB,MAAO,CAAEuG,MAAO,QAASiC,YAAa,QAErCtB,EALH,YAUN,kBAACrH,EAAA,EAAM4E,KAAP,KAC6B,IAA1B2C,EAAehH,OACd,kBAACP,EAAA,EAAMyD,IAAP,KACE,kBAACzD,EAAA,EAAMC,KAAP,KACE,0BAAME,MAAO,CAAEyI,WAAY,WAA3B,OAIJrB,EAAe/F,KAAI,SAACuE,EAAOxC,GACzB,OAAgC,IAAzBwC,EAAMnG,QAAQW,OACnB,kBAAC,EAAD,CACEd,EAAGsG,EAAMnG,QAAQ,GACjB+B,IAAKoE,EAAMnG,QAAQ,GAAGqE,KAGxB,kBAAC,EAAD,CAAiB8B,MAAOA,EAAO9B,GAAIV,Y,SC2F/CsF,EAAiB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,GAAI/C,EAAY,EAAZA,MACtB5E,EAAWC,cADuB,EAEAkB,mBAASyD,EAAMhG,SAFf,mBAEjCiG,EAFiC,KAEnBC,EAFmB,KAIlCI,EAAwB,WAC5BJ,GAAiBD,IAOnB,OAAIA,EACKD,EAAMnG,QAAQyB,KAAKC,KAAcE,KAAI,SAAC/B,EAAG8D,GAC9C,OACE,kBAAC,EAAD,CACEuF,GAAIA,EACJnH,IAAKlC,EAAEwE,GACP8C,OAAQtH,EACR6G,KAAM/C,IAAMwC,EAAMnG,QAAQW,OAAS,EACnC8F,sBAAuBA,OAM7B,kBAACrG,EAAA,EAAMyD,IAAP,KACE,kBAACzD,EAAA,EAAMC,KAAP,KACE,kBAAC,IAAD,CAAOI,MAAM,OAAOqB,MAAI,GACrBqE,EAAMQ,UAAW,KAGnBR,EAAMnG,QAAQyB,KAAKC,KAAcE,KAAI,SAACgF,GACrC,OACE,kBAAC,IAAD,CAAOnG,MAAM,QAAQqB,MAAI,GACtB8E,EAAYC,YAAa,QAIhC,kBAAC5E,EAAA,EAAD,CACED,KAAK,SACLvB,MAAM,QACNF,MAAO,CAAEuG,MAAO,QAASC,OAAQ,WACjC7F,QAAS,WAlCfK,EAAS4H,YAAwBhD,OAsC7B,kBAAClE,EAAA,EAAD,CACED,KAAM,aACNvB,MAAM,QACNF,MAAO,CAAEuG,MAAO,QAASC,OAAQ,WACjC7F,QAAS,kBAAMuF,UAOnB2C,EAAkB,SAAC,GAAiD,IAA/CF,EAA8C,EAA9CA,GAAI/B,EAA0C,EAA1CA,OAAQT,EAAkC,EAAlCA,KAAMD,EAA4B,EAA5BA,sBACrClF,EAAWC,cAIjB,OACE,kBAACpB,EAAA,EAAMyD,IAAP,KACE,kBAACzD,EAAA,EAAMC,KAAP,KACE,kBAAC,IAAD,CAAOI,MAAM,OAAOqB,MAAI,GACrBqF,EAAOnF,MAEV,kBAACC,EAAA,EAAD,CACED,KAAK,SACLvB,MAAM,QACNF,MAAO,CAAEuG,MAAO,SAChB5F,QAAS,kBAbsB,SAACgI,EAAI/B,GAC1C5F,EAAS8H,YAAyBH,EAAI/B,IAYjBmC,CAA+BJ,EAAI/B,MACjD,IACFT,EACC,kBAACzE,EAAA,EAAD,CACED,KAAM,WACNvB,MAAM,QACNF,MAAO,CAAEuG,MAAO,QAASC,OAAQ,WACjC7F,QAAS,kBAAMuF,OAEf,QAMG8C,EAzQQ,SAAC,GAAe,IAAbL,EAAY,EAAZA,GAAIvF,EAAQ,EAARA,EACtBpC,EAAWC,cACXc,EAAkBC,aAAY,SAACC,GAAD,OAAWA,EAAMxC,QAAQsC,mBACvDkH,EAAkBjH,aAAY,SAACC,GAAD,OAAWA,EAAMxC,QAAQwJ,mBAHzB,EAIU9G,mBAAS,IAJnB,mBAI7B+G,EAJ6B,KAIZC,EAJY,OAKQhH,mBAAS,IALjB,mBAK7BiF,EAL6B,KAKbC,EALa,KAMpCxE,qBAAU,WACRsG,EAAmBC,OAClB,CAACrH,EAAiBkH,IAErBpG,qBAAU,WACRwE,EAAkBgC,EAAaV,EAAGlJ,YACjC,CAACkJ,IAEJ,IAIMU,EAAe,SAAC5J,GACpB,IAAIuI,EAAU,GAed,OAdAvI,EAAQwI,SAAQ,SAACX,GACf,IAAIY,EAAoBF,EAAQG,MAC9B,SAACvC,GAAD,OAAWA,EAAMQ,YAAN,UAAuBkB,EAAGM,UAA1B,OAAqCN,EAAGO,cAEjDK,EACFA,EAAkBzI,QAAQ4D,KAAKiE,GAE/BU,EAAQ3E,KAAK,CACX5D,QAAS,CAAC6H,GACVlB,UAAU,GAAD,OAAKkB,EAAGM,UAAR,OAAmBN,EAAGO,WAC/BjI,SAAS,OAIRoI,GAcHoB,EAAiB,WAGrB,IAFA,IAAIF,EAAkB,GAEb9F,EAAI,EAAGA,EAAIrB,EAAgB3B,OAAQgD,IAC1C,IAAIkG,EAAkBvH,EAAgBqB,IAAtC,CACA,IAAMmG,EAAyBC,EAC7BzH,EAAgBqB,IAEdmG,GAA0BA,EAAuBzF,KAAO6E,EAAG7E,IAG/DoF,EAAgB7F,KAAKtB,EAAgBqB,IAYvC,OAVAiG,EAAaH,GAAiBjB,SAAQ,SAACrC,GACjCA,EAAMnG,QAAQW,OAAS,GACzB8I,EAAgB7F,KAAK,CACnB5B,KAAK,GAAD,OAAKmE,EAAMQ,UAAX,eACJ3G,QAASmG,EAAMnG,QACfmG,OAAO,OAKNsD,GAGHI,EAAoB,SAAC1C,GACzB,IAAK,IAAIxD,EAAI,EAAGA,EAAI6F,EAAgB7I,OAAQgD,IAAK,CAI/C,GAHkB6F,EAAgB7F,GAAG3D,QAAQ0I,MAC3C,SAACsB,GAAD,OAAcA,EAAS3F,KAAO8C,EAAO9C,MAEtB,OAAO,EAE1B,OAAO,GAGT,SAAS0F,EAA2B5C,GAClC,IAAK,IAAIxD,EAAI,EAAGA,EAAI6F,EAAgB7I,OAAQgD,IAAK,CAM/C,GALoB6F,EAAgB7F,GAAG3D,QAAQ0I,MAC7C,SAACsB,GAAD,OACEA,EAAS5B,YAAcjB,EAAOiB,WAC9B4B,EAAS7B,WAAahB,EAAOgB,YAEd,OAAOqB,EAAgB7F,IAI9C,OACE,kBAACsG,EAAA,EAAKC,OAAN,CAAa3J,MAAO,CAAE4J,UAAW,QAC/B,kBAAC/J,EAAA,EAAD,KACE,kBAACA,EAAA,EAAMuE,OAAP,KACE,kBAACvE,EAAA,EAAMyD,IAAP,KACE,kBAACzD,EAAA,EAAMwE,WAAP,KACE,kBAAC,IAAD,CAAOnE,MAAM,OAAOqB,MAAI,GAAxB,gCAC2B6B,EAAI,GAE9BA,EAAI,EACH,kBAAC1B,EAAA,EAAD,CACExB,MAAM,QACNuB,KAAK,SACLzB,MAAO,CAAEuG,MAAO,SAChB5F,QAAS,kBA/FE,SAACgI,GAC1B3H,EAAS6I,YAAqBlB,IA8FDmB,CAAmBnB,MAGpC,kBAACrE,EAAA,EAAD,CACEC,QAAQ,gHACRC,QACE,kBAAC9C,EAAA,EAAD,CACED,KAAK,0BACLvB,MAAM,OACNF,MAAO,CAAEuG,MAAO,SAChBtC,KAAK,UAGTT,SAAS,kBAMnB,kBAAC3D,EAAA,EAAM4E,KAAP,KACE,kBAAC5E,EAAA,EAAMyD,IAAP,KACE,kBAACzD,EAAA,EAAMC,KAAP,KACE,kBAACQ,EAAA,EAAD,CACEyJ,KAAK,4BACLC,UAAU,OACVC,QAAM,EACNC,OAAK,EACL1J,OAAK,EACL2J,WAAS,EACT3E,UACGpC,EAAI,GAAK,IAAM,GAAgC,IAA3B8F,EAAgB9I,OACjC,QACA,MAGN,kBAACE,EAAA,EAASG,KAAV,KAC8B,IAA3ByI,EAAgB9I,OACf,kBAACE,EAAA,EAASI,KAAV,wDAIAwI,EAAgBhI,KAAKC,KAAcE,KAAI,SAACiG,GACtC,OACE,kBAAChH,EAAA,EAASI,KAAV,CACEC,QAAS,kBApHC,SAACgI,EAAI/B,GACjCA,EAAOhB,MACT5E,EAASoJ,YAAyBzB,EAAI/B,IAEtC5F,EAASqJ,YAAoB1B,EAAI/B,IAgHE0D,CAA0B3B,EAAIrB,KAE5CA,EAAG7F,aASnB2F,EAAe/F,KAAI,SAACuE,GACnB,OAAgC,IAAzBA,EAAMnG,QAAQW,OACnB,kBAAC,EAAD,CAAiBuI,GAAIA,EAAI/B,OAAQhB,EAAMnG,QAAQ,KAE/C,kBAAC,EAAD,CAAgBkJ,GAAIA,EAAI/C,MAAOA,WChJ9B2E,EA9BS,WACtB,IAAMvJ,EAAWC,cACXgI,EAAkBjH,aAAY,SAACC,GAAD,OAAWA,EAAMxC,QAAQwJ,mBAM7D,OACE,oCACGA,EACE/H,MAAK,SAACyC,EAAGC,GAAJ,OAAU6D,OAAO9D,EAAEG,IAAM2D,OAAO7D,EAAEE,OACvCzC,KAAI,SAACsH,EAAIvF,GACR,OAAO,kBAAC,EAAD,CAAgBuF,GAAIA,EAAIvF,EAAGA,EAAG5B,IAAKmH,EAAG7E,QAGjD,kBAAC4F,EAAA,EAAKC,OAAN,CACE3J,MAAO,CACLyI,WAAYQ,EAAgB7I,OAAS,EAAI,SAAW,UACpDwJ,UAAW,QAGb,kBAACY,EAAA,EAAD,CAAQjK,MAAI,EAACI,QAAS,WAjB1BK,EAASyJ,gBAiB0CvK,MAAM,QACnD,kBAACwB,EAAA,EAAD,CAAMD,KAAK,Y,sECSNiJ,EAjCI,SAAC,GAAgB,IAAd9D,EAAa,EAAbA,OACd+D,EAAO3I,aAAY,SAACC,GAAD,OAAWA,EAAM0I,QACpC3J,EAAWC,cAFgB,EAGHkB,oBAAS,GAHN,mBAG1ByI,EAH0B,KAGjBC,EAHiB,KAKjChI,qBAAU,WACRgI,EAAWF,EAAKG,iBAAiBhD,SAASlB,EAAO9C,OAChD,CAAC6G,IASJ,MACuB,gBAArB/D,EAAOmE,WAA8B,KACrC,oCACA,kBAAC,IAAD,CACE7K,MAAM,OACNqB,MAAI,EACJyJ,SAAO,EACPrK,QAAS,WAZTK,EADE4J,EACOK,YAAeN,EAAM/D,EAAO9C,IAE5BoH,YAAaP,EAAM/D,EAAO9C,MAWnC9D,MAAO,CAAEuG,MAAO,QAAS4E,SAAU,UAEnC,kBAACzJ,EAAA,EAAD,CAAMD,KAAK,YAPb,IAO2BmJ,EAAU,wBAAqB,mBCoH/CQ,EAlIG,SAAC,GAAgB,IAAdxE,EAAa,EAAbA,OACb7E,EAAkBC,aAAY,SAACC,GAAD,OAAWA,EAAMxC,QAAQsC,mBACvDf,EAAWC,cA0CjB,OACE,yBACEjB,MAAO,CACLqL,OAAQ,QACR7E,OAAQ,YAGV,kBAAC8E,EAAA,EAAD,CACE9K,OAAK,EACLR,MAAO,CAAEuL,QAAS,SAClB5K,QAAS,kBAnDK,WAClB,IAAM6K,EAAczJ,EAAgBoG,MAAK,SAAC7I,GAAD,OAAOA,EAAEwE,KAAO8C,EAAO9C,MAC5D0H,GAAeA,EAAYC,QAC7BzK,EAAS6F,YAAqBD,IAE9B5F,EAAS0K,YAAkB9E,IA8CV+E,IACfC,aAAc,WAvCE7J,EAAgBoG,MAAK,SAAC7I,GAAD,OAAOA,EAAEwE,KAAO8C,EAAO9C,OAE9D9C,EAAS6K,YAAcjF,KAsCrBkF,aAAc,kBAnCK,WACvB,IAAMN,EAAczJ,EAAgBoG,MAAK,SAAC7I,GAAD,OAAOA,EAAEwE,KAAO8C,EAAO9C,MAC7D0H,IAAgBA,EAAYC,SAC7BzK,EAAS+K,YAAenF,IAgCFoF,KAEpB,kBAACV,EAAA,EAAKlH,OAAN,CAAapE,MAAO,CAAEiM,QAAS,WAC7B,kBAAC,IAAD,CAAO/L,MAAM,OAAOqB,MAAI,EAACyJ,SAAO,EAACkB,QAAM,GACpCtF,EAAOnF,MACD,IAHX,SAII,IACF,kBAAC,IAAD,CAAOvB,MAAM,QAAQqB,MAAI,EAACyJ,SAAO,EAACkB,QAAM,GACrCtF,EAAOmE,YAEV,kBAAC,IAAD,CAAMoB,GAAIC,YAAYxF,IACpB,kBAAC,IAAD,CACE1G,MAAM,OACNqB,MAAI,EACJyJ,SAAO,EACPhL,MAAO,CAAEuG,MAAO,QAAS4E,SAAU,UAEnC,kBAACzJ,EAAA,EAAD,CAAMD,KAAK,aANb,mBAWJ,kBAAC6J,EAAA,EAAKe,KAAN,KACGzF,EAAO0F,SADV,IACoB,kBAAC,EAAD,CAAY1F,OAAQA,KAGxC,kBAAC0E,EAAA,EAAKiB,YAAN,KACE,kBAAC,IAAD,CAAOrM,MAAM,OAAOqB,MAAI,EAACyJ,SAAO,EAACkB,QAAM,GACrC,kBAACxK,EAAA,EAAD,CAAMD,KAAK,aACEmF,EAAO4F,KAzDhBnL,KAAI,SAACoL,GACf,OAAU,IAANA,EACK,IACQ,IAANA,EACF,IACQ,IAANA,EACF,IACQ,IAANA,EACF,KAEA,QAgDI,IAJX,SAKI,IACF,kBAAC,IAAD,CAAOvM,MAAM,QAAQqB,MAAI,EAACyJ,SAAO,EAACkB,QAAM,GACtC,kBAACxK,EAAA,EAAD,CAAMD,KAAK,UACVmF,EAAO8F,OACD,IATX,SAUI,IACF,kBAAC,IAAD,CAAOxM,MAAM,OAAOqB,MAAI,EAACyJ,SAAO,EAACkB,QAAM,GACpCtF,EAAOI,QADV,UAGA,kBAAC,IAAD,CACE9G,MAAM,OACNqB,MAAI,EACJyJ,SAAO,EACPhL,MAAO,CAAEuG,MAAO,QAAS4E,SAAU,SACnCxK,QAAS,WAzFjBK,EAAS2L,YAAe/F,EAAOgB,SAAUhB,EAAOiB,cA2FxC,kBAACnG,EAAA,EAAD,CAAMD,KAAK,QAPb,qCAUA,6BACA,kBAAC,IAAD,CACEvB,MAAwB,WAAjB0G,EAAOgG,MAAqB,OAAS,QAC5CrL,MAAI,EACJyJ,SAAO,EACPkB,QAAM,GAELtF,EAAOgG,MANV,SAOS,IAhCX,SAiCI,IACF,kBAAC,IAAD,CACE1M,MAAwB,WAAjB0G,EAAOgG,MAAqB,OAAS,QAC5CrL,MAAI,EACJyJ,SAAO,EACPkB,QAAM,GAELtF,EAAOiG,MANV,c,SCwBJC,EAAgB,SAACrN,EAASsN,EAAQC,EAAUC,EAAaC,GAC7D,IAAIC,EAAIJ,EAAOK,cACXC,EAAiB5N,EAClBC,QAAO,SAACJ,GACP,OAAI4N,GACiB,WAAZ5N,EAAEsN,SAKZlN,QACC,SAACJ,GAAD,OACEA,EAAEmC,KAAK2L,cAActF,SAASqF,IAC9B7N,EAAEyL,WAAWqC,cAActF,SAASqF,MAEvCjM,KAAKC,KA4BR,OA3BI6L,EAAS5M,OAAS,IACpBiN,EAAiBA,EAAe3N,QAAO,SAACkH,GACtC,IAAI0G,EAAI,EAQR,OAPA1G,EAAO4F,KAAKvE,SAAQ,SAACwE,EAAGrJ,GACtB4J,EAAS/E,SAAQ,SAACsF,GACZ3G,EAAO4F,KAAKpJ,KAAOmK,EAAE1J,KAAO+C,EAAO8F,MAAMtJ,KAAOmK,EAAEC,MACpDF,UAICA,IAAMN,EAAS5M,WAGtB6M,EAAY7M,OAAS,IACvBiN,EAAiBA,EAAe3N,QAAO,SAACkH,GACtC,IAAI6G,GAAQ,EAQZ,OAPA7G,EAAO4F,KAAKvE,SAAQ,SAACwE,EAAGrJ,GACtB6J,EAAYhF,SAAQ,SAACsF,GACf3G,EAAO4F,KAAKpJ,KAAOmK,EAAE1J,KAAO+C,EAAO8F,MAAMtJ,KAAOmK,EAAEC,OACpDC,GAAQ,UAINA,MAILJ,GAGMK,EAhMO,WACpB,IAAMC,EAAQ3L,aAAY,SAACC,GAAD,OAAWA,EAAMxC,QAAQkO,SAC7CC,EAAQ5L,aAAY,SAACC,GAAD,OAAWA,EAAMxC,QAAQmO,SAC7CC,EAAU7L,aAAY,SAACC,GAAD,OAAWA,EAAMxC,QAAQoO,WAC/CC,EAAU9L,aAAY,SAACC,GAAD,OAAWA,EAAMxC,QAAQA,WAC/CuN,EAAWhL,aAAY,SAACC,GAAD,OAAWA,EAAMxC,QAAQuN,YAL5B,EAME7K,mBAAS,IANX,mBAMnB4K,EANmB,KAMXgB,EANW,KAOpBd,EAAcjL,aAAY,SAACC,GAAD,OAAWA,EAAMxC,QAAQwN,eACnDjM,EAAWC,cARS,EASgBkB,mBAAS,IATzB,mBASnB6L,EATmB,KASJC,EATI,OAUA9L,oBAAS,GAVT,mBAUnB+L,EAVmB,KAUZC,EAVY,OAWMhM,oBAAS,GAXf,mBAWnBiM,EAXmB,KAWTC,EAXS,KAYpBC,EAAQC,kBAAO,GACfC,EAAWD,kBAAO,GAbE,EAcQpM,oBAAS,GAdjB,mBAcnB+K,EAdmB,KAcRuB,EAdQ,KAepBC,EAAWH,iBAAO,IAfE,EAgBgBpM,mBAAS,MAhBzB,mBAgBnBwM,EAhBmB,KAgBJC,EAhBI,KAkB1B/L,qBAAU,WACR7B,EACE6N,YACE,EACAlB,EACAW,EACAE,EACAzB,EACAC,EAAS3L,KAAI,SAACkM,GAAD,OAAOA,EAAEzJ,MACtBmJ,EAAY5L,KAAI,SAACkM,GAAD,OAAOA,EAAEzJ,MACzBoJ,MAGH,CAACH,EAAQC,EAAUC,EAAaC,IAEnCrK,qBAAU,WACRoL,EACEnB,EAAcgB,EAASf,EAAQC,EAAUC,EAAaC,MAEvD,CAACY,EAASd,EAAUC,EAAaC,IAmBpCrK,qBAAU,WACJyL,EAAMQ,SAAoC,IAAzBd,EAAc5N,OACjCiO,GAAY,GACsB,IAAzBL,EAAc5N,QAAgBkO,EAAMQ,SAC7CT,GAAY,GAETC,EAAMQ,QAGTX,GAAS,GAFTA,GAAS,KAIV,CAACH,EAAeM,IAanB,OACE,oCACE,yBAAKtO,MAAO,CAAEiM,QAAS,OAAQ8C,WAAY,WACzC,kBAACC,EAAA,EAAD,CACEzO,KAAK,SACL0O,YAAW,sBACXC,MAAOR,EAASI,QAChBK,SAAU,SAACC,GAAD,OAlBQ,SAACA,GACzBV,EAASI,QAAUM,EAAEC,OAAOH,MAExBP,GAAeW,aAAaX,GAChCC,EACEW,YAAW,WACTxB,EAAUW,EAASI,WAClB,MAWkBU,CAAkBJ,IACnCK,KAAK,KACLxL,KAAK,MACLjE,MAAO,CAAE0P,MAAO,MAAOC,WAAY,SAErC,kBAACrL,EAAA,EAAD,CACEC,QACE,kBAACqL,EAAA,EAAD,CACEhF,QAASsC,EACTvM,QAAS,kBAAM8N,GAAcvB,IAC7B2C,MAAM,sCAGVrM,SAAS,eACTsM,WAAS,EACTtL,QACE,kBAAC9C,EAAA,EAAD,CACED,KAAK,SACLvB,MAAM,OACN+D,KAAK,MACLjE,MAAO,CAAE+P,YAAa,SACtBC,QAAM,OAKd,yBACEhQ,MAAO,CACLqI,SAAU,OACVD,UAAW,OACXwB,UAAW,QAGXsE,EAEEE,EACF,kBAAC6B,EAAA,EAAD,MAEA,kBAAC,IAAD,CACEC,UAAW,EACXC,SAxFO,WACV3B,EAASM,SACZ9N,EACE6N,YACEjB,EACAD,EACAW,EACAE,EACAzB,EACAC,EAAS3L,KAAI,SAACkM,GAAD,OAAOA,EAAEzJ,MACtBmJ,EAAY5L,KAAI,SAACkM,GAAD,OAAOA,EAAEzJ,MACzBoJ,KA8EEW,QAASA,EACTuC,OACE,yBAAKpG,UAAU,SAASxI,IAAK,GAC3B,kBAACuC,EAAA,EAAD,CAAiBsM,eAAgB,KAGrCC,WAAW,GAEVtC,EAAc3M,KAAI,SAAC/B,GAAD,OACjB,kBAAC,EAAD,CAAWsH,OAAQtH,EAAGkC,IAAKlC,EAAEwE,SAhBjC,kBAACC,EAAA,EAAD,SClGJwM,G,OAAW,SAACrB,GAKhB,OAJQA,EAAM3H,QAAO,SAACiJ,EAAKC,GAEzB,OADAD,EAAIC,GAAQA,EACLD,IACN,MAIUE,EArCO,WACpB,IAAMC,EAAe3O,aAAY,SAACC,GAAD,OAAWA,EAAMxC,QAAQkR,gBACpD3P,EAAWC,cAIjB,OACE,6BACE,2BACE,kBAAC,IAAD,CAAOf,MAAM,OAAOqB,MAAI,GAAxB,iCAIF,kBAAC,IAAD,CACEqP,IAAK,EACLC,IAAK,GACLC,YAAY,EACZ3B,SAdiB,SAACD,GACtBlO,EAAS+P,YAAmB7B,KAcxBA,MAAOyB,EACPK,MAAOT,EAASI,GAChBM,WAAY,CACV,CAAEhR,gBAAiB,WACnB,CAAEA,gBAAiB,gB,SC8BvBiR,EAAe,WACnB,IAAMC,EAAgBnP,aACpB,SAACC,GAAD,OAAWA,EAAMxC,QAAQ2R,SAASD,iBAG9BnQ,EAAWC,cAKjB,OACE,6BACE,uEACA,kBAAC,IAAD,CACE2P,IAAK,EACLC,IAAK,GACL1B,SAViB,SAACD,GACtBlO,EAASqQ,YAAoBnC,KAUzBA,MAAOiC,EACPH,MAAOM,EAAQH,GACfF,WAAY,CAAEhR,gBAAiB,eAMjCqR,EAAU,SAACpC,GAKf,MAJQ,CAACA,GAAO3H,QAAO,SAACiJ,EAAKC,GAE3B,OADAD,EAAIC,GAAQA,EACLD,IACN,KAIUe,EA7ES,WACtB,IAAMH,EAAWpP,aAAY,SAACC,GAAD,OAAWA,EAAMxC,QAAQ2R,YAD1B,EAEcjP,oBAAS,GAFvB,mBAErBqP,EAFqB,KAENC,EAFM,OAGEtP,oBAAS,GAHX,mBAGrByI,EAHqB,KAGZC,EAHY,KAItB7J,EAAWC,cAQjB,OACE,kBAACyQ,EAAA,EAAD,CAAW1R,MAAO,CAAEiM,QAAS,iBAC3B,kBAACyF,EAAA,EAAUC,MAAX,CAAiBC,OAAQJ,EAAeK,MAAO,GAC7C,yBAAK7R,MAAO,CAAEiM,QAAS,SACrB,kBAAC2D,EAAA,EAAD,CACEkC,eAAgBV,EAASW,aACzB5C,SAAU,kBAXlBnO,EAASgR,eACTnH,GAAYD,QACZ6G,GAAkB7G,MAWZ,kBAAC,IAAD,CACE1K,MAAM,OACNqB,MAAI,EACJyJ,SAAO,EACPrK,QAAS,kBAAM8Q,GAAkBD,IACjCxR,MAAO,CAAE2P,WAAY,UALvB,sBASA,kBAACjO,EAAA,EAAD,CACED,KAAK,aACLvB,MAAM,OACNS,QAAS,kBAAM8Q,GAAkBD,IACjCxR,MAAO,CAAE2P,WAAY,aAI3B,kBAAC+B,EAAA,EAAUO,QAAX,CAAmBL,OAAQJ,EAAexR,MAAO,CAAE2P,WAAY,QAC7D,kBAAC,EAAD,SChBFY,EAAW,SAACrB,GAKhB,OAJQA,EAAM3H,QAAO,SAACiJ,EAAKC,GAEzB,OADAD,EAAIC,GAAQA,EACLD,IACN,KAIU0B,EAtCM,WACnB,IAAMC,EAAcnQ,aAAY,SAACC,GAAD,OAAWA,EAAMxC,QAAQ0S,eACnDnR,EAAWC,cAKjB,OACE,6BACE,2BACE,kBAAC,IAAD,CAAOf,MAAM,OAAOqB,MAAI,GAAxB,gCAIF,kBAAC,IAAD,CACEqP,IAAK,EACLC,IAAK,GACLC,YAAY,EACZ3B,SAfiB,SAACD,GACtBlO,EAASoR,YAAkBlD,KAevBA,MAAOiD,EACPnB,MAAOT,EAAS4B,GAChBlB,WAAY,CACV,CAAEhR,gBAAiB,WACnB,CAAEA,gBAAiB,gB,4CCwPdoS,OA/QO,WACpB,IAAMrR,EAAWC,cACXkR,EAAcnQ,aAAY,SAACC,GAAD,OAAWA,EAAMxC,QAAQ0S,eACnDG,EAAkBtQ,aAAY,SAACC,GAAD,OAAWA,EAAMxC,QAAQ6S,mBACvD3B,EAAe3O,aAAY,SAACC,GAAD,OAAWA,EAAMxC,QAAQkR,gBACpD1H,EAAkBjH,aAAY,SAACC,GAAD,OAAWA,EAAMxC,QAAQwJ,mBACvDmI,EAAWpP,aAAY,SAACC,GAAD,OAAWA,EAAMxC,QAAQ2R,YAChDmB,EAAcvQ,aAAY,SAACC,GAAD,OAAWA,EAAMxC,QAAQ8S,eACnDxQ,EAAkBC,aAAY,SAACC,GAAD,OAAWA,EAAMxC,QAAQsC,mBARnC,EASAI,mBAAS,wBATT,mBASnB+M,EATmB,KASZsD,EATY,OAUIrQ,oBAAS,GAVb,mBAUnBsQ,EAVmB,KAUVC,EAVU,KAY1B7P,qBAAU,WACJ4P,GAyMN,SACExJ,EACAjI,EACA2R,EACAL,EACAM,GAEmC3J,EAAgBvJ,QAAO,SAACiJ,GACzD,OAAIA,EAAGlJ,QAAQW,OAAS,KAMKA,OAAS,EACtCY,EAAS6R,YAAaF,EAAmBL,KAEzCtR,EAAS6R,YAAaD,EAAsBN,KAE9CI,GAAW,GACXF,EAAS,4BA5NPM,CACE7J,EACAjI,EACA2R,EACAL,EACAM,KAGH,CAACH,IAEJ,IAAMM,EAAa,yCAAG,uBAAApP,EAAA,yDACDqP,IADC,uBAGlBR,EAAS,qCAHS,0BAMpBE,GAAW,GANS,2CAAH,qDAwBbC,EAAqB,SAACM,GAC1B,IAAIC,EAAoB,GACpBC,EAAkBlK,EAAgBvJ,QAAO,SAACiJ,GAAD,OAAQA,EAAGlJ,QAAQW,OAAS,KACrEgT,EAlByB,SAACD,GAC9B,IAAIE,EAAQ,GACRC,EAAqBH,EAAgB9R,KAAI,SAACkS,GAE5C,OADkBA,EAAS9T,QAAQ4B,KAAI,SAACoI,GAAD,OAAcA,EAAS3F,SAShE,OANAwP,EAAqBE,KAAOC,QAAQH,GACpCvR,EAAgBkG,SAAQ,SAACX,GAClBgM,EAAmBxL,SAASR,EAAGxD,KAClCuP,EAAMhQ,KAAKiE,MAGR+L,EAMoBK,CAAuBP,GAC9CQ,EAAsB,YAAOR,EAAgB9R,KAAI,SAACsH,GAAD,OAAQA,EAAGlJ,YAE5DmU,EAAyBxM,EAAe,YACvCgM,IACF/R,KAAI,SAACuE,GAAD,6BAAiBA,EAAMnG,aAS9B,OAPAoU,EACEF,EACAC,EACAV,EACAD,GAGKC,GAGHN,EAAwB,SAACK,GAC7B,IAAIC,EAAoB,GACpBU,EAAyBxM,EAC3BrF,GACAV,KAAI,SAACuE,GAAD,6BAAiBA,EAAMnG,aAG7B,OADAqU,EAAcF,EAAwBV,EAAmBD,GAClDC,GAGHW,EAAoB,SACxBE,EACAC,EACAC,EACA7T,GAEA,IAAIyQ,EAAMkD,EAAc3T,OAAS,GACjC,SAAS8T,EAAOC,EAAK/Q,GACnB,IAAK,IAAIgR,EAAI,EAAGC,EAAIN,EAAc3Q,GAAGhD,OAAQgU,EAAIC,GAC3CJ,EAAS7T,SAAWA,EAD0BgU,IAAK,CAGvD,IAAIzQ,EAAIwQ,EAAI/S,MAAM,GAClBuC,EAAEN,KAAK0Q,EAAc3Q,GAAGgR,IACpBhR,GAAKyN,EACPiD,EAAcE,EAAeC,EAAU7T,EAAQuD,GAC1CuQ,EAAOvQ,EAAGP,EAAI,IAGzB8Q,CAAO,GAAI,IAGPJ,EAAgB,SAACQ,EAAaL,EAAU7T,EAAQmU,GACpD,IAAI1D,EAAMyD,EAAYlU,OAAS,GAC/B,SAAS8T,EAAOC,EAAK/Q,GACnB,IAAK,IAAIgR,EAAI,EAAGC,EAAIC,EAAYlR,GAAGhD,OAAQgU,EAAIC,GACzCJ,EAAS7T,SAAWA,EADwBgU,IAAK,CAGrD,IAAIzQ,EAAIwQ,EAAI/S,MAAM,GACdkT,EAAYlR,GAAGgR,IAAIzQ,EAAEN,KAAKiR,EAAYlR,GAAGgR,IACzChR,GAAKyN,GACH0D,IAAW5Q,EAAC,sBAAOA,GAAP,YAAa4Q,KACzBC,EAAkB7Q,IACpBsQ,EAAS5Q,KAAKM,IAEXuQ,EAAOvQ,EAAGP,EAAI,IAGzB8Q,CAAO,GAAI,IAGP9M,EAAiB,SAAC3H,GACtB,IAAIuI,EAAU,GAcd,OAbAvI,EAAQyB,KAAKC,KAAc8G,SAAQ,SAACX,GAClC,IAAIY,EAAoBF,EAAQG,MAC9B,SAACvC,GAAD,OAAWA,EAAMQ,YAAN,UAAuBkB,EAAGM,UAA1B,OAAqCN,EAAGO,cAEjDK,EACFA,EAAkBzI,QAAQ4D,KAAKiE,GAE/BU,EAAQ3E,KAAK,CACX5D,QAAS,CAAC6H,GACVlB,UAAU,GAAD,OAAKkB,EAAGM,UAAR,OAAmBN,EAAGO,gBAI9BG,GAGHwM,EAAoB,SAACC,GACzB,SAgIJ,SAAiBC,EAAG/Q,EAAGC,EAAG+Q,GACxB,IAAI/D,EAAMgE,KAAKhE,IAAIiE,MAAMD,KAAM,CAACjR,EAAGC,IACjCiN,EAAM+D,KAAK/D,IAAIgE,MAAMD,KAAM,CAACjR,EAAGC,IACjC,OAAO+Q,EAAYD,GAAK9D,GAAO8D,GAAK7D,EAAM6D,EAAI9D,GAAO8D,EAAI7D,EAlIrDiE,CAAQL,EAAiBrU,OAAQ+R,EAAY,GAAIA,EAAY,IAAI,IACjE4C,EAAaN,IACbO,EAAcP,IACdQ,EAAcR,KAOZQ,EAAgB,SAACR,GACrB,IAAMS,EAAyBC,EAA0BV,GACzD,OAAIrD,EAASW,eACJmD,EAAyB9D,EAASD,iBAEpC+D,EAAyB,IAG5BF,EAAgB,SAACP,GACrB,OAAKlC,GAIe,IADF6C,EAAeX,IAO7BM,EAAe,SAACN,GAEpB,QADuBY,EAAuBZ,GACtB9D,EAAa,KAGjCqC,EAAkB,WAEtB,OAD+BqC,EAAuBtT,IAExB4O,EAAa,IACvC5O,EAAgB3B,QAAU+R,EAAY,IAkBtCgD,EAA4B,SAACG,GAEjC,OAb+B,SAAC7V,GAChC,IAAI8V,EAAa,GACbC,EAAe,GAMnB,OALA/V,EAAQwI,SAAQ,SAACrB,GACf2O,EAAWlS,KAAKuD,EAAO6O,SACvBD,EAAehC,KAAOkC,MAAMF,EAAc5O,EAAO6O,aAEnDF,EAAa/B,KAAOC,QAAQ8B,IACVnV,OAASoV,EAAapV,OAI1BuV,CAAyBL,IAInCD,EAAyB,SAAC5V,GAC9B,OAAOA,EAAQ8H,QAAO,SAACC,EAAOlI,GAC5B,OAAOkI,EAAQC,OAAOnI,EAAE0H,WACvB,IAGCoO,EAAiB,SAAC3V,GACtB,IAAImW,EAAY,GAKhB,OAJAnW,EAAQwI,SAAQ,SAAC3I,GACfsW,EAAYpC,KAAOkC,MAAME,EAAWtW,EAAEkN,SAGjCoJ,EAAUxV,QA0BnB,OACE,6BACE,kBAACoK,EAAA,EAAD,CACEtK,MAAM,OACNS,QAAS,kBAAMoS,KACfN,QAASA,EACTjS,OAAK,GAEJ0O,KC3NHoC,GAAU,SAACpC,GAKf,MAJQ,CAACA,GAAO3H,QAAO,SAACiJ,EAAKC,GAE3B,OADAD,EAAIC,GAAQA,EACLD,IACN,KAIUqF,GAlCS,WACtB,IAAMvD,EAAkBtQ,aAAY,SAACC,GAAD,OAAWA,EAAMxC,QAAQ6S,mBACvDtR,EAAWC,cAKjB,OACE,6BACE,2BACE,kBAAC,IAAD,CAAOf,MAAM,OAAOqB,MAAI,GAAxB,sCAIF,kBAAC,IAAD,CACEqP,IAAK,EACLC,IAAK,GACL1B,SAdiB,SAACD,GACtBlO,EAAS8U,YAAsB5G,KAc3BA,MAAOoD,EACPtB,MAAOM,GAAQgB,GACfrB,WAAY,CAAEhR,gBAAiB,eC0CxB8V,GArDQ,WACrB,IAAMxD,EAAcvQ,aAAY,SAACC,GAAD,OAAWA,EAAMxC,QAAQ8S,eACnDvR,EAAWC,cAMjB,OACE,oCACE,kBAACyI,EAAA,EAAKpG,IAAN,KACE,kBAACoG,EAAA,EAAKC,OAAN,KACE,kBAAC,GAAD,QAGJ,kBAACD,EAAA,EAAKpG,IAAN,CAAUtD,MAAO,CAAE4J,UAAW,UAC5B,kBAACF,EAAA,EAAKC,OAAN,KACE,kBAAC,EAAD,QAGJ,kBAACD,EAAA,EAAKpG,IAAN,CAAUtD,MAAO,CAAE4J,UAAW,UAC5B,kBAACF,EAAA,EAAKC,OAAN,KACE,kBAAC,EAAD,QAGJ,kBAACD,EAAA,EAAKpG,IAAN,CAAUtD,MAAO,CAAE4J,UAAW,UAC5B,kBAACF,EAAA,EAAKC,OAAN,KACE,kBAAC,GAAD,QAGJ,kBAACD,EAAA,EAAKpG,IAAN,CAAUtD,MAAO,CAAE4J,UAAW,UAC5B,kBAACF,EAAA,EAAKC,OAAN,KACE,kBAACiG,EAAA,EAAD,CACEkC,eAAgBS,EAChBpD,SAAU,WA7BlBnO,EAASgV,gBA8BDnG,MACE,kBAAC,IAAD,CAAO3P,MAAM,OAAOqB,MAAI,GACrB,IADH,4CAQR,kBAACmI,EAAA,EAAKpG,IAAN,CAAUtD,MAAO,CAAE4J,UAAW,QAC5B,kBAACF,EAAA,EAAKC,OAAN,KACE,kBAAC,EAAD,UCEKsM,UAtDO,WACpB,OAAO9R,WACL,yBAAKnE,MAAO,CAAEkW,OAAQ,UACpB,kBAACxM,EAAA,EAAD,CAAM1J,MAAO,CAAEqL,OAAQ,UACvB,kBAAC3B,EAAA,EAAKpG,IAAN,KACI,kBAACoG,EAAA,EAAKC,OAAN,KACE,kBAAC,EAAD,QAGJ,kBAACD,EAAA,EAAKpG,IAAN,KACE,kBAACoG,EAAA,EAAKC,OAAN,KACE,kBAAC,EAAD,QAGJ,kBAACD,EAAA,EAAKpG,IAAN,KACE,kBAACoG,EAAA,EAAKC,OAAN,KACE,kBAAC,EAAD,CAAewM,WAAS,MAK5B,kBAACzM,EAAA,EAAKpG,IAAN,KACE,kBAACoG,EAAA,EAAKC,OAAN,KACE,kBAAC,GAAD,QAGJ,kBAACD,EAAA,EAAKpG,IAAN,CAAUiF,QAAS,GACjB,kBAAC,EAAD,SAKN,yBAAKvI,MAAO,CAAEkW,OAAQ,UACpB,kBAACxM,EAAA,EAAD,CAAMnB,QAAS,EAAGvI,MAAO,CAAEqL,OAAQ,UACjC,kBAAC3B,EAAA,EAAKpG,IAAN,KACE,kBAACoG,EAAA,EAAKC,OAAN,CAAawM,WAAS,EAACzG,MAAO,GAC5B,kBAAC,EAAD,MACA,kBAAC,GAAD,OAEF,kBAAChG,EAAA,EAAKC,OAAN,CAAa+F,MAAO,GAClB,kBAAC,EAAD,OAEF,kBAAChG,EAAA,EAAKC,OAAN,KACE,kBAAC,EAAD,CAAewM,WAAS,MAG5B,kBAACzM,EAAA,EAAKpG,IAAN,CAAUiF,QAAS,GACjB,kBAAC,EAAD","file":"static/js/17.8fd65af8.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Table,\n  Dropdown,\n  Icon,\n  Pagination,\n  Popup,\n} from 'semantic-ui-react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  findTimeCell,\n  resetTimeCell,\n  notFindTimeCell,\n  setCurrentScenario,\n  toggleCellCoursesVisiblity,\n} from '../../../reducers/courseReducer';\nimport { Label } from '../../Nav/NavTheme';\nimport CommentsLoading from '../../Comments/CommentsLoading';\nimport { isMobile } from 'react-device-detect';\nimport { compareNames } from '../../../utils/utils';\n\nconst CoursePlannerTable = () => {\n  const selectedCourses = useSelector((state) => state.courses.selectedCourses);\n  const scenarios = useSelector((state) => state.courses.scenarios);\n  const [scenariosActivePage, setScenariosActivePage] = useState(0);\n  const cells = useSelector((state) => state.courses.cells);\n  const extraHours = useSelector((state) => state.courses.extraHours);\n  const dispatch = useDispatch();\n  const [rows, setRows] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [paginationVisible, setPaginationVisible] = useState(false);\n  const TOTAL_HOURS = 14;\n\n\n  useEffect(() => {\n    if (scenarios.length > 0 && scenariosActivePage > 0) {\n      dispatch(setCurrentScenario(scenarios[scenariosActivePage - 1]));\n    }\n  }, [scenariosActivePage, scenarios]);\n\n\n\n  useEffect(() => {\n    if (scenarios.length > 0) {\n      setPaginationVisible(true);\n      setScenariosActivePage(1);\n    } else {\n      setScenariosActivePage(0);\n      setPaginationVisible(false);\n      dispatch(setCurrentScenario(selectedCourses));\n    }\n  }, [scenarios]);\n\n  const handleScenarioChange = (evet, data) => {\n    setScenariosActivePage(data.activePage);\n  };\n\n  const findCellTime = (c) => {\n    dispatch(findTimeCell(c));\n  };\n\n  const notFindCellTime = (c) => {\n    dispatch(notFindTimeCell(c));\n  };\n\n  const resetCellTime = (c) => {\n    dispatch(resetTimeCell(c));\n  };\n\n  const dropdownFuncs = { findCellTime, notFindCellTime, resetCellTime };\n\n  const toggleVisibilty = () => {\n    setVisible(!visible);\n  };\n\n  useEffect(() => {\n    const rows = [];\n    for (let i = 0; i < TOTAL_HOURS; i++) {\n      rows.push(\n        <Table.Row\n          style={{\n            opacity: visible || i <= 8 ? null : '0,0',\n            position: visible || i <= 8 ? null : 'absolute',\n            left: visible || i <= 8 ? null : '-999999px',\n          }}\n          key={i}\n        >\n          <Table.Cell style={{ backgroundColor: '#F9FAFB' }}>\n            <Label color=\"green\" bold>\n              {i === 0 ? '09' : i + 9}:00\n            </Label>\n          </Table.Cell>\n          {cells\n            .filter((c) => c.time === i)\n            .sort((a, b) => a.day - b.day)\n\n            .map((c) => {\n              return <CellDropdown key={c.id} c={c} f={dropdownFuncs} />;\n            })}\n        </Table.Row>\n      );\n    }\n    setRows(rows);\n  }, [cells, visible]);\n\n  \n\n  if (cells.length === 0 || rows.length === 0) {\n    return <CommentsLoading />;\n  }\n  return (\n    <Table celled size=\"small\" unstackable={isMobile}>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell textAlign=\"center\">\n            <Popup\n              content=\"Herhangi bir saate tıkla\"\n              trigger={\n                <Icon name=\"question circle outline\" color=\"grey\" size=\"big\" />\n              }\n              position=\"right center\"\n            />\n          </Table.HeaderCell>\n\n          <Table.HeaderCell>\n            <Label color=\"blue\" bold>\n              Pazartesi\n            </Label>\n          </Table.HeaderCell>\n          <Table.HeaderCell>\n            <Label color=\"blue\" bold>\n              Salı\n            </Label>\n          </Table.HeaderCell>\n          <Table.HeaderCell>\n            <Label color=\"blue\" bold>\n              Çarşamba\n            </Label>\n          </Table.HeaderCell>\n          <Table.HeaderCell>\n            <Label color=\"blue\" bold>\n              Perşembe\n            </Label>\n          </Table.HeaderCell>\n          <Table.HeaderCell>\n            <Label color=\"blue\" bold>\n              Cuma\n            </Label>\n          </Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n\n      <Table.Body>\n        {rows.map((r) => {\n          return r;\n        })}\n      </Table.Body>\n      <Table.Footer fullWidth>\n        <Table.Row\n          column={1}\n          textAlign=\"center\"\n          style={{\n            opacity: paginationVisible ? null : '0,0',\n            position: paginationVisible ? null : 'absolute',\n            left: paginationVisible ? null : '-999999px',\n          }}\n        >\n          <Table.Cell colSpan=\"6\">\n            <Pagination\n              activePage={scenariosActivePage}\n              onPageChange={(event, data) => handleScenarioChange(event, data)}\n              firstItem={null}\n              lastItem={null}\n              pointing\n              secondary\n              totalPages={scenarios.length}\n            />\n          </Table.Cell>\n        </Table.Row>\n        <Table.Row textAlign=\"center\" column={1}>\n          <Table.Cell selectable colSpan=\"6\" onClick={() => toggleVisibilty()}>\n            <Icon\n              color={extraHours ? 'green' : 'blue'}\n              name={visible ? 'sort up' : 'dropdown'}\n              size=\"large\"\n              onClick={() => toggleVisibilty()}\n            />\n          </Table.Cell>\n        </Table.Row>\n      </Table.Footer>\n    </Table>\n  );\n};\n\nconst CellDropdown = ({ c, f }) => {\n  const visibleCourses = c.courses.filter((cCourse) => cCourse.visible == true);\n  return (\n    <Table.Cell\n      selectable\n      style={{\n        backgroundColor: c.color ? c.color : null,\n      }}\n      textAlign=\"center\"\n    >\n      {visibleCourses.length < 4 ? (\n        <AllCells visibleCourses={visibleCourses} c={c} />\n      ) : c.visible ? (\n        <AllCells visibleCourses={visibleCourses} c={c} upper />\n      ) : (\n        <FirstThreeCells visibleCourses={visibleCourses} c={c} />\n      )}\n\n      <Dropdown icon=\"\" fluid>\n        <Dropdown.Menu>\n          <Dropdown.Item onClick={() => f.findCellTime(c)}>\n            Bu saatte ders ara\n          </Dropdown.Item>\n          <Dropdown.Item onClick={() => f.notFindCellTime(c)}>\n            Bu saatte ders arama\n          </Dropdown.Item>\n          <Dropdown.Item onClick={() => f.resetCellTime(c)}>\n            Sıfırla\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    </Table.Cell>\n  );\n};\n\nconst FirstThreeCells = ({ visibleCourses, c }) => {\n  const dispatch = useDispatch();\n  const makeCellCoursesVisible = () => {\n    dispatch(toggleCellCoursesVisiblity(c, true));\n  };\n  return (\n    <>\n      {c.courses\n        .filter((cCourse) => cCourse.visible).sort(compareNames)\n        .slice(0, 3)\n        .map((cellCourse) => {\n          return (\n            <>\n              <Label color={'red'} bold key={cellCourse.name}>\n                {cellCourse.name}\n              </Label>\n              <br />\n            </>\n          );\n        })}\n      <Icon name=\"caret down\" onClick={() => makeCellCoursesVisible()} />\n    </>\n  );\n};\n\nconst AllCells = ({ visibleCourses, c, upper }) => {\n  const dispatch = useDispatch();\n  const makeCellCoursesHidden = () => {\n    dispatch(toggleCellCoursesVisiblity(c, false));\n  };\n  return (\n    <>\n      {visibleCourses.length !== 0\n        ? c.courses\n            .filter((cCourse) => cCourse.visible).sort(compareNames)\n            .map((cellCourse) => {\n              return (\n                <>\n                  <Label\n                    color={\n                      visibleCourses.length > 1\n                        ? 'red'\n                        : cellCourse.hover\n                        ? 'green'\n                        : 'blue'\n                    }\n                    bold\n                    key={cellCourse.name}\n                  >\n                    {cellCourse.name}\n                  </Label>\n                  <br />\n                </>\n              );\n            })\n        : null}\n      {upper ? (\n        <Icon name=\"caret up\" onClick={() => makeCellCoursesHidden()} />\n      ) : null}\n    </>\n  );\n};\n\nexport default CoursePlannerTable;\n","import React, { useState, useEffect } from 'react';\nimport { Table,  Icon } from 'semantic-ui-react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Label } from '../../Nav/NavTheme';\nimport {\n  removeSelectedCourse,\n  changeCourseVisibility,\n  removeSelectedCoursesWithStack,\n  toggleSelectedCoursesEye,\n} from '../../../reducers/courseReducer';\nimport { compareNames } from '../../../utils/utils';\n\nconst SelectedCourses = () => {\n  const selectedCourses = useSelector((state) => state.courses.selectedCourses);\n  const [credits, setCredits] = useState(0);\n  const [courseLength, setCourseLength] = useState(0);\n  const [stackedCourses, setStackedCourses] = useState([]);\n  useEffect(() => {\n    setCredits(\n      selectedCourses\n        .filter((sc) => sc.visible === true)\n        .reduce((total, c) => {\n          return total + Number(c.credits);\n        }, 0)\n    );\n    setCourseLength(selectedCourses.filter((sc) => sc.visible === true).length);\n    setStackedCourses(getStackedCourses());\n  }, [selectedCourses]);\n\n  const getStackedCourses = () => {\n    let filteredStack = stackedCourses.filter((stack) =>\n      selectedCourses\n        .map((sc) => `${sc.areaCode}${sc.digitCode}`)\n        .includes(stack.shortName)\n    );\n    let mappedStack = filteredStack.map((stack) => {\n      let filteredCourses = stack.courses.filter((stackCourse) =>\n        selectedCourses.map((sc) => sc.id).includes(stackCourse)\n      );\n      return { ...stack, courses: filteredCourses };\n    });\n    let stacked = [...mappedStack];\n    selectedCourses.forEach((sc) => {\n      let presentsInStacked = stacked.find(\n        (stack) => stack.shortName === `${sc.areaCode}${sc.digitCode}`\n      );\n      if (presentsInStacked) {\n        presentsInStacked.courses.push(sc);\n      } else {\n        stacked.push({\n          courses: [sc],\n          shortName: `${sc.areaCode}${sc.digitCode}`,\n          visible: false,\n          eye: true,\n        });\n      }\n    });\n    return stacked;\n  };\n\n  return (\n    <>\n      <div style={{ maxHeight: '70vh', overflow: 'auto', marginBottom: '1em' }}>\n        <Table columns={1}>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>\n                <Label color=\"blue\" bold>\n                  Seçili Dersler\n                </Label>\n\n                <Label color=\"green\" bold style={{ float: 'right' }}>\n                  {credits} Kredi\n                </Label>\n                <Label\n                  color=\"green\"\n                  bold\n                  style={{ float: 'right', marginRight: '1em' }}\n                >\n                  {courseLength} Ders\n                </Label>\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {stackedCourses.length === 0 ? (\n              <Table.Row>\n                <Table.Cell>\n                  <span style={{ visibility: 'hidden' }}>a</span>\n                </Table.Cell>\n              </Table.Row>\n            ) : (\n              stackedCourses.map((stack, i) => {\n                return stack.courses.length === 1 ? (\n                  <SingleCourseSelected\n                    c={stack.courses[0]}\n                    key={stack.courses[0].id}\n                  />\n                ) : (\n                  <MultipleCourses stack={stack} id={i} />\n                );\n              })\n            )}\n          </Table.Body>\n        </Table>\n      </div>\n    </>\n  );\n};\n\nconst MultipleCourses = ({ stack }) => {\n  const dispatch = useDispatch();\n  const [stackVisible, setStackVisible] = useState(stack.visible);\n  const [stackEye, setStackEye] = useState(stack.eye);\n\n  const toggleStackVisibility = () => {\n    setStackVisible(!stackVisible);\n  };\n\n  const handleRemove = () => {\n    dispatch(removeSelectedCoursesWithStack(stack));\n  };\n\n  const toggleStackEye = () => {\n    dispatch(toggleSelectedCoursesEye(stack, !stackEye));\n    setStackEye(!stackEye);\n  };\n\n  if (stackVisible) {\n    return stack.courses.sort(compareNames).map((c, i) => {\n      return (\n        <SingleCourseSelected\n          c={c}\n          key={c.id}\n          last={i === stack.courses.length - 1 ? true : false}\n          toggleStackVisibility={toggleStackVisibility}\n        />\n      );\n    });\n  }\n  return (\n    <Table.Row>\n      <Table.Cell>\n        <Label color=\"blue\" bold>\n          {stack.shortName}{' '}\n        </Label>\n\n        {stack.courses.sort(compareNames).map((stackCourse) => {\n          return (\n            <Label color=\"green\" bold>\n              {stackCourse.sectionCode}{' '}\n            </Label>\n          );\n        })}\n        <Icon\n          name=\"delete\"\n          color=\"green\"\n          style={{ float: 'right', cursor: 'pointer' }}\n          onClick={() => {\n            handleRemove();\n          }}\n        />\n        <Icon\n          name={'caret down'}\n          color=\"green\"\n          style={{ float: 'right', cursor: 'pointer' }}\n          onClick={() => toggleStackVisibility()}\n        />\n        <Icon\n          name={stackEye ? 'eye' : 'eye slash'}\n          color={stackEye ? 'green' : \"red\"}\n          style={{ float: 'right', cursor: 'pointer' }}\n          onClick={() => toggleStackEye()}\n        />\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nexport const SingleCourseSelected = ({ c, last, toggleStackVisibility }) => {\n  const dispatch = useDispatch();\n  const handleClick = (course) => {\n    dispatch(removeSelectedCourse(course));\n  };\n\n  \n\n  const toggleCourseVisiblity = (course) => {\n    dispatch(changeCourseVisibility(course));\n  };\n  return (\n    <Table.Row>\n      <Table.Cell\n     \n      >\n        <Label color=\"blue\" bold>\n          {c.name}{' '}\n        </Label>\n        <Icon\n          name=\"delete\"\n          color=\"green\"\n          style={{ float: 'right', cursor: 'pointer' }}\n          onClick={() => {\n            handleClick(c);\n          }}\n        />\n        <Icon\n          name={c.visible ? 'eye' : 'eye slash'}\n          color={c.visible ? 'green' : \"red\"}\n          style={{ float: 'right', cursor: 'pointer' }}\n          onClick={() => toggleCourseVisiblity(c)}\n        />\n        {last ? (\n          <Icon\n            name={'caret up'}\n            color=\"green\"\n            style={{ float: 'right', cursor: 'pointer' }}\n            onClick={() => toggleStackVisibility()}\n          />\n        ) : null}\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nexport default SelectedCourses;\n","import React, { useState, useEffect } from 'react';\nimport { Table, Grid, Icon, Dropdown, Popup } from 'semantic-ui-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  removeRequiredColumn,\n  addToRequiredColumn,\n  removeFromRequiredColumn,\n  removeRequiredWithStack,\n  addToRequiredColumnMulti,\n} from '../../../reducers/courseReducer';\nimport { Label } from '../../Nav/NavTheme';\nimport { compareNames } from '../../../utils/utils';\n\nconst RequiredColumn = ({ rc, i }) => {\n  const dispatch = useDispatch();\n  const selectedCourses = useSelector((state) => state.courses.selectedCourses);\n  const requiredCourses = useSelector((state) => state.courses.requiredCourses);\n  const [narrowedCourses, setNarrowedCourses] = useState([]);\n  const [stackedCourses, setStackedCourses] = useState([]);\n  useEffect(() => {\n    setNarrowedCourses(narrowRequired());\n  }, [selectedCourses, requiredCourses]);\n\n  useEffect(() => {\n    setStackedCourses(stackCourses(rc.courses));\n  }, [rc]);\n\n  const handleRemoveColumn = (rc) => {\n    dispatch(removeRequiredColumn(rc));\n  };\n\n  const stackCourses = (courses) => {\n    let stacked = [];\n    courses.forEach((sc) => {\n      let presentsInStacked = stacked.find(\n        (stack) => stack.shortName === `${sc.areaCode}${sc.digitCode}`\n      );\n      if (presentsInStacked) {\n        presentsInStacked.courses.push(sc);\n      } else {\n        stacked.push({\n          courses: [sc],\n          shortName: `${sc.areaCode}${sc.digitCode}`,\n          visible: false,\n        });\n      }\n    });\n    return stacked;\n  };\n\n  const handleAddToRequiredColumn = (rc, course) => {\n    if (course.stack) {\n      dispatch(addToRequiredColumnMulti(rc, course));\n    } else {\n      dispatch(addToRequiredColumn(rc, course));\n    }\n  };\n  const handleRemoveFromRequiredColumn = (rc, course) => {\n    dispatch(removeFromRequiredColumn(rc, course));\n  };\n\n  const narrowRequired = () => {\n    let narrowedCourses = [];\n\n    for (let i = 0; i < selectedCourses.length; i++) {\n      if (presentsInColumns(selectedCourses[i])) continue;\n      const columnContainsSections = findColumnContainsSections(\n        selectedCourses[i]\n      );\n      if (columnContainsSections && columnContainsSections.id !== rc.id)\n        continue;\n\n      narrowedCourses.push(selectedCourses[i]);\n    }\n    stackCourses(narrowedCourses).forEach((stack) => {\n      if (stack.courses.length > 1) {\n        narrowedCourses.push({\n          name: `${stack.shortName} HEPSİ`,\n          courses: stack.courses,\n          stack: true,\n        });\n      }\n    });\n\n    return narrowedCourses;\n  };\n\n  const presentsInColumns = (course) => {\n    for (let i = 0; i < requiredCourses.length; i++) {\n      let foundCourse = requiredCourses[i].courses.find(\n        (rcCourse) => rcCourse.id === course.id\n      );\n      if (foundCourse) return true;\n    }\n    return false;\n  };\n\n  function findColumnContainsSections(course) {\n    for (let i = 0; i < requiredCourses.length; i++) {\n      let foundSections = requiredCourses[i].courses.find(\n        (rcCourse) =>\n          rcCourse.digitCode === course.digitCode &&\n          rcCourse.areaCode === course.areaCode\n      );\n      if (foundSections) return requiredCourses[i];\n    }\n  }\n\n  return (\n    <Grid.Column style={{ marginTop: '1em' }}>\n      <Table>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>\n              <Label color=\"blue\" bold>\n                Kesin Olmalı Ders Grubu {i + 1}\n              </Label>\n              {i > 0 ? (\n                <Icon\n                  color=\"green\"\n                  name=\"cancel\"\n                  style={{ float: 'right' }}\n                  onClick={() => handleRemoveColumn(rc)}\n                />\n              ) : (\n                <Popup\n                  content=\"Kesin Olmalı grubuna eklediğin derslerden biri kesinlikle oluşturulan programda yer alır.\"\n                  trigger={\n                    <Icon\n                      name=\"question circle outline\"\n                      color=\"grey\"\n                      style={{ float: 'right' }}\n                      size=\"large\"\n                    />\n                  }\n                  position=\"top center\"\n                />\n              )}\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          <Table.Row>\n            <Table.Cell>\n              <Dropdown\n                text=\"Seçili Derslerden EKLE\"\n                className=\"icon\"\n                button\n                basic\n                fluid\n                scrolling\n                pointing={\n                  (i + 1) % 5 === 0 && narrowedCourses.length === 0\n                    ? 'right'\n                    : 'up'\n                }\n              >\n                <Dropdown.Menu>\n                  {narrowedCourses.length === 0 ? (\n                    <Dropdown.Item>\n                      Buraya eklenecek başka uygun bir ders yok.\n                    </Dropdown.Item>\n                  ) : (\n                    narrowedCourses.sort(compareNames).map((sc) => {\n                      return (\n                        <Dropdown.Item\n                          onClick={() => handleAddToRequiredColumn(rc, sc)}\n                        >\n                          {sc.name}\n                        </Dropdown.Item>\n                      );\n                    })\n                  )}\n                </Dropdown.Menu>\n              </Dropdown>\n            </Table.Cell>\n          </Table.Row>\n          {stackedCourses.map((stack) => {\n            return stack.courses.length === 1 ? (\n              <SingleRowCourse rc={rc} course={stack.courses[0]} />\n            ) : (\n              <MultiRowCourse rc={rc} stack={stack} />\n            );\n          })}\n        </Table.Body>\n      </Table>\n    </Grid.Column>\n  );\n};\n\nconst MultiRowCourse = ({ rc, stack }) => {\n  const dispatch = useDispatch();\n  const [stackVisible, setStackVisible] = useState(stack.visible);\n\n  const toggleStackVisibility = () => {\n    setStackVisible(!stackVisible);\n  };\n\n  const handleRemove = () => {\n    dispatch(removeRequiredWithStack(stack));\n  };\n\n  if (stackVisible) {\n    return stack.courses.sort(compareNames).map((c, i) => {\n      return (\n        <SingleRowCourse\n          rc={rc}\n          key={c.id}\n          course={c}\n          last={i === stack.courses.length - 1 ? true : false}\n          toggleStackVisibility={toggleStackVisibility}\n        />\n      );\n    });\n  }\n  return (\n    <Table.Row>\n      <Table.Cell>\n        <Label color=\"blue\" bold>\n          {stack.shortName}{' '}\n        </Label>\n\n        {stack.courses.sort(compareNames).map((stackCourse) => {\n          return (\n            <Label color=\"green\" bold>\n              {stackCourse.sectionCode}{' '}\n            </Label>\n          );\n        })}\n        <Icon\n          name=\"delete\"\n          color=\"green\"\n          style={{ float: 'right', cursor: 'pointer' }}\n          onClick={() => {\n            handleRemove();\n          }}\n        />\n        <Icon\n          name={'caret down'}\n          color=\"green\"\n          style={{ float: 'right', cursor: 'pointer' }}\n          onClick={() => toggleStackVisibility()}\n        />\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nconst SingleRowCourse = ({ rc, course, last, toggleStackVisibility }) => {\n  const dispatch = useDispatch();\n  const handleRemoveFromRequiredColumn = (rc, course) => {\n    dispatch(removeFromRequiredColumn(rc, course));\n  };\n  return (\n    <Table.Row>\n      <Table.Cell>\n        <Label color=\"blue\" bold>\n          {course.name}\n        </Label>\n        <Icon\n          name=\"cancel\"\n          color=\"green\"\n          style={{ float: 'right' }}\n          onClick={() => handleRemoveFromRequiredColumn(rc, course)}\n        />{' '}\n        {last ? (\n          <Icon\n            name={'caret up'}\n            color=\"green\"\n            style={{ float: 'right', cursor: 'pointer' }}\n            onClick={() => toggleStackVisibility()}\n          />\n        ) : null}\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nexport default RequiredColumn;\n","import React from 'react';\nimport {  Grid, Button, Icon } from 'semantic-ui-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addNewRequiredColumn,\n} from '../../../reducers/courseReducer';\nimport RequiredColumn from './RequiredColumn';\nconst RequiredCourses = () => {\n  const dispatch = useDispatch();\n  const requiredCourses = useSelector((state) => state.courses.requiredCourses);\n\n  const handleAddColumn = () => {\n    dispatch(addNewRequiredColumn());\n  };\n\n  return (\n    <>\n      {requiredCourses\n        .sort((a, b) => Number(a.id) - Number(b.id))\n        .map((rc, i) => {\n          return <RequiredColumn rc={rc} i={i} key={rc.id} />;\n        })}\n\n      <Grid.Column\n        style={{\n          visibility: requiredCourses.length > 9 ? 'hidden' : 'visible',\n          marginTop: '1em',\n        }}\n      >\n        <Button icon onClick={() => handleAddColumn()} color=\"blue\">\n          <Icon name=\"add\" />\n        </Button>\n      </Grid.Column>\n    </>\n  );\n};\n\nexport default RequiredCourses;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { followCourse, unFollowCourse } from '../../reducers/userReducer';\nimport {  Icon } from 'semantic-ui-react';\nimport { Label } from '../Nav/NavTheme';\n\nconst QuotaLabel = ({ course }) => {\n  const user = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n  const [checked, setChecked] = useState(false);\n\n  useEffect(() => {\n    setChecked(user.followingCourses.includes(course.id));\n  }, [user]);\n\n  const handleFollowCourse = () => {\n    if (checked) {\n      dispatch(unFollowCourse(user, course.id));\n    } else {\n      dispatch(followCourse(user, course.id));\n    }\n  };\n  return (\n    course.parentName ==='STAFF STAFF' ? null:\n    <>\n    <Label\n      color=\"blue\"\n      bold\n      pointer\n      onClick={() => handleFollowCourse()}\n      style={{ float: 'right', fontSize: '0.8em' }}\n    >\n      <Icon name=\"sliders\" /> {checked ? 'Kota Takip Bırak' : 'Kota Takip Et'}\n    </Label>\n    </>\n    \n  );\n};\n\nexport default QuotaLabel;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Card,\n  Icon,\n} from 'semantic-ui-react';\nimport { Label } from '../../../Nav/NavTheme';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addSelectedCourse,\n  removeSelectedCourse,\n  onHoverCourse,\n  offHoverCourse,\n  addAllSections,\n} from '../../../../reducers/courseReducer';\nimport { LESSON_PATH } from '../../../../utils/config';\nimport QuotaLabel from '../../../Quota/QuotaLabel';\n\nconst SubCourse = ({ course }) => {\n  const selectedCourses = useSelector((state) => state.courses.selectedCourses);\n  const dispatch = useDispatch();\n  const handleClick = () => {\n    const foundCourse = selectedCourses.find((c) => c.id === course.id);\n    if (foundCourse && foundCourse.clicked) {\n      dispatch(removeSelectedCourse(course));\n    } else {\n      dispatch(addSelectedCourse(course));\n    }\n  };\n  const handleAddAllSections = () => {\n    dispatch(addAllSections(course.areaCode, course.digitCode));\n  };\n\n  const handleMouseEnter = () => {\n    const foundCourse = selectedCourses.find((c) => c.id === course.id);\n    if(!foundCourse){\n      dispatch(onHoverCourse(course));}\n  };\n\n  const handleMouseLeave = () => {\n    const foundCourse = selectedCourses.find((c) => c.id === course.id);\n    if(foundCourse && !foundCourse.clicked){\n      dispatch(offHoverCourse(course));}\n  };\n\n  const convertDays = (days) => {\n    days = days.map((d) => {\n      if (d === 0) {\n        return 'M';\n      } else if (d === 1) {\n        return 'T';\n      } else if (d === 2) {\n        return 'W';\n      } else if (d === 3) {\n        return 'Th';\n      } else {\n        return 'F';\n      }\n    });\n    return days;\n  };\n\n  return (\n    <div\n      style={{\n        margin: '0.8em',\n        cursor: 'pointer',\n      }}\n    >\n      <Card\n        fluid\n        style={{ padding: '0.5em' }}\n        onClick={() => handleClick()}\n        onMouseEnter={() => handleMouseEnter()}\n        onMouseLeave={() => handleMouseLeave()}\n      >\n        <Card.Header style={{ display: 'inline' }}>\n          <Label color=\"blue\" bold pointer nolink>\n            {course.name}\n          </Label>{' '}\n          •{' '}\n          <Label color=\"green\" bold pointer nolink>\n            {course.parentName}\n          </Label>\n          <Link to={LESSON_PATH(course)}>\n            <Label\n              color=\"blue\"\n              bold\n              pointer\n              style={{ float: 'right', fontSize: '0.8em' }}\n            >\n              <Icon name=\"comments\" />\n              Yorumlara bak\n            </Label>\n          </Link>\n        </Card.Header>\n        <Card.Meta>\n          {course.fullName} <QuotaLabel course={course} />\n        </Card.Meta>\n\n        <Card.Description>\n          <Label color=\"blue\" bold pointer nolink>\n            <Icon name=\"calendar\" />\n            {convertDays(course.days)}\n          </Label>{' '}\n          •{' '}\n          <Label color=\"green\" bold pointer nolink>\n            <Icon name=\"clock\" />\n            {course.hours}\n          </Label>{' '}\n          •{' '}\n          <Label color=\"blue\" bold pointer nolink>\n            {course.credits} Kredi\n          </Label>\n          <Label\n            color=\"blue\"\n            bold\n            pointer\n            style={{ float: 'right', fontSize: '0.8em' }}\n            onClick={() => handleAddAllSections()}\n          >\n            <Icon name=\"add\" />\n            Bütün sectionları ekle\n          </Label>\n          <br />\n          <Label\n            color={course.place === 'Online' ? 'blue' : 'green'}\n            bold\n            pointer\n            nolink\n          >\n            {course.place} Ders\n          </Label>{' '}\n          •{' '}\n          <Label\n            color={course.place === 'Online' ? 'blue' : 'green'}\n            bold\n            pointer\n            nolink\n          >\n            {course.final} Final\n          </Label>\n        </Card.Description>\n      </Card>\n    </div>\n  );\n};\n\nexport default SubCourse;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Input, Icon, Popup, Checkbox } from 'semantic-ui-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport InfiniteScroll from 'react-infinite-scroller';\n\nimport { searchCourse } from '../../../../reducers/courseReducer';\nimport {\n  compareNames,\n} from '../../../../utils/utils';\nimport SubCourse from './SubCourse';\nimport CommentsLoading from '../../../Comments/CommentsLoading';\nimport NoSubResult from '../../../Search/NoSubResult';\nconst SearchCourses = () => {\n  const count = useSelector((state) => state.courses.count);\n  const start = useSelector((state) => state.courses.start);\n  const hasMore = useSelector((state) => state.courses.hasMore);\n  const targets = useSelector((state) => state.courses.courses);\n  const findTime = useSelector((state) => state.courses.findTime);\n  const [search, setSearch] = useState('');\n  const notFindTime = useSelector((state) => state.courses.notFindTime);\n  const dispatch = useDispatch();\n  const [currentTarget, setCurrentTarget] = useState([]);\n  const [ready, setReady] = useState(false);\n  const [noResult, setNoResult] = useState(true);\n  const first = useRef(false);\n  const fetching = useRef(false);\n  const [isOffline, setIsOffline] = useState(false);\n  const refValue = useRef('');\n  const [storedTimeout, setStoredTimeout] = useState(null);\n\n  useEffect(() => {\n    dispatch(\n      searchCourse(\n        0,\n        count,\n        first,\n        fetching,\n        search,\n        findTime.map((t) => t.id),\n        notFindTime.map((t) => t.id),\n        isOffline\n      )\n    );\n  }, [search, findTime, notFindTime, isOffline]);\n\n  useEffect(() => {\n    setCurrentTarget(\n      filterCourses(targets, search, findTime, notFindTime, isOffline)\n    );\n  }, [targets, findTime, notFindTime, isOffline]);\n\n  const loadFunc = () => {\n    if (!fetching.current) {\n      dispatch(\n        searchCourse(\n          start,\n          count,\n          first,\n          fetching,\n          search,\n          findTime.map((t) => t.id),\n          notFindTime.map((t) => t.id),\n          isOffline\n        )\n      );\n    }\n  };\n\n  useEffect(() => {\n    if (first.current && currentTarget.length === 0) {\n      setNoResult(true);\n    } else if (currentTarget.length !== 0 && first.current) {\n      setNoResult(false);\n    }\n    if (!first.current) {\n      setReady(false);\n    } else {\n      setReady(true);\n    }\n  }, [currentTarget, first]);\n\n  const handleValueChange = (e) => {\n    refValue.current = e.target.value;\n\n    if (storedTimeout) clearTimeout(storedTimeout);\n    setStoredTimeout(\n      setTimeout(() => {\n        setSearch(refValue.current);\n      }, 300)\n    );\n  };\n\n  return (\n    <>\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <Input\n          icon=\"search\"\n          placeholder={`Ders Arayın...`}\n          value={refValue.current}\n          onChange={(e) => handleValueChange(e)}\n          lang=\"tr\"\n          size=\"big\"\n          style={{ width: '90%', marginLeft: '1em' }}\n        />\n        <Popup\n          content={\n            <Checkbox\n              checked={isOffline}\n              onClick={() => setIsOffline(!isOffline)}\n              label=\"Sadece Offline Dersleri Göster\"\n            />\n          }\n          position=\"bottom right\"\n          hoverable\n          trigger={\n            <Icon\n              name=\"filter\"\n              color=\"blue\"\n              size=\"big\"\n              style={{ paddingLeft: '0.5em' }}\n              fitted\n            />\n          }\n        />\n      </div>\n      <div\n        style={{\n          overflow: 'auto',\n          maxHeight: '70vh',\n          marginTop: '1em',\n        }}\n      >\n        {!ready ? (\n          <CommentsLoading />\n        ) : noResult ? (\n          <NoSubResult />\n        ) : (\n          <InfiniteScroll\n            pageStart={0}\n            loadMore={loadFunc}\n            hasMore={hasMore}\n            loader={\n              <div className=\"loader\" key={0}>\n                <CommentsLoading skeletonLength={1} />\n              </div>\n            }\n            useWindow={false}\n          >\n            {currentTarget.map((c) => (\n              <SubCourse course={c} key={c.id} />\n            ))}\n          </InfiniteScroll>\n        )}\n      </div>\n    </>\n  );\n};\n\nconst filterCourses = (courses, search, findTime, notFindTime, isOffline) => {\n  let s = search.toUpperCase();\n  let currentCourses = courses\n    .filter((c) => {\n      if (isOffline) {\n        return c.place !== 'Online';\n      } else {\n        return true;\n      }\n    })\n    .filter(\n      (c) =>\n        c.name.toUpperCase().includes(s) ||\n        c.parentName.toUpperCase().includes(s)\n    )\n    .sort(compareNames);\n  if (findTime.length > 0) {\n    currentCourses = currentCourses.filter((course) => {\n      let q = 0;\n      course.days.forEach((d, i) => {\n        findTime.forEach((t) => {\n          if (course.days[i] === t.day && course.hours[i] === t.hour) {\n            q++;\n          }\n        });\n      });\n      return q === findTime.length;\n    });\n  }\n  if (notFindTime.length > 0) {\n    currentCourses = currentCourses.filter((course) => {\n      let found = false;\n      course.days.forEach((d, i) => {\n        notFindTime.forEach((t) => {\n          if (course.days[i] === t.day && course.hours[i] === t.hour) {\n            found = true;\n          }\n        });\n      });\n      return !found;\n    });\n  }\n\n  return currentCourses;\n};\n\nexport default SearchCourses;\n","import React  from 'react';\nimport 'rc-slider/assets/index.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeCreditsRange } from '../../../reducers/courseReducer';\nimport { Label, StyledRange } from '../../Nav/NavTheme';\n\nconst CreditsSlider = () => {\n  const creditsRange = useSelector((state) => state.courses.creditsRange);\n  const dispatch = useDispatch();\n  const onSliderChange = (value) => {\n    dispatch(changeCreditsRange(value));\n  };\n  return (\n    <div>\n      <p>\n        <Label color=\"blue\" bold>\n          Kredi Aralığı\n        </Label>\n      </p>\n      <StyledRange\n        min={2}\n        max={40}\n        allowCross={false}\n        onChange={onSliderChange}\n        value={creditsRange}\n        marks={getMarks(creditsRange)}\n        trackStyle={[\n          { backgroundColor: '#21ba45' },\n          { backgroundColor: '#21ba45' },\n        ]}\n      />\n    </div>\n  );\n};\n\nconst getMarks = (value) => {\n  let y = value.reduce((acc, elem) => {\n    acc[elem] = elem; // or what ever object you want inside\n    return acc;\n  }, {});\n  return y;\n};\n\nexport default CreditsSlider;\n","import React, { useState } from 'react';\nimport 'rc-slider/assets/index.css';\nimport {\n  Checkbox,\n  Accordion,\n  Icon,\n} from 'semantic-ui-react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  onOffConflict,\n  changeConflictRange,\n} from '../../../reducers/courseReducer';\nimport { Label, StyledSlider } from '../../Nav/NavTheme';\n\nconst ConflictOptions = () => {\n  const conflict = useSelector((state) => state.courses.conflict);\n  const [accordionOpen, setAccordionOpen] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const dispatch = useDispatch();\n\n  const toggleConflict = () => {\n    dispatch(onOffConflict());\n    setChecked(!checked);\n    setAccordionOpen(!checked);\n  };\n\n  return (\n    <Accordion style={{ display: 'inline-block' }}>\n      <Accordion.Title active={accordionOpen} index={0}>\n        <div style={{ display: 'flex' }}>\n          <Checkbox\n            defaultChecked={conflict.makeConflict}\n            onChange={() => toggleConflict()}\n          />\n          <Label\n            color=\"blue\"\n            bold\n            pointer\n            onClick={() => setAccordionOpen(!accordionOpen)}\n            style={{ marginLeft: '0.5em' }}\n          >\n            Conflicte izin ver\n          </Label>\n          <Icon\n            name=\"caret down\"\n            color=\"blue\"\n            onClick={() => setAccordionOpen(!accordionOpen)}\n            style={{ marginLeft: '0.3em' }}\n          />\n        </div>\n      </Accordion.Title>\n      <Accordion.Content active={accordionOpen} style={{ marginLeft: '1em' }}>\n        <HoursDetails />\n      </Accordion.Content>\n    </Accordion>\n  );\n};\n\nconst HoursDetails = () => {\n  const conflictRange = useSelector(\n    (state) => state.courses.conflict.conflictRange\n  );\n\n  const dispatch = useDispatch();\n  const onSliderChange = (value) => {\n    dispatch(changeConflictRange(value));\n  };\n\n  return (\n    <div>\n      <p>En fazla kaç saat conflict olabilsin?</p>\n      <StyledSlider\n        min={1}\n        max={40}\n        onChange={onSliderChange}\n        value={conflictRange}\n        marks={getMark(conflictRange)}\n        trackStyle={{ backgroundColor: '#21ba45' }}\n      />\n    </div>\n  );\n};\n\nconst getMark = (value) => {\n  let y = [value].reduce((acc, elem) => {\n    acc[elem] = elem;\n    return acc;\n  }, {});\n  return y;\n};\n\nexport default ConflictOptions;\n","import React from 'react';\nimport 'rc-slider/assets/index.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeCourseRange } from '../../../reducers/courseReducer';\nimport { Label, StyledRange } from '../../Nav/NavTheme';\n\nconst CourseSlider = () => {\n  const courseRange = useSelector((state) => state.courses.courseRange);\n  const dispatch = useDispatch();\n  const onSliderChange = (value) => {\n    dispatch(changeCourseRange(value));\n  };\n\n  return (\n    <div>\n      <p>\n        <Label color=\"blue\" bold>\n          Ders Aralığı\n        </Label>\n      </p>\n      <StyledRange\n        min={2}\n        max={20}\n        allowCross={false}\n        onChange={onSliderChange}\n        value={courseRange}\n        marks={getMarks(courseRange)}\n        trackStyle={[\n          { backgroundColor: '#21ba45' },\n          { backgroundColor: '#21ba45' },\n        ]}\n      />\n    </div>\n  );\n};\n\nconst getMarks = (value) => {\n  let y = value.reduce((acc, elem) => {\n    acc[elem] = elem;\n    return acc;\n  }, {});\n  return y;\n};\n\nexport default CourseSlider;\n","import React, { useState,  useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button } from 'semantic-ui-react';\nimport lodash  from 'lodash';\nimport { setScenarios } from '../../../reducers/courseReducer';\nimport { compareNames } from '../../../utils/utils';\nconst CreateProgram = () => {\n  const dispatch = useDispatch();\n  const courseRange = useSelector((state) => state.courses.courseRange);\n  const scenariosSlider = useSelector((state) => state.courses.scenariosSlider);\n  const creditsRange = useSelector((state) => state.courses.creditsRange);\n  const requiredCourses = useSelector((state) => state.courses.requiredCourses);\n  const conflict = useSelector((state) => state.courses.conflict);\n  const tryEmptyDay = useSelector((state) => state.courses.tryEmptyDay);\n  const selectedCourses = useSelector((state) => state.courses.selectedCourses);\n  const [value, setValue] = useState('Program Oluştur');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (loading) {\n      createWithParams(\n        requiredCourses,\n        dispatch,\n        createWithRequired,\n        scenariosSlider,\n        createWithoutRequired\n      );\n    }\n  }, [loading]);\n\n  const createProgram = async () => {\n    const canProgram = checkCanProgram();\n    if (!canProgram) {\n      setValue('Program Oluşturulamıyor');\n      return;\n    }\n    setLoading(true);\n  };\n\n  const getOnlySelectedCourses = (requiredColumns) => {\n    let onlys = [];\n    let requiredColumnsIds = requiredColumns.map((rcColumn) => {\n      let rcColumnIds = rcColumn.courses.map((rcCourse) => rcCourse.id);\n      return rcColumnIds;\n    });\n    requiredColumnsIds = lodash.flatten(requiredColumnsIds);\n    selectedCourses.forEach((sc) => {\n      if (!requiredColumnsIds.includes(sc.id)) {\n        onlys.push(sc);\n      }\n    });\n    return onlys;\n  };\n\n  const createWithRequired = (maxProgramsLength) => {\n    let possibleScenarios = [];\n    let requiredColumns = requiredCourses.filter((rc) => rc.courses.length > 0);\n    let otherSelectedCourses = getOnlySelectedCourses(requiredColumns);\n    let requiredCoursesCourses = [...requiredColumns.map((rc) => rc.courses)];\n\n    let stackedSelectedCourses = stackedCourses([\n      ...otherSelectedCourses,\n    ]).map((stack) => [, ...stack.courses]);\n\n    loopTwoTimesStack(\n      requiredCoursesCourses,\n      stackedSelectedCourses,\n      possibleScenarios,\n      maxProgramsLength\n    );\n\n    return possibleScenarios;\n  };\n\n  const createWithoutRequired = (maxProgramsLength) => {\n    let possibleScenarios = [];\n    let stackedSelectedCourses = stackedCourses(\n      selectedCourses\n    ).map((stack) => [, ...stack.courses]);\n\n    loopOverStack(stackedSelectedCourses, possibleScenarios, maxProgramsLength);\n    return possibleScenarios;\n  };\n\n  const loopTwoTimesStack = (\n    requiredStack,\n    optionalStack,\n    scenario,\n    length\n  ) => {\n    let max = requiredStack.length - 1;\n    function helper(arr, i) {\n      for (var j = 0, l = requiredStack[i].length; j < l; j++) {\n        if (scenario.length === length) break;\n\n        var a = arr.slice(0);\n        a.push(requiredStack[i][j]);\n        if (i == max) {\n          loopOverStack(optionalStack, scenario, length, a);\n        } else helper(a, i + 1);\n      }\n    }\n    helper([], 0);\n  };\n\n  const loopOverStack = (loopedStack, scenario, length, aditional) => {\n    let max = loopedStack.length - 1;\n    function helper(arr, i) {\n      for (var j = 0, l = loopedStack[i].length; j < l; j++) {\n        if (scenario.length === length) break;\n\n        var a = arr.slice(0);\n        if (loopedStack[i][j]) a.push(loopedStack[i][j]);\n        if (i == max) {\n          if (aditional) a = [...a, ...aditional];\n          if (canAddToScenarios(a)) {\n            scenario.push(a);\n          }\n        } else helper(a, i + 1);\n      }\n    }\n    helper([], 0);\n  };\n\n  const stackedCourses = (courses) => {\n    let stacked = [];\n    courses.sort(compareNames).forEach((sc) => {\n      let presentsInStacked = stacked.find(\n        (stack) => stack.shortName === `${sc.areaCode}${sc.digitCode}`\n      );\n      if (presentsInStacked) {\n        presentsInStacked.courses.push(sc);\n      } else {\n        stacked.push({\n          courses: [sc],\n          shortName: `${sc.areaCode}${sc.digitCode}`,\n        });\n      }\n    });\n    return stacked;\n  };\n\n  const canAddToScenarios = (potentialCourses) => {\n    if (\n      between(potentialCourses.length, courseRange[0], courseRange[1], true) &&\n      creditsMatch(potentialCourses) &&\n      emptyDayMatch(potentialCourses) &&\n      conflictMatch(potentialCourses)\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  const conflictMatch = (potentialCourses) => {\n    const possibleConflictLength = getPossibleConflictLength(potentialCourses);\n    if (conflict.makeConflict) {\n      return possibleConflictLength > conflict.conflictRange ? false : true;\n    }\n    return possibleConflictLength > 0 ? false : true;\n  };\n\n  const emptyDayMatch = (potentialCourses) => {\n    if (!tryEmptyDay) {\n      return true;\n    }\n    let currentDays = getCoursesDays(potentialCourses);\n    if (currentDays === 5) {\n      return false;\n    }\n    return true;\n  };\n\n  const creditsMatch = (potentialCourses) => {\n    const currentCredits = getTotalCoursesCredits(potentialCourses);\n    return currentCredits > creditsRange[1] ? false : true;\n  };\n\n  const checkCanProgram = () => {\n    const selectedCoursesCredits = getTotalCoursesCredits(selectedCourses);\n    if (\n      !(selectedCoursesCredits >= creditsRange[0]) ||\n      !(selectedCourses.length >= courseRange[0])\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  const getCoursesConflictLength = (courses) => {\n    let allCellIds = [];\n    let unionCellIds = [];\n    courses.forEach((course) => {\n      allCellIds.push(course.cellIds);\n      unionCellIds = lodash.union(unionCellIds, course.cellIds);\n    });\n    allCellIds = lodash.flatten(allCellIds);\n    return allCellIds.length - unionCellIds.length;\n  };\n\n  const getPossibleConflictLength = (possibleCourses) => {\n    const after = getCoursesConflictLength(possibleCourses);\n    return after;\n  };\n\n  const getTotalCoursesCredits = (courses) => {\n    return courses.reduce((total, c) => {\n      return total + Number(c.credits);\n    }, 0);\n  };\n\n  const getCoursesDays = (courses) => {\n    let unionDays = [];\n    courses.forEach((c) => {\n      unionDays = lodash.union(unionDays, c.days);\n    });\n\n    return unionDays.length;\n  };\n\n  function createWithParams(\n    requiredCourses,\n    dispatch,\n    createWithRequired,\n    scenariosSlider,\n    createWithoutRequired\n  ) {\n    const requiredColumnsWithCourses = requiredCourses.filter((rc) => {\n      if (rc.courses.length > 0) {\n        return true;\n      } else {\n        return false;\n      }\n    });\n    if (requiredColumnsWithCourses.length > 0) {\n      dispatch(setScenarios(createWithRequired(scenariosSlider)));\n    } else {\n      dispatch(setScenarios(createWithoutRequired(scenariosSlider)));\n    }\n    setLoading(false);\n    setValue('Program Oluşturuldu');\n  }\n\n  return (\n    <div>\n      <Button\n        color=\"blue\"\n        onClick={() => createProgram()}\n        loading={loading}\n        fluid\n      >\n        {value}\n      </Button>\n    </div>\n  );\n};\n\nfunction arraysEqual(a, b) {\n  if (a === b) return true;\n  if (a == null || b == null) return false;\n  if (a.length !== b.length) return false;\n\n  let sortedA = a.sort(compareNames);\n  let sortedB = b.sort(compareNames);\n\n  for (var i = 0; i < a.length; ++i) {\n    if (sortedA[i] !== sortedB[i]) return false;\n  }\n  return true;\n}\n\nfunction between(n, a, b, inclusive) {\n  var min = Math.min.apply(Math, [a, b]),\n    max = Math.max.apply(Math, [a, b]);\n  return inclusive ? n >= min && n <= max : n > min && n < max;\n}\n\nexport default CreateProgram;\n","import React from 'react';\nimport 'rc-slider/assets/index.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeScenariosSlider } from '../../../reducers/courseReducer';\nimport { Label, StyledSlider } from '../../Nav/NavTheme';\n\nconst ScenariosSlider = () => {\n  const scenariosSlider = useSelector((state) => state.courses.scenariosSlider);\n  const dispatch = useDispatch();\n  const onSliderChange = (value) => {\n    dispatch(changeScenariosSlider(value));\n  };\n\n  return (\n    <div>\n      <p>\n        <Label color=\"blue\" bold>\n          Maksimum Senaryo Sayısı\n        </Label>\n      </p>\n      <StyledSlider\n        min={1}\n        max={50}\n        onChange={onSliderChange}\n        value={scenariosSlider}\n        marks={getMark(scenariosSlider)}\n        trackStyle={{ backgroundColor: '#21ba45' }}\n      />\n    </div>\n  );\n};\n\nconst getMark = (value) => {\n  let y = [value].reduce((acc, elem) => {\n    acc[elem] = elem;\n    return acc;\n  }, {});\n  return y;\n};\n\nexport default ScenariosSlider;\n","import React from 'react';\nimport {\n  Grid,\n  Checkbox,\n} from 'semantic-ui-react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  toggleTryEmptyDay,\n} from '../../../reducers/courseReducer';\nimport { Label } from '../../Nav/NavTheme';\nimport CreditsSlider from './CreditsSlider';\nimport ConflictOptions from './ConflictOptions';\nimport HoursSlider from './CourseSlider';\nimport CreateProgram from './CreateProgram';\nimport ScenariosSlider from './ScenariosSlider';\nconst ProgramOptions = () => {\n  const tryEmptyDay = useSelector((state) => state.courses.tryEmptyDay);\n  const dispatch = useDispatch();\n\n  const toggleDay = () => {\n    dispatch(toggleTryEmptyDay());\n  };\n\n  return (\n    <>\n      <Grid.Row>\n        <Grid.Column>\n          <CreateProgram />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row style={{ marginTop: '1.6em' }}>\n        <Grid.Column>\n          <CreditsSlider />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row style={{ marginTop: '1.6em' }}>\n        <Grid.Column>\n          <HoursSlider />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row style={{ marginTop: '1.6em' }}>\n        <Grid.Column>\n          <ScenariosSlider />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row style={{ marginTop: '1.6em' }}>\n        <Grid.Column>\n          <Checkbox\n            defaultChecked={tryEmptyDay}\n            onChange={() => toggleDay()}\n            label={\n              <Label color=\"blue\" bold>\n                {' '}\n                Bir günü boşta bırak\n              </Label>\n            }\n          />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row style={{ marginTop: '1em' }}>\n        <Grid.Column>\n          <ConflictOptions />\n        </Grid.Column>\n      </Grid.Row>\n    </>\n  );\n};\n\nexport default ProgramOptions;\n","import React from 'react';\nimport CoursePlannerTable from './CoursePlannerTable/CoursePlannerTable';\nimport {  Grid } from 'semantic-ui-react';\nimport SelectedCourses from './SelectedCourses/SelectedCourses';\nimport RequiredCourses from './RequiredCourses/RequiredCourses';\nimport SearchCourses from './CoursePlannerTable/SearchCourses/SearchCourses';\nimport ProgramOptions from './ProgramOptions/ProgramOptions';\nimport { isMobile } from 'react-device-detect';\n\nconst CoursePlanner = () => {\n  return isMobile ? (\n    <div style={{ height: '150vh' }}>\n      <Grid style={{ margin: '0.5em' }}>\n      <Grid.Row>\n          <Grid.Column>\n            <CoursePlannerTable />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column>\n            <SelectedCourses />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column>\n            <SearchCourses stretched />\n          </Grid.Column>\n        </Grid.Row>\n        \n        \n        <Grid.Row>\n          <Grid.Column>\n            <ProgramOptions />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row columns={1}>\n          <RequiredCourses />\n        </Grid.Row>\n      </Grid>\n    </div>\n  ) : (\n    <div style={{ height: '150vh' }}>\n      <Grid columns={3} style={{ margin: '0.5em' }}>\n        <Grid.Row>\n          <Grid.Column stretched width={6}>\n            <CoursePlannerTable />\n            <ProgramOptions />\n          </Grid.Column>\n          <Grid.Column width={4}>\n            <SelectedCourses />\n          </Grid.Column>\n          <Grid.Column>\n            <SearchCourses stretched />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row columns={5}>\n          <RequiredCourses />\n        </Grid.Row>\n      </Grid>\n    </div>\n  );\n};\n\nexport default CoursePlanner;\n"],"sourceRoot":""}