{"version":3,"sources":["components/CoursePlanner/CoursePlannerTable/CoursePlannerTable.js","components/Quota/QuotaLabel.js","components/CoursePlanner/SelectedCourses/SelectedCourses.js","components/CoursePlanner/RequiredCourses/RequiredColumn.js","components/CoursePlanner/RequiredCourses/RequiredCourses.js","components/CoursePlanner/CoursePlannerTable/SearchCourses/SubCourse.js","components/CoursePlanner/CoursePlannerTable/SearchCourses/SearchCourses.js","components/CoursePlanner/ProgramOptions/CreditsSlider.js","components/CoursePlanner/ProgramOptions/ConflictOptions.js","components/CoursePlanner/ProgramOptions/CourseSlider.js","components/CoursePlanner/ProgramOptions/CreateProgram.js","components/CoursePlanner/ProgramOptions/ScenariosSlider.js","components/CoursePlanner/ProgramOptions/ProgramOptions.js","components/CoursePlanner/CoursePlanner.js"],"names":["CellDropdown","c","f","visibleCourses","courses","filter","cCourse","visible","Table","Cell","selectable","style","backgroundColor","color","textAlign","length","upper","Dropdown","icon","fluid","Menu","Item","onClick","findCellTime","notFindCellTime","resetCellTime","FirstThreeCells","dispatch","useDispatch","slice","map","cellCourse","key","name","marginTop","bold","Icon","toggleCellCoursesVisiblity","AllCells","CoursePlannerTable","selectedCourses","useSelector","state","scenarios","useState","scenariosActivePage","setScenariosActivePage","cells","extraHours","rows","setRows","setVisible","paginationVisible","setPaginationVisible","useEffect","setCurrentScenario","dropdownFuncs","findTimeCell","notFindTimeCell","resetTimeCell","toggleVisibilty","i","push","Row","opacity","position","left","time","sort","a","b","day","id","CommentsLoading","celled","size","unstackable","isMobile","Header","HeaderCell","Popup","content","trigger","Body","r","Footer","fullWidth","column","colSpan","Pagination","activePage","onPageChange","event","data","evet","handleScenarioChange","firstItem","lastItem","pointing","secondary","totalPages","QuotaLabel","course","text","user","checked","setChecked","followingCourses","includes","parentName","pointer","unFollowCourse","followCourse","float","fontSize","MultipleCourses","stack","stackVisible","setStackVisible","eye","stackEye","setStackEye","toggleStackVisibility","compareNames","last","shortName","stackCourse","sectionCode","cursor","removeSelectedCoursesWithStack","toggleSelectedCoursesEye","SingleCourseSelected","removeSelectedCourse","changeCourseVisibility","to","LESSON_PATH","target","href","areaCode","digitCode","SelectedCourses","credits","setCredits","courseLength","setCourseLength","stackedCourses","setStackedCourses","sc","reduce","total","Number","getStackedCourses","mappedStack","filteredCourses","stacked","forEach","presentsInStacked","find","maxHeight","overflow","marginBottom","columns","marginRight","visibility","MultiRowCourse","rc","removeRequiredWithStack","SingleRowCourse","removeFromRequiredColumn","handleRemoveFromRequiredColumn","RequiredColumn","requiredCourses","narrowedCourses","setNarrowedCourses","narrowRequired","stackCourses","presentsInColumns","columnContainsSections","findColumnContainsSections","rcCourse","Grid","Column","removeRequiredColumn","handleRemoveColumn","className","button","basic","scrolling","addToRequiredColumnMulti","addToRequiredColumn","handleAddToRequiredColumn","RequiredCourses","Button","addNewRequiredColumn","SubCourse","margin","Card","padding","foundCourse","clicked","addSelectedCourse","handleClick","onMouseEnter","onHoverCourse","onMouseLeave","offHoverCourse","handleMouseLeave","display","nolink","Meta","fullName","Description","days","d","hours","addAllSections","place","final","req","filterCourses","search","findTime","notFindTime","isOffline","s","toUpperCase","currentCourses","q","t","hour","found","SearchCourses","count","start","hasMore","targets","setSearch","currentTarget","setCurrentTarget","ready","setReady","noResult","setNoResult","first","useRef","fetching","setIsOffline","refValue","storedTimeout","setStoredTimeout","searchCourse","current","alignItems","Input","placeholder","value","onChange","e","clearTimeout","setTimeout","handleValueChange","lang","width","marginLeft","Checkbox","label","hoverable","paddingLeft","fitted","pageStart","loadMore","loader","skeletonLength","useWindow","getMarks","acc","elem","CreditsSlider","creditsRange","min","max","allowCross","changeCreditsRange","marks","trackStyle","HoursDetails","conflictRange","conflict","changeConflictRange","getMark","ConflictOptions","accordionOpen","setAccordionOpen","Accordion","Title","active","index","defaultChecked","makeConflict","onOffConflict","Content","CourseSlider","courseRange","changeCourseRange","CreateProgram","scenariosSlider","tryEmptyDay","setValue","loading","setLoading","createWithRequired","createWithoutRequired","setScenarios","createWithParams","createProgram","canProgram","checkCanProgram","can","error","maxProgramsLength","possibleScenarios","requiredColumns","otherSelectedCourses","onlys","requiredColumnCourses","rcColumn","lodash","flatten","presents","getOnlySelectedCourses","requiredCoursesCourses","stackedSelectedCourses","loopTwoTimesStack","loopOverStack","requiredStack","optionalStack","scenario","helper","arr","j","l","loopedStack","aditional","canAddToScenarios","potentialCourses","n","inclusive","Math","apply","between","creditsMatch","emptyDayMatch","conflictMatch","possibleConflictLength","getPossibleConflictLength","getCoursesDays","getTotalCoursesCredits","singledCourses","uniqBy","possibleCourses","allCellIds","unionCellIds","cellIds","union","getCoursesConflictLength","unionDays","ScenariosSlider","changeScenariosSlider","ProgramOptions","toggleTryEmptyDay","CoursePlanner","height","stretched"],"mappings":"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","file":"static/js/17.cd266a24.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Table,\n  Dropdown,\n  Icon,\n  Pagination,\n  Popup,\n  Label as SLabel,\n} from 'semantic-ui-react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  findTimeCell,\n  resetTimeCell,\n  notFindTimeCell,\n  setCurrentScenario,\n  toggleCellCoursesVisiblity,\n} from '../../../reducers/courseReducer';\nimport { Label, StyledLabel } from '../../Nav/NavTheme';\nimport CommentsLoading from '../../Comments/CommentsLoading';\nimport { isMobile } from 'react-device-detect';\nimport { compareNames } from '../../../utils/utils';\n\nconst CoursePlannerTable = () => {\n  const selectedCourses = useSelector((state) => state.courses.selectedCourses);\n  const scenarios = useSelector((state) => state.courses.scenarios);\n  const [scenariosActivePage, setScenariosActivePage] = useState(0);\n  const cells = useSelector((state) => state.courses.cells);\n  const extraHours = useSelector((state) => state.courses.extraHours);\n  const dispatch = useDispatch();\n  const [rows, setRows] = useState([]);\n  const [visible, setVisible] = useState(false);\n  const [paginationVisible, setPaginationVisible] = useState(false);\n  const TOTAL_HOURS = 14;\n\n  useEffect(() => {\n    if (scenarios.length > 0 && scenariosActivePage > 0) {\n      dispatch(setCurrentScenario(scenarios[scenariosActivePage - 1]));\n    }\n  }, [scenariosActivePage, scenarios]);\n\n  useEffect(() => {\n    if (scenarios.length > 0) {\n      setPaginationVisible(true);\n      setScenariosActivePage(1);\n    } else {\n      setScenariosActivePage(0);\n      setPaginationVisible(false);\n      dispatch(setCurrentScenario(selectedCourses));\n    }\n  }, [scenarios]);\n\n  const handleScenarioChange = (evet, data) => {\n    setScenariosActivePage(data.activePage);\n  };\n\n  const findCellTime = (c) => {\n    dispatch(findTimeCell(c));\n  };\n\n  const notFindCellTime = (c) => {\n    dispatch(notFindTimeCell(c));\n  };\n\n  const resetCellTime = (c) => {\n    dispatch(resetTimeCell(c));\n  };\n\n  const dropdownFuncs = { findCellTime, notFindCellTime, resetCellTime };\n\n  const toggleVisibilty = () => {\n    setVisible(!visible);\n  };\n\n  useEffect(() => {\n    const rows = [];\n    for (let i = 0; i < TOTAL_HOURS; i++) {\n      rows.push(\n        <Table.Row\n          style={{\n            opacity: visible || i <= 8 ? null : '0,0',\n            position: visible || i <= 8 ? null : 'absolute',\n            left: visible || i <= 8 ? null : '-999999px',\n          }}\n          key={i}\n        >\n          <Table.Cell style={{ backgroundColor: '#F9FAFB' }}>\n            <Label color=\"green\" bold>\n              {i === 0 ? '09' : i + 9}:00\n            </Label>\n          </Table.Cell>\n          {cells\n            .filter((c) => c.time === i)\n            .sort((a, b) => a.day - b.day)\n\n            .map((c) => {\n              return <CellDropdown key={c.id} c={c} f={dropdownFuncs} />;\n            })}\n        </Table.Row>\n      );\n    }\n    setRows(rows);\n  }, [cells, visible]);\n\n  if (cells.length === 0 || rows.length === 0) {\n    return <CommentsLoading />;\n  }\n  return (\n    <Table celled size=\"small\" unstackable={isMobile}>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell textAlign=\"center\">\n            <Popup\n              content=\"Herhangi bir hücreye tıkla\"\n              trigger={\n                <Icon name=\"question circle outline\" color=\"grey\" size=\"big\" />\n              }\n              position=\"right center\"\n            />\n          </Table.HeaderCell>\n\n          <Table.HeaderCell>\n            <Label color=\"blue\" bold>\n              Pazartesi\n            </Label>\n          </Table.HeaderCell>\n          <Table.HeaderCell>\n            <Label color=\"blue\" bold>\n              Salı\n            </Label>\n          </Table.HeaderCell>\n          <Table.HeaderCell>\n            <Label color=\"blue\" bold>\n              Çarşamba\n            </Label>\n          </Table.HeaderCell>\n          <Table.HeaderCell>\n            <Label color=\"blue\" bold>\n              Perşembe\n            </Label>\n          </Table.HeaderCell>\n          <Table.HeaderCell>\n            <Label color=\"blue\" bold>\n              Cuma\n            </Label>\n          </Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n\n      <Table.Body>\n        {rows.map((r) => {\n          return r;\n        })}\n      </Table.Body>\n      <Table.Footer fullWidth>\n        <Table.Row\n          column={1}\n          textAlign=\"center\"\n          style={{\n            opacity: paginationVisible ? null : '0,0',\n            position: paginationVisible ? null : 'absolute',\n            left: paginationVisible ? null : '-999999px',\n          }}\n        >\n          <Table.Cell colSpan=\"6\">\n            <Pagination\n              activePage={scenariosActivePage}\n              onPageChange={(event, data) => handleScenarioChange(event, data)}\n              firstItem={null}\n              lastItem={null}\n              pointing\n              secondary\n              totalPages={scenarios.length}\n            />\n          </Table.Cell>\n        </Table.Row>\n        <Table.Row textAlign=\"center\" column={1}>\n          <Table.Cell selectable colSpan=\"6\" onClick={() => toggleVisibilty()}>\n            <Icon\n              color={extraHours ? 'green' : 'blue'}\n              name={visible ? 'sort up' : 'dropdown'}\n              size=\"large\"\n              onClick={() => toggleVisibilty()}\n            />\n          </Table.Cell>\n        </Table.Row>\n      </Table.Footer>\n    </Table>\n  );\n};\n\nconst CellDropdown = ({ c, f }) => {\n  const visibleCourses = c.courses.filter((cCourse) => cCourse.visible == true);\n  return (\n    <Table.Cell\n      selectable\n      style={{\n        backgroundColor: c.color ? c.color : null,\n      }}\n      textAlign=\"center\"\n    >\n      {visibleCourses.length < 4 ? (\n        <AllCells visibleCourses={visibleCourses} c={c} />\n      ) : c.visible ? (\n        <AllCells visibleCourses={visibleCourses} c={c} upper />\n      ) : (\n        <FirstThreeCells visibleCourses={visibleCourses} c={c} />\n      )}\n\n      <Dropdown icon=\"\" fluid>\n        <Dropdown.Menu>\n          <Dropdown.Item onClick={() => f.findCellTime(c)}>\n            Bu saatte ders ara\n          </Dropdown.Item>\n          <Dropdown.Item onClick={() => f.notFindCellTime(c)}>\n            Bu saatte ders arama\n          </Dropdown.Item>\n          <Dropdown.Item onClick={() => f.resetCellTime(c)}>\n            Sıfırla\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    </Table.Cell>\n  );\n};\n\nconst FirstThreeCells = ({ visibleCourses, c }) => {\n  const dispatch = useDispatch();\n  const makeCellCoursesVisible = () => {\n    dispatch(toggleCellCoursesVisiblity(c, true));\n  };\n  return (\n    <>\n      {c.courses\n        .filter((cCourse) => cCourse.visible)\n        .slice(0, 3)\n        .map((cellCourse) => {\n          return (\n            <div key={cellCourse.name}>\n              <StyledLabel\n                style={{ marginTop: '0.5em' }}\n                color={cellCourse.color}\n              >\n                <Label color=\"white\" bold>\n                  {cellCourse.name}\n                </Label>\n              </StyledLabel>\n              <br />\n            </div>\n          );\n        })}\n      <Icon name=\"caret down\" onClick={() => makeCellCoursesVisible()} />\n    </>\n  );\n};\n\nconst AllCells = ({ visibleCourses, c, upper }) => {\n  const dispatch = useDispatch();\n  const makeCellCoursesHidden = () => {\n    dispatch(toggleCellCoursesVisiblity(c, false));\n  };\n\n  return (\n    <>\n      {visibleCourses.length !== 0 &&\n        c.courses\n          .filter((cCourse) => cCourse.visible)\n          .map((cellCourse) => {\n            return (\n              <div key={cellCourse.name}>\n                <StyledLabel\n                  color={cellCourse.color}\n                  style={{ marginTop: '0.5em' }}\n                >\n                  <Label color=\"white\" bold>\n                    {cellCourse.name}\n                  </Label>\n                </StyledLabel>\n                <br />\n              </div>\n            );\n          })}\n      {upper ? (\n        <Icon name=\"caret up\" onClick={() => makeCellCoursesHidden()} />\n      ) : null}\n    </>\n  );\n};\n\nexport default CoursePlannerTable;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { followCourse, unFollowCourse } from '../../reducers/userReducer';\nimport { Icon } from 'semantic-ui-react';\nimport { Label } from '../Nav/NavTheme';\n\nconst QuotaLabel = ({ course, text }) => {\n  const user = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n  const [checked, setChecked] = useState(false);\n\n  useEffect(() => {\n    setChecked(user.followingCourses.includes(course.id));\n  }, [user]);\n\n  const handleFollowCourse = () => {\n    if (checked) {\n      dispatch(unFollowCourse(user, course.id));\n    } else {\n      dispatch(followCourse(user, course.id));\n    }\n  };\n  return course.parentName === 'STAFF STAFF' ? null : (\n    <>\n      <Label\n        color={!text ? (checked ? 'blue' : 'green') : 'blue'}\n        bold\n        pointer\n        onClick={() => handleFollowCourse()}\n        style={{ float: 'right', fontSize: '0.8em' }}\n      >\n        <Icon name=\"sliders\" />\n        {text && (checked ? ' Kota Takip Bırak' : ' Kota Takip Et')}\n      </Label>\n    </>\n  );\n};\n\nexport default QuotaLabel;\n","import React, { useState, useEffect } from 'react';\nimport { Table, Icon } from 'semantic-ui-react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Label } from '../../Nav/NavTheme';\nimport {\n  removeSelectedCourse,\n  changeCourseVisibility,\n  removeSelectedCoursesWithStack,\n  toggleSelectedCoursesEye,\n} from '../../../reducers/courseReducer';\nimport { compareNames } from '../../../utils/utils';\nimport { LESSON_PATH } from '../../../utils/config';\nimport { Link } from 'react-router-dom';\nimport QuotaLabel from '../../Quota/QuotaLabel';\n\nconst SelectedCourses = () => {\n  const selectedCourses = useSelector((state) => state.courses.selectedCourses);\n  const [credits, setCredits] = useState(0);\n  const [courseLength, setCourseLength] = useState(0);\n  const [stackedCourses, setStackedCourses] = useState([]);\n  useEffect(() => {\n    setCredits(\n      selectedCourses\n        .filter((sc) => sc.visible === true)\n        .reduce((total, c) => {\n          return total + Number(c.credits);\n        }, 0)\n    );\n    setCourseLength(selectedCourses.filter((sc) => sc.visible === true).length);\n    setStackedCourses(getStackedCourses());\n  }, [selectedCourses]);\n\n  const getStackedCourses = () => {\n    let filteredStack = stackedCourses.filter((stack) =>\n      selectedCourses\n        .map((sc) => `${sc.areaCode}${sc.digitCode}`)\n        .includes(stack.shortName)\n    );\n    let mappedStack = filteredStack.map((stack) => {\n      let filteredCourses = stack.courses.filter((stackCourse) =>\n        selectedCourses.map((sc) => sc.id).includes(stackCourse)\n      );\n      return { ...stack, courses: filteredCourses };\n    });\n    let stacked = [...mappedStack];\n    selectedCourses.forEach((sc) => {\n      let presentsInStacked = stacked.find(\n        (stack) => stack.shortName === `${sc.areaCode}${sc.digitCode}`\n      );\n      if (presentsInStacked) {\n        presentsInStacked.courses.push(sc);\n      } else {\n        stacked.push({\n          courses: [sc],\n          shortName: `${sc.areaCode}${sc.digitCode}`,\n          visible: false,\n          eye: true,\n        });\n      }\n    });\n    return stacked;\n  };\n\n  return (\n    <>\n      <div style={{ maxHeight: '70vh', overflow: 'auto', marginBottom: '1em' }}>\n        <Table columns={1}>\n          <Table.Header>\n            <Table.Row>\n              <Table.HeaderCell>\n                <Label color=\"blue\" bold>\n                  Seçili Dersler\n                </Label>\n\n                <Label color=\"green\" bold style={{ float: 'right' }}>\n                  {credits} Kredi\n                </Label>\n                <Label\n                  color=\"green\"\n                  bold\n                  style={{ float: 'right', marginRight: '1em' }}\n                >\n                  {courseLength} Ders\n                </Label>\n              </Table.HeaderCell>\n            </Table.Row>\n          </Table.Header>\n          <Table.Body>\n            {stackedCourses.length === 0 ? (\n              <Table.Row>\n                <Table.Cell>\n                  <span style={{ visibility: 'hidden' }}>a</span>\n                </Table.Cell>\n              </Table.Row>\n            ) : (\n              stackedCourses.map((stack, i) => {\n                return stack.courses.length === 1 ? (\n                  <SingleCourseSelected\n                    c={stack.courses[0]}\n                    key={stack.courses[0].id}\n                  />\n                ) : (\n                  <MultipleCourses stack={stack} id={i} key={i} />\n                );\n              })\n            )}\n          </Table.Body>\n        </Table>\n      </div>\n    </>\n  );\n};\n\nconst MultipleCourses = ({ stack }) => {\n  const dispatch = useDispatch();\n  const [stackVisible, setStackVisible] = useState(stack.visible);\n  const [stackEye, setStackEye] = useState(stack.eye);\n\n  const toggleStackVisibility = () => {\n    setStackVisible(!stackVisible);\n  };\n\n  const handleRemove = () => {\n    dispatch(removeSelectedCoursesWithStack(stack));\n  };\n\n  const toggleStackEye = () => {\n    dispatch(toggleSelectedCoursesEye(stack, !stackEye));\n    setStackEye(!stackEye);\n  };\n\n  if (stackVisible) {\n    return stack.courses.sort(compareNames).map((c, i) => {\n      return (\n        <SingleCourseSelected\n          c={c}\n          key={c.id}\n          last={i === stack.courses.length - 1 ? true : false}\n          toggleStackVisibility={toggleStackVisibility}\n        />\n      );\n    });\n  }\n  return (\n    <Table.Row>\n      <Table.Cell>\n        <Label color=\"blue\" bold>\n          {stack.shortName}{' '}\n        </Label>\n\n        {stack.courses.sort(compareNames).map((stackCourse) => {\n          return (\n            <Label color=\"green\" bold key={stackCourse.id}>\n              {stackCourse.sectionCode}{' '}\n            </Label>\n          );\n        })}\n        <Icon\n          name=\"delete\"\n          color=\"green\"\n          style={{ float: 'right', cursor: 'pointer' }}\n          onClick={() => {\n            handleRemove();\n          }}\n        />\n        <Icon\n          name={'caret down'}\n          color=\"green\"\n          style={{ float: 'right', cursor: 'pointer' }}\n          onClick={() => toggleStackVisibility()}\n        />\n        <Icon\n          name={stackEye ? 'eye' : 'eye slash'}\n          color={stackEye ? 'green' : 'red'}\n          style={{ float: 'right', cursor: 'pointer' }}\n          onClick={() => toggleStackEye()}\n        />\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nexport const SingleCourseSelected = ({ c, last, toggleStackVisibility }) => {\n  const dispatch = useDispatch();\n  const handleClick = (course) => {\n    dispatch(removeSelectedCourse(course));\n  };\n\n  const toggleCourseVisiblity = (course) => {\n    dispatch(changeCourseVisibility(course));\n  };\n  return (\n    <Table.Row>\n      <Table.Cell>\n        <Label color=\"blue\" bold>\n          {c.name}{' '}\n        </Label>\n        <Icon\n          name=\"delete\"\n          color=\"green\"\n          style={{ float: 'right', cursor: 'pointer' }}\n          onClick={() => {\n            handleClick(c);\n          }}\n        />\n        {last && (\n          <Icon\n            name={'caret up'}\n            color=\"green\"\n            style={{ float: 'right', cursor: 'pointer' }}\n            onClick={() => toggleStackVisibility()}\n          />\n        )}\n        <Icon\n          name={c.visible ? 'eye' : 'eye slash'}\n          color={c.visible ? 'green' : 'red'}\n          style={{ float: 'right', cursor: 'pointer' }}\n          onClick={() => toggleCourseVisiblity(c)}\n        />\n        {c.parentName !== 'STAFF STAFF' && (\n          <Link to={LESSON_PATH(c)}>\n            <Icon\n              name={'comment'}\n              color={'green'}\n              style={{ float: 'right', cursor: 'pointer' }}\n            />\n          </Link>\n        )}\n        {c.parentName !== 'STAFF STAFF' && (\n          <a\n            target=\"_blank\"\n            href={`http://registration.boun.edu.tr/scripts/schedule/coursedescription.asp?course=${c.areaCode}${c.digitCode}&section=${c.sectionCode}&term=2019%2F2020-1`}\n          >\n            <Label\n              color=\"green\"\n              bold\n              pointer\n              style={{ float: 'right', fontSize: '0.8em' }}\n            >\n              <Icon name=\"file alternate\" />\n            </Label>\n          </a>\n        )}\n        {c.parentName !== 'STAFF STAFF' && <QuotaLabel course={c} />}\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nexport default SelectedCourses;\n","import React, { useState, useEffect } from 'react';\nimport { Table, Grid, Icon, Dropdown, Popup } from 'semantic-ui-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  removeRequiredColumn,\n  addToRequiredColumn,\n  removeFromRequiredColumn,\n  removeRequiredWithStack,\n  addToRequiredColumnMulti,\n} from '../../../reducers/courseReducer';\nimport { Label } from '../../Nav/NavTheme';\nimport { compareNames } from '../../../utils/utils';\n\nconst RequiredColumn = ({ rc, i }) => {\n  const dispatch = useDispatch();\n  const selectedCourses = useSelector((state) => state.courses.selectedCourses);\n  const requiredCourses = useSelector((state) => state.courses.requiredCourses);\n  const [narrowedCourses, setNarrowedCourses] = useState([]);\n  const [stackedCourses, setStackedCourses] = useState([]);\n  useEffect(() => {\n    setNarrowedCourses(narrowRequired());\n  }, [selectedCourses, requiredCourses]);\n\n  useEffect(() => {\n    setStackedCourses(stackCourses(rc.courses));\n  }, [rc]);\n\n  const handleRemoveColumn = (rc) => {\n    dispatch(removeRequiredColumn(rc));\n  };\n\n  const stackCourses = (courses) => {\n    let stacked = [];\n    courses.forEach((sc) => {\n      let presentsInStacked = stacked.find(\n        (stack) => stack.shortName === `${sc.areaCode}${sc.digitCode}`\n      );\n      if (presentsInStacked) {\n        presentsInStacked.courses.push(sc);\n      } else {\n        stacked.push({\n          courses: [sc],\n          shortName: `${sc.areaCode}${sc.digitCode}`,\n          visible: false,\n        });\n      }\n    });\n    return stacked;\n  };\n\n  const handleAddToRequiredColumn = (rc, course) => {\n    if (course.stack) {\n      dispatch(addToRequiredColumnMulti(rc, course));\n    } else {\n      dispatch(addToRequiredColumn(rc, course));\n    }\n  };\n  const handleRemoveFromRequiredColumn = (rc, course) => {\n    dispatch(removeFromRequiredColumn(rc, course));\n  };\n\n  const narrowRequired = () => {\n    let narrowedCourses = [];\n\n    for (let i = 0; i < selectedCourses.length; i++) {\n      if (presentsInColumns(selectedCourses[i])) continue;\n      const columnContainsSections = findColumnContainsSections(\n        selectedCourses[i]\n      );\n      if (columnContainsSections && columnContainsSections.id !== rc.id)\n        continue;\n\n      narrowedCourses.push(selectedCourses[i]);\n    }\n    stackCourses(narrowedCourses).forEach((stack) => {\n      if (stack.courses.length > 1) {\n        narrowedCourses.push({\n          name: `${stack.shortName} HEPSİ`,\n          courses: stack.courses,\n          stack: true,\n        });\n      }\n    });\n\n    return narrowedCourses;\n  };\n\n  const presentsInColumns = (course) => {\n    for (let i = 0; i < requiredCourses.length; i++) {\n      let foundCourse = requiredCourses[i].courses.find(\n        (rcCourse) => rcCourse.id === course.id\n      );\n      if (foundCourse) return true;\n    }\n    return false;\n  };\n\n  function findColumnContainsSections(course) {\n    for (let i = 0; i < requiredCourses.length; i++) {\n      let foundSections = requiredCourses[i].courses.find(\n        (rcCourse) =>\n          rcCourse.digitCode === course.digitCode &&\n          rcCourse.areaCode === course.areaCode\n      );\n      if (foundSections) return requiredCourses[i];\n    }\n  }\n\n  return (\n    <Grid.Column style={{ marginTop: '1em' }}>\n      <Table>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>\n              <Label color=\"blue\" bold style={{ fontSize: '12px' }}>\n                Bu Derslerden Biri Kesin Eklensin\n              </Label>\n              {i > 0 ? (\n                <Icon\n                  color=\"green\"\n                  name=\"cancel\"\n                  style={{ float: 'right' }}\n                  onClick={() => handleRemoveColumn(rc)}\n                />\n              ) : (\n                <Popup\n                  content=\"Oluşturulan her bir programda aşağıdaki derslerden bir tanesi programda kesinlikle yer alacak.\"\n                  trigger={\n                    <Icon\n                      name=\"question circle outline\"\n                      color=\"grey\"\n                      style={{ float: 'right' }}\n                      size=\"large\"\n                    />\n                  }\n                  position=\"top center\"\n                />\n              )}\n            </Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          <Table.Row>\n            <Table.Cell>\n              <Dropdown\n                text=\"Seçili Derslerden EKLE\"\n                className=\"icon\"\n                button\n                basic\n                fluid\n                scrolling\n                pointing={\n                  (i + 1) % 5 === 0 && narrowedCourses.length === 0\n                    ? 'right'\n                    : 'up'\n                }\n              >\n                <Dropdown.Menu>\n                  {narrowedCourses.length === 0 ? (\n                    <Dropdown.Item>\n                      Buraya eklenecek başka uygun bir ders yok.\n                    </Dropdown.Item>\n                  ) : (\n                    narrowedCourses.sort(compareNames).map((sc) => {\n                      return (\n                        <Dropdown.Item\n                          onClick={() => handleAddToRequiredColumn(rc, sc)}\n                          key={sc.name}\n                        >\n                          {sc.name}\n                        </Dropdown.Item>\n                      );\n                    })\n                  )}\n                </Dropdown.Menu>\n              </Dropdown>\n            </Table.Cell>\n          </Table.Row>\n          {stackedCourses.map((stack) => {\n            return stack.courses.length === 1 ? (\n              <SingleRowCourse\n                rc={rc}\n                course={stack.courses[0]}\n                key={stack.id}\n              />\n            ) : (\n              <MultiRowCourse rc={rc} stack={stack} key={stack.id} />\n            );\n          })}\n        </Table.Body>\n      </Table>\n    </Grid.Column>\n  );\n};\n\nconst MultiRowCourse = ({ rc, stack }) => {\n  const dispatch = useDispatch();\n  const [stackVisible, setStackVisible] = useState(stack.visible);\n\n  const toggleStackVisibility = () => {\n    setStackVisible(!stackVisible);\n  };\n\n  const handleRemove = () => {\n    dispatch(removeRequiredWithStack(stack));\n  };\n\n  if (stackVisible) {\n    return stack.courses.sort(compareNames).map((c, i) => {\n      return (\n        <SingleRowCourse\n          rc={rc}\n          key={c.id}\n          course={c}\n          last={i === stack.courses.length - 1 ? true : false}\n          toggleStackVisibility={toggleStackVisibility}\n        />\n      );\n    });\n  }\n  return (\n    <Table.Row>\n      <Table.Cell>\n        <Label color=\"blue\" bold>\n          {stack.shortName}{' '}\n        </Label>\n\n        {stack.courses.sort(compareNames).map((stackCourse) => {\n          return (\n            <Label color=\"green\" bold>\n              {stackCourse.sectionCode}{' '}\n            </Label>\n          );\n        })}\n        <Icon\n          name=\"delete\"\n          color=\"green\"\n          style={{ float: 'right', cursor: 'pointer' }}\n          onClick={() => {\n            handleRemove();\n          }}\n        />\n        <Icon\n          name={'caret down'}\n          color=\"green\"\n          style={{ float: 'right', cursor: 'pointer' }}\n          onClick={() => toggleStackVisibility()}\n        />\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nconst SingleRowCourse = ({ rc, course, last, toggleStackVisibility }) => {\n  const dispatch = useDispatch();\n  const handleRemoveFromRequiredColumn = (rc, course) => {\n    dispatch(removeFromRequiredColumn(rc, course));\n  };\n  return (\n    <Table.Row>\n      <Table.Cell>\n        <Label color=\"blue\" bold>\n          {course.name}\n        </Label>\n        <Icon\n          name=\"cancel\"\n          color=\"green\"\n          style={{ float: 'right' }}\n          onClick={() => handleRemoveFromRequiredColumn(rc, course)}\n        />{' '}\n        {last ? (\n          <Icon\n            name={'caret up'}\n            color=\"green\"\n            style={{ float: 'right', cursor: 'pointer' }}\n            onClick={() => toggleStackVisibility()}\n          />\n        ) : null}\n      </Table.Cell>\n    </Table.Row>\n  );\n};\n\nexport default RequiredColumn;\n","import React from 'react';\nimport {  Grid, Button, Icon } from 'semantic-ui-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addNewRequiredColumn,\n} from '../../../reducers/courseReducer';\nimport RequiredColumn from './RequiredColumn';\nconst RequiredCourses = () => {\n  const dispatch = useDispatch();\n  const requiredCourses = useSelector((state) => state.courses.requiredCourses);\n\n  const handleAddColumn = () => {\n    dispatch(addNewRequiredColumn());\n  };\n\n  return (\n    <>\n      {requiredCourses\n        .sort((a, b) => Number(a.id) - Number(b.id))\n        .map((rc, i) => {\n          return <RequiredColumn rc={rc} i={i} key={rc.id} />;\n        })}\n\n      <Grid.Column\n        style={{\n          visibility: requiredCourses.length > 9 ? 'hidden' : 'visible',\n          marginTop: '1em',\n        }}\n      >\n        <Button icon onClick={() => handleAddColumn()} color=\"blue\">\n          <Icon name=\"add\" />\n        </Button>\n      </Grid.Column>\n    </>\n  );\n};\n\nexport default RequiredCourses;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Icon } from 'semantic-ui-react';\nimport { Label } from '../../../Nav/NavTheme';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  addSelectedCourse,\n  removeSelectedCourse,\n  onHoverCourse,\n  offHoverCourse,\n  addAllSections,\n} from '../../../../reducers/courseReducer';\nimport { LESSON_PATH } from '../../../../utils/config';\nimport QuotaLabel from '../../../Quota/QuotaLabel';\n\nconst SubCourse = ({ course }) => {\n  const selectedCourses = useSelector((state) => state.courses.selectedCourses);\n  const dispatch = useDispatch();\n  const handleClick = () => {\n    const foundCourse = selectedCourses.find((c) => c.id === course.id);\n    if (foundCourse && foundCourse.clicked) {\n      dispatch(removeSelectedCourse(course));\n    } else {\n      dispatch(addSelectedCourse(course));\n    }\n  };\n  const handleAddAllSections = () => {\n    dispatch(addAllSections(course.areaCode, course.digitCode));\n  };\n\n  const handleMouseEnter = () => {\n    const foundCourse = selectedCourses.find((c) => c.id === course.id);\n    if (!foundCourse) {\n      dispatch(onHoverCourse(course));\n    }\n  };\n\n  const handleMouseLeave = () => {\n    const foundCourse = selectedCourses.find((c) => c.id === course.id);\n    if (foundCourse && !foundCourse.clicked) {\n      dispatch(offHoverCourse(course));\n    }\n  };\n\n  const convertDays = (days) => {\n    days = days.map((d) => {\n      if (d === 0) {\n        return 'M';\n      } else if (d === 1) {\n        return 'T';\n      } else if (d === 2) {\n        return 'W';\n      } else if (d === 3) {\n        return 'Th';\n      } else {\n        return 'F';\n      }\n    });\n    return days;\n  };\n\n  return (\n    <div\n      style={{\n        margin: '0.8em',\n        cursor: 'pointer',\n      }}\n    >\n      <Card\n        fluid\n        style={{ padding: '0.5em' }}\n        onClick={() => handleClick()}\n        onMouseEnter={() => handleMouseEnter()}\n        onMouseLeave={() => handleMouseLeave()}\n      >\n        <Card.Header style={{ display: 'inline' }}>\n          <Label color=\"blue\" bold pointer nolink>\n            {course.name}\n          </Label>{' '}\n          •{' '}\n          <Label color=\"green\" bold pointer nolink>\n            {course.parentName}\n          </Label>\n          {course.parentName !== 'STAFF STAFF' && (\n            <Link to={LESSON_PATH(course)}>\n              <Label\n                color=\"blue\"\n                bold\n                pointer\n                style={{ float: 'right', fontSize: '0.8em' }}\n              >\n                <Icon name=\"comments\" />\n                Yorumlara bak\n              </Label>\n            </Link>\n          )}\n        </Card.Header>\n        <Card.Meta>\n          {course.fullName} <QuotaLabel course={course} text />\n        </Card.Meta>\n\n        <Card.Description>\n          <Label color=\"blue\" bold pointer nolink>\n            <Icon name=\"calendar\" />\n            {convertDays(course.days)}\n          </Label>{' '}\n          •{' '}\n          <Label color=\"green\" bold pointer nolink>\n            <Icon name=\"clock\" />\n            {course.hours}\n          </Label>{' '}\n          •{' '}\n          <Label color=\"blue\" bold pointer nolink>\n            {course.credits} Kredi\n          </Label>\n          <Label\n            color=\"blue\"\n            bold\n            pointer\n            style={{ float: 'right', fontSize: '0.8em' }}\n            onClick={() => handleAddAllSections()}\n          >\n            <Icon name=\"add\" />\n            Bütün sectionları ekle\n          </Label>\n          <br />\n          <Label\n            color={course.place === 'Online' ? 'blue' : 'green'}\n            bold\n            pointer\n            nolink\n          >\n            {course.place} Ders\n          </Label>{' '}\n          •{' '}\n          <Label\n            color={course.place === 'Online' ? 'blue' : 'green'}\n            bold\n            pointer\n            nolink\n          >\n            {course.final} Final\n          </Label>\n          {course.parentName !== 'STAFF STAFF' && (\n            <a\n              target=\"_blank\"\n              href={`http://registration.boun.edu.tr/scripts/schedule/coursedescription.asp?course=${course.areaCode}${course.digitCode}&section=${course.sectionCode}&term=2019%2F2020-1`}\n            >\n              <Label\n                color=\"blue\"\n                bold\n                pointer\n                style={{ float: 'right', fontSize: '0.8em' }}\n              >\n                <Icon name=\"file alternate\" />\n                Geçmiş Syllabusa Bak\n              </Label>\n            </a>\n          )}\n          <br />\n          {course.req && (\n            <Label color=\"blue\" bold>\n              Bu Bölümlere Zorunlu: {course.req}\n            </Label>\n          )}\n        </Card.Description>\n      </Card>\n    </div>\n  );\n};\n\nexport default SubCourse;\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Input, Icon, Popup, Checkbox } from 'semantic-ui-react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport InfiniteScroll from 'react-infinite-scroller';\n\nimport { searchCourse } from '../../../../reducers/courseReducer';\nimport { compareNames } from '../../../../utils/utils';\nimport SubCourse from './SubCourse';\nimport CommentsLoading from '../../../Comments/CommentsLoading';\nimport NoSubResult from '../../../Search/NoSubResult';\nconst SearchCourses = () => {\n  const count = useSelector((state) => state.courses.count);\n  const start = useSelector((state) => state.courses.start);\n  const hasMore = useSelector((state) => state.courses.hasMore);\n  const targets = useSelector((state) => state.courses.courses);\n  const findTime = useSelector((state) => state.courses.findTime);\n  const [search, setSearch] = useState('');\n  const notFindTime = useSelector((state) => state.courses.notFindTime);\n  const dispatch = useDispatch();\n  const [currentTarget, setCurrentTarget] = useState([]);\n  const [ready, setReady] = useState(false);\n  const [noResult, setNoResult] = useState(true);\n  const first = useRef(false);\n  const fetching = useRef(false);\n  const [isOffline, setIsOffline] = useState(false);\n  const refValue = useRef('');\n  const [storedTimeout, setStoredTimeout] = useState(null);\n\n  useEffect(() => {\n    dispatch(\n      searchCourse(\n        0,\n        count,\n        first,\n        fetching,\n        search,\n        findTime.map((t) => t.id),\n        notFindTime.map((t) => t.id),\n        isOffline\n      )\n    );\n  }, [search, findTime, notFindTime, isOffline]);\n\n  useEffect(() => {\n    setCurrentTarget(\n      filterCourses(targets, search, findTime, notFindTime, isOffline)\n    );\n  }, [targets, findTime, notFindTime, isOffline]);\n\n  const loadFunc = () => {\n    if (!fetching.current) {\n      dispatch(\n        searchCourse(\n          start,\n          count,\n          first,\n          fetching,\n          search,\n          findTime.map((t) => t.id),\n          notFindTime.map((t) => t.id),\n          isOffline\n        )\n      );\n    }\n  };\n\n  useEffect(() => {\n    if (first.current && currentTarget.length === 0) {\n      setNoResult(true);\n    } else if (currentTarget.length !== 0 && first.current) {\n      setNoResult(false);\n    }\n    if (!first.current) {\n      setReady(false);\n    } else {\n      setReady(true);\n    }\n  }, [currentTarget, first]);\n\n  const handleValueChange = (e) => {\n    refValue.current = e.target.value;\n\n    if (storedTimeout) clearTimeout(storedTimeout);\n    setStoredTimeout(\n      setTimeout(() => {\n        setSearch(refValue.current);\n      }, 300)\n    );\n  };\n\n  return (\n    <>\n      <div style={{ display: 'flex', alignItems: 'center' }}>\n        <Input\n          icon=\"search\"\n          placeholder={`Ders Arayın...`}\n          value={refValue.current}\n          onChange={(e) => handleValueChange(e)}\n          lang=\"tr\"\n          size=\"big\"\n          style={{ width: '90%', marginLeft: '1em' }}\n        />\n        <Popup\n          content={\n            <Checkbox\n              checked={isOffline}\n              onClick={() => setIsOffline(!isOffline)}\n              label=\"Sadece Offline Dersleri Göster\"\n            />\n          }\n          position=\"bottom right\"\n          hoverable\n          trigger={\n            <Icon\n              name=\"filter\"\n              color=\"blue\"\n              size=\"big\"\n              style={{ paddingLeft: '0.5em' }}\n              fitted\n            />\n          }\n        />\n      </div>\n      <div\n        style={{\n          overflow: 'auto',\n          maxHeight: '70vh',\n          marginTop: '1em',\n        }}\n      >\n        {!ready ? (\n          <CommentsLoading />\n        ) : noResult ? (\n          <div>Sonuç bulunamadı.</div>\n        ) : (\n          <InfiniteScroll\n            pageStart={0}\n            loadMore={loadFunc}\n            hasMore={hasMore}\n            loader={\n              <div className=\"loader\" key={0}>\n                <CommentsLoading skeletonLength={1} />\n              </div>\n            }\n            useWindow={false}\n          >\n            {currentTarget.map((c) => (\n              <SubCourse course={c} key={c.id} />\n            ))}\n          </InfiniteScroll>\n        )}\n      </div>\n    </>\n  );\n};\n\nconst filterCourses = (courses, search, findTime, notFindTime, isOffline) => {\n  let s = search.toUpperCase();\n  let currentCourses = courses\n    .filter((c) => {\n      if (isOffline) {\n        return c.place !== 'Online';\n      } else {\n        return true;\n      }\n    })\n    .filter(\n      (c) =>\n        c.name.toUpperCase().includes(s) ||\n        c.parentName.toUpperCase().includes(s)\n    )\n    .sort(compareNames);\n  if (findTime.length > 0) {\n    currentCourses = currentCourses.filter((course) => {\n      let q = 0;\n      course.days.forEach((d, i) => {\n        findTime.forEach((t) => {\n          if (course.days[i] === t.day && course.hours[i] === t.hour) {\n            q++;\n          }\n        });\n      });\n      return q === findTime.length;\n    });\n  }\n  if (notFindTime.length > 0) {\n    currentCourses = currentCourses.filter((course) => {\n      let found = false;\n      course.days.forEach((d, i) => {\n        notFindTime.forEach((t) => {\n          if (course.days[i] === t.day && course.hours[i] === t.hour) {\n            found = true;\n          }\n        });\n      });\n      return !found;\n    });\n  }\n\n  return currentCourses;\n};\n\nexport default SearchCourses;\n","import React  from 'react';\nimport 'rc-slider/assets/index.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeCreditsRange } from '../../../reducers/courseReducer';\nimport { Label, StyledRange } from '../../Nav/NavTheme';\n\nconst CreditsSlider = () => {\n  const creditsRange = useSelector((state) => state.courses.creditsRange);\n  const dispatch = useDispatch();\n  const onSliderChange = (value) => {\n    dispatch(changeCreditsRange(value));\n  };\n  return (\n    <div>\n      <p>\n        <Label color=\"blue\" bold>\n          Kredi Aralığı\n        </Label>\n      </p>\n      <StyledRange\n        min={2}\n        max={40}\n        allowCross={false}\n        onChange={onSliderChange}\n        value={creditsRange}\n        marks={getMarks(creditsRange)}\n        trackStyle={[\n          { backgroundColor: '#21ba45' },\n          { backgroundColor: '#21ba45' },\n        ]}\n      />\n    </div>\n  );\n};\n\nconst getMarks = (value) => {\n  let y = value.reduce((acc, elem) => {\n    acc[elem] = elem; // or what ever object you want inside\n    return acc;\n  }, {});\n  return y;\n};\n\nexport default CreditsSlider;\n","import React, { useState } from 'react';\nimport 'rc-slider/assets/index.css';\nimport {\n  Checkbox,\n  Accordion,\n  Icon,\n} from 'semantic-ui-react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  onOffConflict,\n  changeConflictRange,\n} from '../../../reducers/courseReducer';\nimport { Label, StyledSlider } from '../../Nav/NavTheme';\n\nconst ConflictOptions = () => {\n  const conflict = useSelector((state) => state.courses.conflict);\n  const [accordionOpen, setAccordionOpen] = useState(false);\n  const [checked, setChecked] = useState(false);\n  const dispatch = useDispatch();\n\n  const toggleConflict = () => {\n    dispatch(onOffConflict());\n    setChecked(!checked);\n    setAccordionOpen(!checked);\n  };\n\n  return (\n    <Accordion style={{ display: 'inline-block' }}>\n      <Accordion.Title active={accordionOpen} index={0}>\n        <div style={{ display: 'flex' }}>\n          <Checkbox\n            defaultChecked={conflict.makeConflict}\n            onChange={() => toggleConflict()}\n          />\n          <Label\n            color=\"blue\"\n            bold\n            pointer\n            onClick={() => setAccordionOpen(!accordionOpen)}\n            style={{ marginLeft: '0.5em' }}\n          >\n            Conflicte izin ver\n          </Label>\n          <Icon\n            name=\"caret down\"\n            color=\"blue\"\n            onClick={() => setAccordionOpen(!accordionOpen)}\n            style={{ marginLeft: '0.3em' }}\n          />\n        </div>\n      </Accordion.Title>\n      <Accordion.Content active={accordionOpen} style={{ marginLeft: '1em' }}>\n        <HoursDetails />\n      </Accordion.Content>\n    </Accordion>\n  );\n};\n\nconst HoursDetails = () => {\n  const conflictRange = useSelector(\n    (state) => state.courses.conflict.conflictRange\n  );\n\n  const dispatch = useDispatch();\n  const onSliderChange = (value) => {\n    dispatch(changeConflictRange(value));\n  };\n\n  return (\n    <div>\n      <p>En fazla kaç saat conflict olabilsin?</p>\n      <StyledSlider\n        min={1}\n        max={40}\n        onChange={onSliderChange}\n        value={conflictRange}\n        marks={getMark(conflictRange)}\n        trackStyle={{ backgroundColor: '#21ba45' }}\n      />\n    </div>\n  );\n};\n\nconst getMark = (value) => {\n  let y = [value].reduce((acc, elem) => {\n    acc[elem] = elem;\n    return acc;\n  }, {});\n  return y;\n};\n\nexport default ConflictOptions;\n","import React from 'react';\nimport 'rc-slider/assets/index.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeCourseRange } from '../../../reducers/courseReducer';\nimport { Label, StyledRange } from '../../Nav/NavTheme';\n\nconst CourseSlider = () => {\n  const courseRange = useSelector((state) => state.courses.courseRange);\n  const dispatch = useDispatch();\n  const onSliderChange = (value) => {\n    dispatch(changeCourseRange(value));\n  };\n\n  return (\n    <div>\n      <p>\n        <Label color=\"blue\" bold>\n          Ders Aralığı\n        </Label>\n      </p>\n      <StyledRange\n        min={2}\n        max={20}\n        allowCross={false}\n        onChange={onSliderChange}\n        value={courseRange}\n        marks={getMarks(courseRange)}\n        trackStyle={[\n          { backgroundColor: '#21ba45' },\n          { backgroundColor: '#21ba45' },\n        ]}\n      />\n    </div>\n  );\n};\n\nconst getMarks = (value) => {\n  let y = value.reduce((acc, elem) => {\n    acc[elem] = elem;\n    return acc;\n  }, {});\n  return y;\n};\n\nexport default CourseSlider;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button } from 'semantic-ui-react';\nimport lodash from 'lodash';\nimport { setScenarios } from '../../../reducers/courseReducer';\nimport { compareNames } from '../../../utils/utils';\nconst CreateProgram = () => {\n  const dispatch = useDispatch();\n  const courseRange = useSelector((state) => state.courses.courseRange);\n  const scenariosSlider = useSelector((state) => state.courses.scenariosSlider);\n  const creditsRange = useSelector((state) => state.courses.creditsRange);\n  const requiredCourses = useSelector((state) => state.courses.requiredCourses);\n  const conflict = useSelector((state) => state.courses.conflict);\n  const tryEmptyDay = useSelector((state) => state.courses.tryEmptyDay);\n  const selectedCourses = useSelector((state) => state.courses.selectedCourses);\n  const [value, setValue] = useState('Program Oluştur');\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    if (loading) {\n      createWithParams(\n        requiredCourses,\n        dispatch,\n        createWithRequired,\n        scenariosSlider,\n        createWithoutRequired\n      );\n    }\n  }, [loading]);\n\n  const createProgram = async () => {\n    const canProgram = checkCanProgram();\n    if (!canProgram.can) {\n      setValue(canProgram.error);\n      return;\n    }\n    setLoading(true);\n  };\n\n  const getOnlySelectedCourses = (requiredColumns) => {\n    let onlys = [];\n    let requiredColumnCourses = requiredColumns.map(\n      (rcColumn) => rcColumn.courses\n    );\n    requiredColumnCourses = lodash.flatten(requiredColumnCourses);\n    selectedCourses.forEach((sc) => {\n      let presents = false;\n      requiredColumnCourses.forEach((rc) => {\n        if (rc.areaCode === sc.areaCode && rc.digitCode === sc.digitCode) {\n          presents = false;\n        }\n      });\n      if (!presents) {\n        onlys.push(sc);\n      }\n    });\n    return onlys;\n  };\n\n  const createWithRequired = (maxProgramsLength) => {\n    let possibleScenarios = [];\n    let requiredColumns = requiredCourses.filter((rc) => rc.courses.length > 0);\n    let otherSelectedCourses = getOnlySelectedCourses(requiredColumns);\n    let requiredCoursesCourses = [...requiredColumns.map((rc) => rc.courses)];\n\n    let stackedSelectedCourses = stackedCourses(\n      otherSelectedCourses\n    ).map((stack) => [, ...stack.courses]);\n\n    loopTwoTimesStack(\n      requiredCoursesCourses,\n      stackedSelectedCourses,\n      possibleScenarios,\n      maxProgramsLength\n    );\n\n    return possibleScenarios;\n  };\n\n  const createWithoutRequired = (maxProgramsLength) => {\n    let possibleScenarios = [];\n    let stackedSelectedCourses = stackedCourses(\n      selectedCourses\n    ).map((stack) => [, ...stack.courses]);\n    loopOverStack(stackedSelectedCourses, possibleScenarios, maxProgramsLength);\n    return possibleScenarios;\n  };\n\n  const loopTwoTimesStack = (\n    requiredStack,\n    optionalStack,\n    scenario,\n    length\n  ) => {\n    let max = requiredStack.length - 1;\n    function helper(arr, i) {\n      for (var j = 0, l = requiredStack[i].length; j < l; j++) {\n        if (scenario.length === length) break;\n\n        var a = arr.slice(0);\n        a.push(requiredStack[i][j]);\n        if (i == max) {\n          loopOverStack(optionalStack, scenario, length, a);\n        } else helper(a, i + 1);\n      }\n    }\n    helper([], 0);\n  };\n\n  const loopOverStack = (loopedStack, scenario, length, aditional) => {\n    let max = loopedStack.length - 1;\n    function helper(arr, i) {\n      for (var j = 0, l = loopedStack[i].length; j < l; j++) {\n        if (scenario.length === length) break;\n\n        var a = arr.slice(0);\n        if (loopedStack[i][j]) a.push(loopedStack[i][j]);\n        if (i == max) {\n          if (aditional) a = [...a, ...aditional];\n          if (canAddToScenarios(a)) {\n            scenario.push(a);\n          }\n        } else helper(a, i + 1);\n      }\n    }\n    helper([], 0);\n  };\n\n  const stackedCourses = (courses) => {\n    let stacked = [];\n    courses.sort(compareNames).forEach((sc) => {\n      let presentsInStacked = stacked.find(\n        (stack) => stack.shortName === `${sc.areaCode}${sc.digitCode}`\n      );\n      if (presentsInStacked) {\n        presentsInStacked.courses.push(sc);\n      } else {\n        stacked.push({\n          courses: [sc],\n          shortName: `${sc.areaCode}${sc.digitCode}`,\n        });\n      }\n    });\n    return stacked;\n  };\n\n  const canAddToScenarios = (potentialCourses) => {\n    if (\n      between(potentialCourses.length, courseRange[0], courseRange[1], true) &&\n      creditsMatch(potentialCourses) &&\n      emptyDayMatch(potentialCourses) &&\n      conflictMatch(potentialCourses)\n    ) {\n      return true;\n    }\n    return false;\n  };\n\n  const conflictMatch = (potentialCourses) => {\n    const possibleConflictLength = getPossibleConflictLength(potentialCourses);\n    if (conflict.makeConflict) {\n      return possibleConflictLength > conflict.conflictRange ? false : true;\n    }\n    return possibleConflictLength > 0 ? false : true;\n  };\n\n  const emptyDayMatch = (potentialCourses) => {\n    if (!tryEmptyDay) {\n      return true;\n    }\n    let currentDays = getCoursesDays(potentialCourses);\n    if (currentDays === 5) {\n      return false;\n    }\n    return true;\n  };\n\n  const creditsMatch = (potentialCourses) => {\n    const currentCredits = getTotalCoursesCredits(potentialCourses);\n    return currentCredits > creditsRange[1] ? false : true;\n  };\n\n  const checkCanProgram = () => {\n    const singledCourses = lodash.uniqBy(selectedCourses, (c) => {\n      return `${c.areaCode}${c.digitCode}`;\n    });\n    if (singledCourses.length < courseRange[0]) {\n      return { can: false, error: 'Minimum Ders Aralığı Karşılanmıyor!' };\n    }\n\n    const selectedCoursesCredits = getTotalCoursesCredits(singledCourses);\n    if (selectedCoursesCredits < creditsRange[0]) {\n      return { can: false, error: 'Minimum Kredi Aralığı Karşılanmıyor!' };\n    }\n\n    return { can: true };\n  };\n\n  const getCoursesConflictLength = (courses) => {\n    let allCellIds = [];\n    let unionCellIds = [];\n    courses.forEach((course) => {\n      allCellIds.push(course.cellIds);\n      unionCellIds = lodash.union(unionCellIds, course.cellIds);\n    });\n    allCellIds = lodash.flatten(allCellIds);\n    return allCellIds.length - unionCellIds.length;\n  };\n\n  const getPossibleConflictLength = (possibleCourses) => {\n    const after = getCoursesConflictLength(possibleCourses);\n    return after;\n  };\n\n  const getTotalCoursesCredits = (courses) => {\n    return courses.reduce((total, c) => {\n      return total + Number(c.credits);\n    }, 0);\n  };\n\n  const getCoursesDays = (courses) => {\n    let unionDays = [];\n    courses.forEach((c) => {\n      unionDays = lodash.union(unionDays, c.days);\n    });\n\n    return unionDays.length;\n  };\n\n  function createWithParams(\n    requiredCourses,\n    dispatch,\n    createWithRequired,\n    scenariosSlider,\n    createWithoutRequired\n  ) {\n    const requiredColumnsWithCourses = requiredCourses.filter(\n      (rc) => rc.courses.length > 0\n    );\n    let scenarios;\n    if (requiredColumnsWithCourses.length > 0) {\n      scenarios = createWithRequired(scenariosSlider);\n    } else {\n      scenarios = createWithoutRequired(scenariosSlider);\n    }\n\n    if (scenarios.length > 0) {\n      dispatch(setScenarios(scenarios));\n      setValue('Program Oluşturuldu');\n    } else {\n      dispatch(setScenarios([]));\n      setValue('Bu Parametrelerde Program Oluşturulamadı');\n    }\n\n    setLoading(false);\n  }\n\n  return (\n    <div>\n      <Button\n        color={\n          value === 'Program Oluşturuldu' || value === 'Program Oluştur'\n            ? 'blue'\n            : 'red'\n        }\n        onClick={() => createProgram()}\n        loading={loading}\n        fluid\n      >\n        {value}\n      </Button>\n    </div>\n  );\n};\n\nfunction between(n, a, b, inclusive) {\n  var min = Math.min.apply(Math, [a, b]),\n    max = Math.max.apply(Math, [a, b]);\n  return inclusive ? n >= min && n <= max : n > min && n < max;\n}\n\nexport default CreateProgram;\n","import React from 'react';\nimport 'rc-slider/assets/index.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeScenariosSlider } from '../../../reducers/courseReducer';\nimport { Label, StyledSlider } from '../../Nav/NavTheme';\n\nconst ScenariosSlider = () => {\n  const scenariosSlider = useSelector((state) => state.courses.scenariosSlider);\n  const dispatch = useDispatch();\n  const onSliderChange = (value) => {\n    dispatch(changeScenariosSlider(value));\n  };\n\n  return (\n    <div>\n      <p>\n        <Label color=\"blue\" bold>\n          Maksimum Senaryo Sayısı\n        </Label>\n      </p>\n      <StyledSlider\n        min={1}\n        max={50}\n        onChange={onSliderChange}\n        value={scenariosSlider}\n        marks={getMark(scenariosSlider)}\n        trackStyle={{ backgroundColor: '#21ba45' }}\n      />\n    </div>\n  );\n};\n\nconst getMark = (value) => {\n  let y = [value].reduce((acc, elem) => {\n    acc[elem] = elem;\n    return acc;\n  }, {});\n  return y;\n};\n\nexport default ScenariosSlider;\n","import React from 'react';\nimport {\n  Grid,\n  Checkbox,\n} from 'semantic-ui-react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  toggleTryEmptyDay,\n} from '../../../reducers/courseReducer';\nimport { Label } from '../../Nav/NavTheme';\nimport CreditsSlider from './CreditsSlider';\nimport ConflictOptions from './ConflictOptions';\nimport HoursSlider from './CourseSlider';\nimport CreateProgram from './CreateProgram';\nimport ScenariosSlider from './ScenariosSlider';\nconst ProgramOptions = () => {\n  const tryEmptyDay = useSelector((state) => state.courses.tryEmptyDay);\n  const dispatch = useDispatch();\n\n  const toggleDay = () => {\n    dispatch(toggleTryEmptyDay());\n  };\n\n  return (\n    <>\n      <Grid.Row>\n        <Grid.Column>\n          <CreateProgram />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row style={{ marginTop: '1.6em' }}>\n        <Grid.Column>\n          <CreditsSlider />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row style={{ marginTop: '1.6em' }}>\n        <Grid.Column>\n          <HoursSlider />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row style={{ marginTop: '1.6em' }}>\n        <Grid.Column>\n          <ScenariosSlider />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row style={{ marginTop: '1.6em' }}>\n        <Grid.Column>\n          <Checkbox\n            defaultChecked={tryEmptyDay}\n            onChange={() => toggleDay()}\n            label={\n              <Label color=\"blue\" bold>\n                {' '}\n                Bir günü boşta bırak\n              </Label>\n            }\n          />\n        </Grid.Column>\n      </Grid.Row>\n      <Grid.Row style={{ marginTop: '1em' }}>\n        <Grid.Column>\n          <ConflictOptions />\n        </Grid.Column>\n      </Grid.Row>\n    </>\n  );\n};\n\nexport default ProgramOptions;\n","import React from 'react';\nimport CoursePlannerTable from './CoursePlannerTable/CoursePlannerTable';\nimport { Grid } from 'semantic-ui-react';\nimport SelectedCourses from './SelectedCourses/SelectedCourses';\nimport RequiredCourses from './RequiredCourses/RequiredCourses';\nimport SearchCourses from './CoursePlannerTable/SearchCourses/SearchCourses';\nimport ProgramOptions from './ProgramOptions/ProgramOptions';\nimport { isMobile } from 'react-device-detect';\n\nconst CoursePlanner = () => {\n  return isMobile ? (\n    <div style={{ height: '150vh' }}>\n      <Grid style={{ margin: '0.5em' }}>\n        <Grid.Row>\n          <Grid.Column>\n            <CoursePlannerTable />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column>\n            <SelectedCourses />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row>\n          <Grid.Column>\n            <SearchCourses stretched />\n          </Grid.Column>\n        </Grid.Row>\n\n        <Grid.Row>\n          <Grid.Column>\n            <ProgramOptions />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row columns={1}>\n          <RequiredCourses />\n        </Grid.Row>\n      </Grid>\n    </div>\n  ) : (\n    <div style={{ height: '150vh' }}>\n      <Grid columns={3} style={{ margin: '0.5em' }}>\n        <Grid.Row>\n          <Grid.Column stretched width={6}>\n            <CoursePlannerTable />\n            <ProgramOptions />\n          </Grid.Column>\n          <Grid.Column width={4}>\n            <SelectedCourses />\n          </Grid.Column>\n          <Grid.Column>\n            <SearchCourses stretched />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row columns={4}>\n          <RequiredCourses />\n        </Grid.Row>\n      </Grid>\n    </div>\n  );\n};\n\nexport default CoursePlanner;\n"],"sourceRoot":""}