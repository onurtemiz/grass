{"version":3,"sources":["components/Login/Login.js","components/Signup/Signup.js","UnauthorizedApp.js"],"names":["Login","useForm","register","handleSubmit","errors","setValue","dispatch","useDispatch","history","useHistory","onSubmit","data","a","loginUser","useEffect","push","name","required","pattern","value","message","minLength","Grid","textAlign","style","height","verticalAlign","columns","Column","maxWidth","Header","as","color","Message","Label","padding","Form","size","Segment","Field","inline","Input","fluid","onChange","e","icon","Icon","iconPosition","placeholder","email","basic","pointing","type","password","Divider","Button","primary","info","to","error","Signup","watch","validate","maxLength","signupUser","username","autoComplete","samePassword","UnauthorizedApp","path"],"mappings":"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","file":"static/js/6.aedeac64.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { loginUser } from '../../reducers/userReducer';\nimport { useDispatch } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Segment,\n  Icon,\n  Label,\n  Divider,\n} from 'semantic-ui-react';\nimport { useForm } from 'react-hook-form';\n\nconst Login = () => {\n  const { register, handleSubmit, errors, setValue } = useForm();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const onSubmit = async (data) => {\n    dispatch(loginUser(data));\n  };\n\n  useEffect(() => {\n    history.push('/login');\n  }, []);\n\n  useEffect(() => {\n    register(\n      { name: 'email' },\n      {\n        required: 'Lütfen boun eposta adresinizi girin.',\n        pattern: {\n          value: /^[A-Z0-9._%+-]+@boun\\.edu\\.tr$/i,\n          message: 'Epostanız @boun.edu.tr ile bitiyor olmalı.',\n        },\n      }\n    );\n    register(\n      { name: 'password' },\n      {\n        required: 'Lütfen şifrenizi girin.',\n        minLength: {\n          value: 8,\n          message: 'Şifreniz en az 8 karakterden oluşmalı.',\n        },\n      }\n    );\n  }, []);\n\n  return (\n    <Grid\n      textAlign=\"center\"\n      style={{ height: '100vh' }}\n      verticalAlign=\"middle\"\n      columns=\"equal\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h1\" color=\"green\">\n          Çimlere Hoşgeldiniz.\n        </Header>\n\n        <Message color=\"green\">\n          Çim uygulamasına sadece{' '}\n          <Label color=\"blue\" style={{ padding: 5 }}>\n            @boun.edu.tr\n          </Label>{' '}\n          emaili olanlar giriş yapabilir.\n        </Message>\n        <Form size=\"large\" onSubmit={handleSubmit(onSubmit)}>\n          <Segment>\n            <Form.Field inline>\n              <Form.Input\n                fluid\n                onChange={(e, { name, value }) => setValue(name, value)}\n                icon={<Icon color=\"green\" name=\"mail\" />}\n                iconPosition=\"left\"\n                placeholder=\"Eposta Adresi\"\n                name=\"email\"\n              />\n              {errors.email && (\n                <Label basic color=\"red\" pointing=\"above\">\n                  {errors.email.message}\n                </Label>\n              )}\n            </Form.Field>\n            <Form.Field inline>\n              <Form.Input\n                fluid\n                icon={<Icon color=\"green\" name=\"key\" />}\n                iconPosition=\"left\"\n                placeholder=\"Şifre\"\n                type=\"password\"\n                name=\"password\"\n                onChange={(e, { name, value }) => setValue(name, value)}\n              />\n              {errors.password && (\n                <Label basic color=\"red\" pointing=\"above\">\n                  {errors.password.message}\n                </Label>\n              )}\n            </Form.Field>\n            <Divider />\n            <Button fluid size=\"large\" primary type=\"submit\">\n              Giriş Yap\n            </Button>\n          </Segment>\n        </Form>\n        <Message info>\n          <Link to=\"/signup\">\n            <b>Hesap Oluştur</b>\n          </Link>\n        </Message>\n        <Message error>\n          <Link to=\"/signup\" style={{ color: '#f53131' }}>\n            <b>Şifremi Unuttum</b>\n          </Link>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Login;\n","import React, { useEffect } from 'react';\nimport { signupUser } from '../../reducers/userReducer';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Segment,\n  Icon,\n  Label,\n  Divider,\n} from 'semantic-ui-react';\nimport { useForm } from 'react-hook-form';\n\nconst Signup = () => {\n  const dispatch = useDispatch();\n  const { register, handleSubmit, errors, setValue, watch } = useForm();\n\n  useEffect(() => {\n    register(\n      { name: 'email' },\n      {\n        required: 'Lütfen boun eposta adresinizi girin.',\n        pattern: {\n          value: /^[A-Z0-9._%+-]+@boun\\.edu\\.tr$/i,\n          message: 'Epostanız @boun.edu.tr ile bitiyor olmalı.',\n        },\n      }\n    );\n    register(\n      { name: 'password' },\n      {\n        required: 'Lütfen şifrenizi girin.',\n        minLength: {\n          value: 8,\n          message: 'Şifreniz en az 8 karakterden oluşmalı.',\n        },\n      }\n    );\n    register(\n      { name: 'samePassword' },\n      {\n        required: 'Lütfen şifrenizi tekrar girin.',\n        validate: (value) =>\n          value === watch('password') || 'Şifreleriniz uyuşmuyor.',\n      }\n    );\n    register(\n      { name: 'username' },\n      {\n        required: 'Lütfen bir kullanıcı adı girin.',\n        maxLength: {\n          value: 15,\n          message: 'Kullanıcı adınız 15 veya daha az harften oluşmalı.',\n        },\n        minLength: {\n          value: 1,\n          message: 'Kullanıcı adınız en az 1 harften oluşmalı',\n        },\n      }\n    );\n  }, []);\n\n  const onSubmit = (data) => {\n    dispatch(signupUser(data));\n  };\n\n  return (\n    <Grid\n      textAlign=\"center\"\n      style={{ height: '100vh' }}\n      verticalAlign=\"middle\"\n      columns=\"equal\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h1\" color=\"green\" textAlign=\"center\">\n          Çimlerde Yerinizi Alın.\n        </Header>\n\n        <Message color=\"green\">\n          Çim uygulamasına sadece{' '}\n          <Label color=\"blue\" style={{ padding: 5 }}>\n            @boun.edu.tr\n          </Label>{' '}\n          emaili olanlar kayıt olabilir.\n        </Message>\n        <Form size=\"large\" onSubmit={handleSubmit(onSubmit)}>\n          <Segment>\n            <Form.Field inline>\n              <Form.Input\n                fluid\n                icon={<Icon name=\"user\" color=\"green\" />}\n                iconPosition=\"left\"\n                placeholder=\"Kullanıcı Adı\"\n                onChange={(e, { name, value }) => setValue(name, value)}\n                name=\"username\"\n              />\n\n              {errors.username && (\n                <Label basic color=\"red\" pointing=\"above\">\n                  {errors.username.message}\n                </Label>\n              )}\n            </Form.Field>\n            <Form.Field inline>\n              <Form.Input\n                fluid\n                icon={<Icon color=\"green\" name=\"mail\" />}\n                iconPosition=\"left\"\n                placeholder=\"Eposta Adresi\"\n                onChange={(e, { name, value }) => setValue(name, value)}\n                name=\"email\"\n              />\n              {errors.email && (\n                <Label basic color=\"red\" pointing=\"above\">\n                  {errors.email.message}\n                </Label>\n              )}\n            </Form.Field>\n            <Form.Field inline>\n              <Form.Input\n                fluid\n                icon={<Icon color=\"green\" name=\"key\" />}\n                iconPosition=\"left\"\n                placeholder=\"Şifre\"\n                type=\"password\"\n                onChange={(e, { name, value }) => setValue(name, value)}\n                name=\"password\"\n              />\n              {errors.password && (\n                <Label basic color=\"red\" pointing=\"above\">\n                  {errors.password.message}\n                </Label>\n              )}\n            </Form.Field>\n            <Form.Field inline>\n              <Form.Input\n                fluid\n                icon={<Icon color=\"green\" name=\"key\" />}\n                iconPosition=\"left\"\n                placeholder=\"Şifrenizi Tekrar Yazın\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                onChange={(e, { name, value }) => setValue(name, value)}\n                name=\"samePassword\"\n              />\n              {errors.samePassword && (\n                <Label basic color=\"red\" pointing=\"above\">\n                  {errors.samePassword.message}\n                </Label>\n              )}\n            </Form.Field>\n            <Divider />\n            <Button fluid size=\"large\" primary type=\"submit\">\n              Hesap Oluştur\n            </Button>\n          </Segment>\n        </Form>\n        <Message info>\n          Zaten Üye misiniz?{' '}\n          <Link to=\"/login\">\n            <b>Giriş Yap</b>\n          </Link>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\nimport { Switch, Route, Redirect, Link } from 'react-router-dom';\nimport Login from './components/Login/Login';\nimport Signup from './components/Signup/Signup';\nimport Footer from './components/Footer/Footer';\nconst UnauthorizedApp = () => {\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/signup\">\n          <Signup />\n        </Route>\n        <Route path=\"/\">\n          <Login />\n        </Route>\n      </Switch>\n    </div>\n  );\n};\n\nexport default UnauthorizedApp;\n"],"sourceRoot":""}