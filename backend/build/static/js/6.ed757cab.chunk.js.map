{"version":3,"sources":["components/Footer/Footer.js","components/Login/Login.js","components/Signup/Signup.js","UnauthorizedApp.js"],"names":["Footer","Login","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleLogin","values","setSubmitting","a","loginUser","onSubmit","e","preventDefault","TextField","error","required","size","id","label","variant","value","placeholder","onChange","target","type","autoComplete","Button","color","to","Signup","passwordError","setPasswordError","emailError","setEmailError","firstNameError","setFirstNameError","lastNameError","setLastNameError","firstName","setFirstName","lastName","setLastName","validationSchema","Yup","max","matches","min","handleSubmit","validate","abortEarly","then","signupUser","catch","console","log","errors","forEach","q","Grid","textAlign","style","height","verticalAlign","columns","Column","maxWidth","Header","as","Message","Label","Form","Segment","Group","unstackable","widths","Input","fluid","icon","Icon","name","iconPosition","basic","pointing","Field","inline","Divider","primary","onClick","info","href","UnauthorizedApp","path"],"mappings":"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","file":"static/js/6.ed757cab.chunk.js","sourcesContent":["import React from 'react';\n\nconst Footer = () => {\n  return <div>Consent verecek hoca arıyorum...</div>;\n};\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { loginUser } from '../../reducers/userReducer';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { TextField, Button } from '@material-ui/core';\nconst Login = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = async (values, setSubmitting) => {\n    dispatch(loginUser(values));\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    handleLogin({ email, password });\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <TextField\n          error={false}\n          required\n          size=\"small\"\n          id=\"outlined-required\"\n          label=\"Email\"\n          variant=\"outlined\"\n          value={email}\n          placeholder=\"onur.temiz@boun.edu.tr\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <TextField\n          error={true}\n          size=\"small\"\n          value={password}\n          id=\"outlined-password-input\"\n          label=\"Password\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          variant=\"outlined\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Submit\n        </Button>\n      </form>\n      <Link to=\"/signup\">Kayit icin tiklayin.</Link>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { signupUser } from '../../reducers/userReducer';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport * as Yup from 'yup'; // for everything\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Message,\n  Segment,\n  Icon,\n  Label,\n  Divider,\n} from 'semantic-ui-react';\n\nconst Signup = () => {\n  const dispatch = useDispatch();\n  const [passwordError, setPasswordError] = useState(null);\n  const [emailError, setEmailError] = useState(null);\n  const [firstNameError, setFirstNameError] = useState(null);\n  const [lastNameError, setLastNameError] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [firstName, setFirstName] = useState(null);\n  const [lastName, setLastName] = useState(null);\n  const validationSchema = Yup.object({\n    firstName: Yup.string().max(15, 'firstName').required('Required'),\n    lastName: Yup.string().required('Required').max(15, 'lastName'),\n    email: Yup.string()\n      .required('Required')\n      .matches(/^[A-Z0-9._%+-]+@boun\\.edu\\.tr$/i, 'email'),\n    password: Yup.string().required('Required').min(8, 'password'),\n  });\n\n  const emailSet = (value) => {\n    setEmailError(null);\n    setEmail(value);\n  };\n  const firstSet = (value) => {\n    setFirstNameError(null);\n    setFirstName(value);\n  };\n  const lastSet = (value) => {\n    setLastNameError(null);\n    setLastName(value);\n  };\n  const passwordSet = (value) => {\n    setPasswordError(null);\n    setPassword(value);\n  };\n\n  const handleSubmit = async () => {\n    validationSchema\n      .validate(\n        {\n          password,\n          lastName,\n          email,\n          firstName,\n        },\n        { abortEarly: false }\n      )\n      .then((values) => {\n        dispatch(signupUser(values));\n      })\n      .catch((e) => {\n        console.log('e', e);\n        e.errors.forEach((q) => {\n          switch (q) {\n            case 'password':\n              setPasswordError('Şifre en az 8 karakterden oluşmalı');\n              break;\n            case 'email':\n              setEmailError('Lütfen @boun.edu.tr emaili giriniz.');\n              break;\n            case 'firstName':\n              setFirstNameError('İsim 15 harf veya daha az olmalı');\n              break;\n            case 'lastName':\n              setLastNameError('Soyisim 15 harf veya daha az olmalı');\n              break;\n            default:\n              return;\n          }\n        });\n      });\n  };\n\n  const q = () => {\n    return;\n  };\n  return (\n    <Grid\n      textAlign=\"center\"\n      style={{ height: '100vh' }}\n      verticalAlign=\"middle\"\n      columns=\"equal\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h1\" color=\"green\" textAlign=\"center\">\n          Çim\n        </Header>\n        <Header as=\"h2\" textAlign=\"center\" color=\"blue\">\n          Kaydol\n        </Header>\n        <Message color=\"green\">\n          Çim uygulamasına sadece <Label color=\"blue\">@boun.edu.tr</Label>{' '}\n          emaili olanlar kayıt olabilir.\n        </Message>\n        <Form size=\"large\">\n          <Segment>\n            <Form.Group unstackable widths={2}>\n              <Form.Input\n                fluid\n                icon={<Icon name=\"user\" color=\"green\" />}\n                iconPosition=\"left\"\n                placeholder=\"İsim\"\n                onChange={(e) => firstSet(e.target.value)}\n              />\n\n              <Form.Input\n                fluid\n                icon={<Icon name=\"user\" color=\"green\" />}\n                iconPosition=\"left\"\n                placeholder=\"Soyisim\"\n                onChange={(e) => lastSet(e.target.value)}\n              />\n            </Form.Group>{' '}\n            {(firstNameError || lastNameError) && (\n              <Form.Group unstackable widths={2}>\n                {firstNameError && (\n                  <Label basic color=\"red\" pointing=\"above\">\n                    {firstNameError}\n                  </Label>\n                )}{' '}\n                {lastNameError && (\n                  <Label basic color=\"red\" pointing=\"above\">\n                    {lastNameError}\n                  </Label>\n                )}\n              </Form.Group>\n            )}\n            <Form.Input\n              fluid\n              icon={<Icon color=\"green\" name=\"mail\" />}\n              iconPosition=\"left\"\n              placeholder=\"Eposta Adresi\"\n              onChange={(e) => emailSet(e.target.value)}\n            />\n            {emailError && (\n              <Label basic color=\"red\" pointing=\"above\">\n                {emailError}\n              </Label>\n            )}\n            <Form.Field inline>\n              <Form.Input\n                fluid\n                icon={<Icon color=\"green\" name=\"key\" />}\n                iconPosition=\"left\"\n                placeholder=\"Şifre\"\n                type=\"password\"\n                onChange={(e) => passwordSet(e.target.value)}\n              />\n              {passwordError && (\n                <Label basic color=\"red\" pointing=\"above\">\n                  {passwordError}\n                </Label>\n              )}\n            </Form.Field>\n            <Divider />\n            <Button fluid size=\"large\" primary onClick={handleSubmit}>\n              Hesap Oluştur\n            </Button>\n          </Segment>\n        </Form>\n        <Message info>\n          Zaten Üye misiniz? <Link to=\"/login\">Giriş Yap</Link>\n        </Message>\n        <Message error>\n          <a href=\"#\">Şifremi Unuttum</a>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\nimport { Switch, Route, Redirect, Link } from 'react-router-dom';\nimport Login from './components/Login/Login';\nimport Signup from './components/Signup/Signup';\nimport Footer from './components/Footer/Footer';\nconst UnauthorizedApp = () => {\n  return (\n    <div>\n      <Redirect to=\"/signup\" />\n      <Switch>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/signup\">\n          <Signup />\n        </Route>\n      </Switch>\n      <Footer />\n    </div>\n  );\n};\n\nexport default UnauthorizedApp;\n"],"sourceRoot":""}