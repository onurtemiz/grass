{"version":3,"sources":["components/Footer/Footer.js","components/Login/Login.js","components/Signup/Signup.js","UnauthorizedApp.js"],"names":["Footer","Login","dispatch","useDispatch","useState","email","setEmail","emailError","setEmailError","passwordError","setPasswordError","password","setPassword","validationSchema","Yup","required","matches","min","handleSubmit","a","validate","abortEarly","then","values","loginUser","catch","e","errors","forEach","q","Grid","textAlign","style","height","verticalAlign","columns","Column","maxWidth","Header","as","color","Message","Label","padding","Form","size","Segment","Input","fluid","icon","Icon","name","iconPosition","placeholder","onChange","value","target","basic","pointing","Field","inline","type","Divider","Button","primary","onClick","info","to","error","Signup","firstNameError","setFirstNameError","lastNameError","setLastNameError","firstName","setFirstName","lastName","setLastName","max","signupUser","console","log","Group","unstackable","widths","UnauthorizedApp","path"],"mappings":"sGAAA,oBAMeA,IAJA,WACb,OAAO,wE,8NCuIMC,EAvHD,WACZ,IAAMC,EAAWC,cADC,EAEQC,mBAAS,IAFjB,mBAEXC,EAFW,KAEJC,EAFI,OAGkBF,mBAAS,MAH3B,mBAGXG,EAHW,KAGCC,EAHD,OAIwBJ,mBAAS,MAJjC,mBAIXK,EAJW,KAIIC,EAJJ,OAKcN,mBAAS,IALvB,mBAKXO,EALW,KAKDC,EALC,KAMZC,EAAmBC,IAAW,CAClCT,MAAOS,MACJC,SAAS,YACTC,QAAQ,kCAAmC,SAC9CL,SAAUG,MAAaC,SAAS,YAAYE,IAAI,EAAG,cAG/CC,EAAY,uCAAG,sBAAAC,EAAA,sDACnBN,EACGO,SACC,CACET,WACAN,SAEF,CAAEgB,YAAY,IAEfC,MAAK,SAACC,GACLrB,EAASsB,YAAUD,OAEpBE,OAAM,SAACC,GACNA,EAAEC,OAAOC,SAAQ,SAACC,GAChB,OAAQA,GACN,IAAK,WACHnB,EAAiB,qDACjB,MACF,IAAK,QACHF,EAAc,0CACd,MAEF,QACE,cAvBS,2CAAH,qDAuClB,OACE,kBAACsB,EAAA,EAAD,CACEC,UAAU,SACVC,MAAO,CAAEC,OAAQ,SACjBC,cAAc,SACdC,QAAQ,SAER,kBAACL,EAAA,EAAKM,OAAN,CAAaJ,MAAO,CAAEK,SAAU,MAC9B,kBAACC,EAAA,EAAD,CAAQC,GAAG,KAAKC,MAAM,SAAtB,gCAIA,kBAACC,EAAA,EAAD,CAASD,MAAM,SAAf,kCAC0B,IACxB,kBAACE,EAAA,EAAD,CAAOF,MAAM,OAAOR,MAAO,CAAEW,QAAS,IAAtC,gBAES,IAJX,uCAOA,kBAACC,EAAA,EAAD,CAAMC,KAAK,SACT,kBAACC,EAAA,EAAD,KACE,kBAACF,EAAA,EAAKG,MAAN,CACEC,OAAK,EACLC,KAAM,kBAACC,EAAA,EAAD,CAAMV,MAAM,QAAQW,KAAK,SAC/BC,aAAa,OACbC,YAAY,gBACZC,SAAU,SAAC5B,GAAD,OApCJ6B,EAoCoB7B,EAAE8B,OAAOD,MAnC7C/C,EAAc,WACdF,EAASiD,GAFM,IAACA,KAsCPhD,GACC,kBAACmC,EAAA,EAAD,CAAOe,OAAK,EAACjB,MAAM,MAAMkB,SAAS,SAC/BnD,GAGL,kBAACqC,EAAA,EAAKe,MAAN,CAAYC,QAAM,GAChB,kBAAChB,EAAA,EAAKG,MAAN,CACEC,OAAK,EACLC,KAAM,kBAACC,EAAA,EAAD,CAAMV,MAAM,QAAQW,KAAK,QAC/BC,aAAa,OACbC,YAAY,aACZQ,KAAK,WACLP,SAAU,SAAC5B,GAAD,OA7CH6B,EA6CsB7B,EAAE8B,OAAOD,MA5ClD7C,EAAiB,WACjBE,EAAY2C,GAFM,IAACA,KA+CR9C,GACC,kBAACiC,EAAA,EAAD,CAAOe,OAAK,EAACjB,MAAM,MAAMkB,SAAS,SAC/BjD,IAIP,kBAACqD,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQf,OAAK,EAACH,KAAK,QAAQmB,SAAO,EAACC,QAAS/C,GAA5C,oBAKJ,kBAACuB,EAAA,EAAD,CAASyB,MAAI,GACX,kBAAC,IAAD,CAAMC,GAAG,WAAT,uBAEF,kBAAC1B,EAAA,EAAD,CAAS2B,OAAK,GACZ,kBAAC,IAAD,CAAMD,GAAG,UAAUnC,MAAO,CAAEQ,MAAO,YAAnC,4BCqDK6B,G,MAnKA,WACb,IAAMnE,EAAWC,cADE,EAEuBC,mBAAS,MAFhC,mBAEZK,EAFY,KAEGC,EAFH,OAGiBN,mBAAS,MAH1B,mBAGZG,EAHY,KAGAC,EAHA,OAIyBJ,mBAAS,MAJlC,mBAIZkE,EAJY,KAIIC,EAJJ,OAKuBnE,mBAAS,MALhC,mBAKZoE,EALY,KAKGC,EALH,OAMarE,mBAAS,MANtB,mBAMZO,EANY,KAMFC,EANE,OAOOR,mBAAS,MAPhB,mBAOZC,EAPY,KAOLC,EAPK,OAQeF,mBAAS,MARxB,mBAQZsE,EARY,KAQDC,EARC,OASavE,mBAAS,MATtB,mBASZwE,EATY,KASFC,EATE,KAUbhE,EAAmBC,IAAW,CAClC4D,UAAW5D,MAAagE,IAAI,GAAI,aAAa/D,SAAS,YACtD6D,SAAU9D,MAAaC,SAAS,YAAY+D,IAAI,GAAI,YACpDzE,MAAOS,MACJC,SAAS,YACTC,QAAQ,kCAAmC,SAC9CL,SAAUG,MAAaC,SAAS,YAAYE,IAAI,EAAG,cAoB/CC,EAAY,uCAAG,sBAAAC,EAAA,sDACnBN,EACGO,SACC,CACET,WACAiE,WACAvE,QACAqE,aAEF,CAAErD,YAAY,IAEfC,MAAK,SAACC,GACLrB,EAAS6E,YAAWxD,OAErBE,OAAM,SAACC,GACNsD,QAAQC,IAAI,IAAKvD,GACjBA,EAAEC,OAAOC,SAAQ,SAACC,GAChB,OAAQA,GACN,IAAK,WACHnB,EAAiB,qDACjB,MACF,IAAK,QACHF,EAAc,0CACd,MACF,IAAK,YACH+D,EAAkB,8CAClB,MACF,IAAK,WACHE,EAAiB,4CACjB,MACF,QACE,cA/BS,2CAAH,qDAqClB,OACE,kBAAC3C,EAAA,EAAD,CACEC,UAAU,SACVC,MAAO,CAAEC,OAAQ,SACjBC,cAAc,SACdC,QAAQ,SAER,kBAACL,EAAA,EAAKM,OAAN,CAAaJ,MAAO,CAAEK,SAAU,MAC9B,kBAACC,EAAA,EAAD,CAAQC,GAAG,KAAKC,MAAM,QAAQT,UAAU,UAAxC,mCAIA,kBAACU,EAAA,EAAD,CAASD,MAAM,SAAf,mCAC0B,kBAACE,EAAA,EAAD,CAAOF,MAAM,QAAb,gBAAyC,IADnE,uCAIA,kBAACI,EAAA,EAAD,CAAMC,KAAK,SACT,kBAACC,EAAA,EAAD,KACE,kBAACF,EAAA,EAAKsC,MAAN,CAAYC,aAAW,EAACC,OAAQ,GAC9B,kBAACxC,EAAA,EAAKG,MAAN,CACEC,OAAK,EACLC,KAAM,kBAACC,EAAA,EAAD,CAAMC,KAAK,OAAOX,MAAM,UAC9BY,aAAa,OACbC,YAAY,YACZC,SAAU,SAAC5B,GAAD,OA1EN6B,EA0EsB7B,EAAE8B,OAAOD,MAzE/CgB,EAAkB,WAClBI,EAAapB,GAFE,IAACA,KA6EN,kBAACX,EAAA,EAAKG,MAAN,CACEC,OAAK,EACLC,KAAM,kBAACC,EAAA,EAAD,CAAMC,KAAK,OAAOX,MAAM,UAC9BY,aAAa,OACbC,YAAY,UACZC,SAAU,SAAC5B,GAAD,OA9EP6B,EA8EsB7B,EAAE8B,OAAOD,MA7E9CkB,EAAiB,WACjBI,EAAYtB,GAFE,IAACA,MAgFO,KACZe,GAAkBE,IAClB,kBAAC5B,EAAA,EAAKsC,MAAN,CAAYC,aAAW,EAACC,OAAQ,GAC7Bd,GACC,kBAAC5B,EAAA,EAAD,CAAOe,OAAK,EAACjB,MAAM,MAAMkB,SAAS,SAC/BY,GAEF,IACFE,GACC,kBAAC9B,EAAA,EAAD,CAAOe,OAAK,EAACjB,MAAM,MAAMkB,SAAS,SAC/Bc,IAKT,kBAAC5B,EAAA,EAAKG,MAAN,CACEC,OAAK,EACLC,KAAM,kBAACC,EAAA,EAAD,CAAMV,MAAM,QAAQW,KAAK,SAC/BC,aAAa,OACbC,YAAY,gBACZC,SAAU,SAAC5B,GAAD,OA5GJ6B,EA4GoB7B,EAAE8B,OAAOD,MA3G7C/C,EAAc,WACdF,EAASiD,GAFM,IAACA,KA8GPhD,GACC,kBAACmC,EAAA,EAAD,CAAOe,OAAK,EAACjB,MAAM,MAAMkB,SAAS,SAC/BnD,GAGL,kBAACqC,EAAA,EAAKe,MAAN,CAAYC,QAAM,GAChB,kBAAChB,EAAA,EAAKG,MAAN,CACEC,OAAK,EACLC,KAAM,kBAACC,EAAA,EAAD,CAAMV,MAAM,QAAQW,KAAK,QAC/BC,aAAa,OACbC,YAAY,aACZQ,KAAK,WACLP,SAAU,SAAC5B,GAAD,OA9GH6B,EA8GsB7B,EAAE8B,OAAOD,MA7GlD7C,EAAiB,WACjBE,EAAY2C,GAFM,IAACA,KAgHR9C,GACC,kBAACiC,EAAA,EAAD,CAAOe,OAAK,EAACjB,MAAM,MAAMkB,SAAS,SAC/BjD,IAIP,kBAACqD,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAQf,OAAK,EAACH,KAAK,QAAQmB,SAAO,EAACC,QAAS/C,GAA5C,wBAKJ,kBAACuB,EAAA,EAAD,CAASyB,MAAI,GAAb,yBACqB,kBAAC,IAAD,CAAMC,GAAG,UAAT,uB,SCvJdkB,UAnBS,WACtB,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,QAGJ,kBAACtF,EAAA,EAAD","file":"static/js/7.302171c8.chunk.js","sourcesContent":["import React from 'react';\n\nconst Footer = () => {\n  return <div>Consent verecek hoca arıyorum...</div>;\n};\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { loginUser } from '../../reducers/userReducer';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Message,\n  Segment,\n  Icon,\n  Label,\n  Divider,\n  Container,\n} from 'semantic-ui-react';\nconst Login = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState(null);\n  const [passwordError, setPasswordError] = useState(null);\n  const [password, setPassword] = useState('');\n  const validationSchema = Yup.object({\n    email: Yup.string()\n      .required('Required')\n      .matches(/^[A-Z0-9._%+-]+@boun\\.edu\\.tr$/i, 'email'),\n    password: Yup.string().required('Required').min(8, 'password'),\n  });\n\n  const handleSubmit = async () => {\n    validationSchema\n      .validate(\n        {\n          password,\n          email,\n        },\n        { abortEarly: false }\n      )\n      .then((values) => {\n        dispatch(loginUser(values));\n      })\n      .catch((e) => {\n        e.errors.forEach((q) => {\n          switch (q) {\n            case 'password':\n              setPasswordError('Şifre en az 8 karakterden oluşmalı');\n              break;\n            case 'email':\n              setEmailError('Lütfen @boun.edu.tr emaili giriniz.');\n              break;\n\n            default:\n              return;\n          }\n        });\n      });\n  };\n\n  const emailSet = (value) => {\n    setEmailError(null);\n    setEmail(value);\n  };\n\n  const passwordSet = (value) => {\n    setPasswordError(null);\n    setPassword(value);\n  };\n\n  return (\n    <Grid\n      textAlign=\"center\"\n      style={{ height: '100vh' }}\n      verticalAlign=\"middle\"\n      columns=\"equal\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h1\" color=\"green\">\n          Çimlere Hoşgeldiniz.\n        </Header>\n\n        <Message color=\"green\">\n          Çim uygulamasına sadece{' '}\n          <Label color=\"blue\" style={{ padding: 5 }}>\n            @boun.edu.tr\n          </Label>{' '}\n          emaili olanlar kayıt olabilir.\n        </Message>\n        <Form size=\"large\">\n          <Segment>\n            <Form.Input\n              fluid\n              icon={<Icon color=\"green\" name=\"mail\" />}\n              iconPosition=\"left\"\n              placeholder=\"Eposta Adresi\"\n              onChange={(e) => emailSet(e.target.value)}\n            />\n            {emailError && (\n              <Label basic color=\"red\" pointing=\"above\">\n                {emailError}\n              </Label>\n            )}\n            <Form.Field inline>\n              <Form.Input\n                fluid\n                icon={<Icon color=\"green\" name=\"key\" />}\n                iconPosition=\"left\"\n                placeholder=\"Şifre\"\n                type=\"password\"\n                onChange={(e) => passwordSet(e.target.value)}\n              />\n              {passwordError && (\n                <Label basic color=\"red\" pointing=\"above\">\n                  {passwordError}\n                </Label>\n              )}\n            </Form.Field>\n            <Divider />\n            <Button fluid size=\"large\" primary onClick={handleSubmit}>\n              Giriş Yap\n            </Button>\n          </Segment>\n        </Form>\n        <Message info>\n          <Link to=\"/signup\">Hesap Oluştur</Link>\n        </Message>\n        <Message error>\n          <Link to=\"/signup\" style={{ color: '#f53131' }}>\n            Şifremi Unuttum\n          </Link>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { signupUser } from '../../reducers/userReducer';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport * as Yup from 'yup'; // for everything\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Message,\n  Segment,\n  Icon,\n  Label,\n  Divider,\n} from 'semantic-ui-react';\n\nconst Signup = () => {\n  const dispatch = useDispatch();\n  const [passwordError, setPasswordError] = useState(null);\n  const [emailError, setEmailError] = useState(null);\n  const [firstNameError, setFirstNameError] = useState(null);\n  const [lastNameError, setLastNameError] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [email, setEmail] = useState(null);\n  const [firstName, setFirstName] = useState(null);\n  const [lastName, setLastName] = useState(null);\n  const validationSchema = Yup.object({\n    firstName: Yup.string().max(15, 'firstName').required('Required'),\n    lastName: Yup.string().required('Required').max(15, 'lastName'),\n    email: Yup.string()\n      .required('Required')\n      .matches(/^[A-Z0-9._%+-]+@boun\\.edu\\.tr$/i, 'email'),\n    password: Yup.string().required('Required').min(8, 'password'),\n  });\n\n  const emailSet = (value) => {\n    setEmailError(null);\n    setEmail(value);\n  };\n  const firstSet = (value) => {\n    setFirstNameError(null);\n    setFirstName(value);\n  };\n  const lastSet = (value) => {\n    setLastNameError(null);\n    setLastName(value);\n  };\n  const passwordSet = (value) => {\n    setPasswordError(null);\n    setPassword(value);\n  };\n\n  const handleSubmit = async () => {\n    validationSchema\n      .validate(\n        {\n          password,\n          lastName,\n          email,\n          firstName,\n        },\n        { abortEarly: false }\n      )\n      .then((values) => {\n        dispatch(signupUser(values));\n      })\n      .catch((e) => {\n        console.log('e', e);\n        e.errors.forEach((q) => {\n          switch (q) {\n            case 'password':\n              setPasswordError('Şifre en az 8 karakterden oluşmalı');\n              break;\n            case 'email':\n              setEmailError('Lütfen @boun.edu.tr emaili giriniz.');\n              break;\n            case 'firstName':\n              setFirstNameError('İsim 15 harf veya daha az olmalı');\n              break;\n            case 'lastName':\n              setLastNameError('Soyisim 15 harf veya daha az olmalı');\n              break;\n            default:\n              return;\n          }\n        });\n      });\n  };\n\n  return (\n    <Grid\n      textAlign=\"center\"\n      style={{ height: '100vh' }}\n      verticalAlign=\"middle\"\n      columns=\"equal\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h1\" color=\"green\" textAlign=\"center\">\n          Çimlerde Yerinizi Alın.\n        </Header>\n\n        <Message color=\"green\">\n          Çim uygulamasına sadece <Label color=\"blue\">@boun.edu.tr</Label>{' '}\n          emaili olanlar kayıt olabilir.\n        </Message>\n        <Form size=\"large\">\n          <Segment>\n            <Form.Group unstackable widths={2}>\n              <Form.Input\n                fluid\n                icon={<Icon name=\"user\" color=\"green\" />}\n                iconPosition=\"left\"\n                placeholder=\"İsim\"\n                onChange={(e) => firstSet(e.target.value)}\n              />\n\n              <Form.Input\n                fluid\n                icon={<Icon name=\"user\" color=\"green\" />}\n                iconPosition=\"left\"\n                placeholder=\"Soyisim\"\n                onChange={(e) => lastSet(e.target.value)}\n              />\n            </Form.Group>{' '}\n            {(firstNameError || lastNameError) && (\n              <Form.Group unstackable widths={2}>\n                {firstNameError && (\n                  <Label basic color=\"red\" pointing=\"above\">\n                    {firstNameError}\n                  </Label>\n                )}{' '}\n                {lastNameError && (\n                  <Label basic color=\"red\" pointing=\"above\">\n                    {lastNameError}\n                  </Label>\n                )}\n              </Form.Group>\n            )}\n            <Form.Input\n              fluid\n              icon={<Icon color=\"green\" name=\"mail\" />}\n              iconPosition=\"left\"\n              placeholder=\"Eposta Adresi\"\n              onChange={(e) => emailSet(e.target.value)}\n            />\n            {emailError && (\n              <Label basic color=\"red\" pointing=\"above\">\n                {emailError}\n              </Label>\n            )}\n            <Form.Field inline>\n              <Form.Input\n                fluid\n                icon={<Icon color=\"green\" name=\"key\" />}\n                iconPosition=\"left\"\n                placeholder=\"Şifre\"\n                type=\"password\"\n                onChange={(e) => passwordSet(e.target.value)}\n              />\n              {passwordError && (\n                <Label basic color=\"red\" pointing=\"above\">\n                  {passwordError}\n                </Label>\n              )}\n            </Form.Field>\n            <Divider />\n            <Button fluid size=\"large\" primary onClick={handleSubmit}>\n              Hesap Oluştur\n            </Button>\n          </Segment>\n        </Form>\n        <Message info>\n          Zaten Üye misiniz? <Link to=\"/login\">Giriş Yap</Link>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\nimport { Switch, Route, Redirect, Link } from 'react-router-dom';\nimport Login from './components/Login/Login';\nimport Signup from './components/Signup/Signup';\nimport Footer from './components/Footer/Footer';\nconst UnauthorizedApp = () => {\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/signup\">\n          <Signup />\n        </Route>\n        <Route path=\"/\">\n          <Login />\n        </Route>\n      </Switch>\n      <Footer />\n    </div>\n  );\n};\n\nexport default UnauthorizedApp;\n"],"sourceRoot":""}