{"version":3,"sources":["components/Footer/Footer.js","components/Login/Login.js","components/Signup/Signup.js","UnauthorizedApp.js"],"names":["Footer","inverted","vertical","color","style","padding","attached","width","paddingTop","Row","columns","Column","content","as","Link","to","Login","dispatch","useDispatch","useState","email","setEmail","emailError","setEmailError","passwordError","setPasswordError","password","setPassword","validationSchema","Yup","required","matches","min","handleSubmit","a","validate","abortEarly","then","values","loginUser","catch","e","errors","forEach","q","Grid","textAlign","height","verticalAlign","maxWidth","Header","Message","Label","Form","size","Segment","Input","fluid","icon","Icon","name","iconPosition","placeholder","onChange","value","target","basic","pointing","Field","inline","type","Divider","Button","primary","onClick","info","error","Signup","usernameError","setUsernameError","samePasswordError","setSamePasswordError","samePassword","setSamePassword","username","setUsername","ref","msg","this","test","exclusive","message","params","reference","path","resolve","max","equalTo","signupUser","console","log","autoComplete","UnauthorizedApp"],"mappings":"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","file":"static/js/7.3f07f433.chunk.js","sourcesContent":["import React from 'react';\nimport { Segment, Container, Grid, Header, List } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nconst Footer = () => {\n  return (\n    <Segment\n      inverted\n      vertical\n      color=\"blue\"\n      style={{ padding: '0em 3em' }}\n      attached=\"bottom\"\n    >\n      <Grid\n        style={{ width: '100vw' }}\n        style={{ paddingTop: '1em' }}\n        relaxed=\"very\"\n      >\n        <Grid.Row columns={3}>\n          <Grid.Column width=\"1\" style={{ padding: '0em 1em' }}>\n            <Header inverted content=\"Hakkında\" as={Link} to=\"/about\" />\n          </Grid.Column>\n          <Grid.Column width=\"3\">\n            <Header\n              inverted\n              content=\"Katkı Sağlamak\"\n              as={Link}\n              to=\"/contribution\"\n            />\n          </Grid.Column>\n          <Grid.Column width=\"12\">\n            Consent verecek hoca arıyorum...Consent verecek hoca\n            arıyorum...Consent verecek hoca arıyorum\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment>\n  );\n};\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { loginUser } from '../../reducers/userReducer';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Message,\n  Segment,\n  Icon,\n  Label,\n  Divider,\n  Container,\n} from 'semantic-ui-react';\nconst Login = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState(null);\n  const [passwordError, setPasswordError] = useState(null);\n  const [password, setPassword] = useState('');\n  const validationSchema = Yup.object({\n    email: Yup.string()\n      .required('Required')\n      .matches(/^[A-Z0-9._%+-]+@boun\\.edu\\.tr$/i, 'email'),\n    password: Yup.string().required('Required').min(8, 'password'),\n  });\n\n  const handleSubmit = async () => {\n    validationSchema\n      .validate(\n        {\n          password,\n          email,\n        },\n        { abortEarly: false }\n      )\n      .then((values) => {\n        dispatch(loginUser(values, setEmailError));\n      })\n      .catch((e) => {\n        e.errors.forEach((q) => {\n          switch (q) {\n            case 'password':\n              setPasswordError('Şifre en az 8 karakterden oluşmalı');\n              break;\n            case 'email':\n              setEmailError('Lütfen @boun.edu.tr emaili giriniz.');\n              break;\n\n            default:\n              return;\n          }\n        });\n      });\n  };\n\n  const emailSet = (value) => {\n    setEmailError(null);\n    setEmail(value);\n  };\n\n  const passwordSet = (value) => {\n    setPasswordError(null);\n    setPassword(value);\n  };\n\n  return (\n    <Grid\n      textAlign=\"center\"\n      style={{ height: '100vh' }}\n      verticalAlign=\"middle\"\n      columns=\"equal\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h1\" color=\"green\">\n          Çimlere Hoşgeldiniz.\n        </Header>\n\n        <Message color=\"green\">\n          Çim uygulamasına sadece{' '}\n          <Label color=\"blue\" style={{ padding: 5 }}>\n            @boun.edu.tr\n          </Label>{' '}\n          emaili olanlar kayıt olabilir.\n        </Message>\n        <Form size=\"large\">\n          <Segment>\n            <Form.Input\n              fluid\n              icon={<Icon color=\"green\" name=\"mail\" />}\n              iconPosition=\"left\"\n              placeholder=\"Eposta Adresi\"\n              onChange={(e) => emailSet(e.target.value)}\n            />\n            {emailError && (\n              <Label basic color=\"red\" pointing=\"above\">\n                {emailError}\n              </Label>\n            )}\n            <Form.Field inline>\n              <Form.Input\n                fluid\n                icon={<Icon color=\"green\" name=\"key\" />}\n                iconPosition=\"left\"\n                placeholder=\"Şifre\"\n                type=\"password\"\n                onChange={(e) => passwordSet(e.target.value)}\n              />\n              {passwordError && (\n                <Label basic color=\"red\" pointing=\"above\">\n                  {passwordError}\n                </Label>\n              )}\n            </Form.Field>\n            <Divider />\n            <Button fluid size=\"large\" primary onClick={handleSubmit}>\n              Giriş Yap\n            </Button>\n          </Segment>\n        </Form>\n        <Message info>\n          <Link to=\"/signup\">Hesap Oluştur</Link>\n        </Message>\n        <Message error>\n          <Link to=\"/signup\" style={{ color: '#f53131' }}>\n            Şifremi Unuttum\n          </Link>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Login;\n","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { signupUser } from '../../reducers/userReducer';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport * as Yup from 'yup'; // for everything\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Message,\n  Segment,\n  Icon,\n  Label,\n  Divider,\n} from 'semantic-ui-react';\n\nconst Signup = () => {\n  const dispatch = useDispatch();\n  const [passwordError, setPasswordError] = useState(null);\n  const [emailError, setEmailError] = useState(null);\n  const [usernameError, setUsernameError] = useState(null);\n  const [samePasswordError, setSamePasswordError] = useState(null);\n  const [samePassword, setSamePassword] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n\n  function equalTo(ref, msg) {\n    return this.test({\n      name: 'equalTo',\n      exclusive: false,\n      message: msg,\n      params: {\n        reference: ref.path,\n      },\n      test: function (value) {\n        return value === this.resolve(ref);\n      },\n    });\n  }\n\n  Yup.addMethod(Yup.string, 'equalTo', equalTo);\n\n  const validationSchema = Yup.object({\n    username: Yup.string()\n      .max(15, 'username')\n      .required('Required')\n      .min(1, 'username'),\n    email: Yup.string()\n      .required('Required')\n      .matches(/^[A-Z0-9._%+-]+@boun\\.edu\\.tr$/i, 'email'),\n    password: Yup.string().required('Required').min(8, 'password'),\n    samePassword: Yup.string().equalTo(Yup.ref('password'), 'samePassword'),\n  });\n\n  const emailSet = (value) => {\n    setEmailError(null);\n    setEmail(value);\n  };\n  const usernameSet = (value) => {\n    setUsernameError(null);\n    setUsername(value);\n  };\n  const passwordSet = (value) => {\n    setPasswordError(null);\n    setPassword(value);\n  };\n\n  const samePasswordSet = (value) => {\n    setSamePassword(value);\n    setSamePasswordError(null);\n  };\n\n  const handleSubmit = async () => {\n    validationSchema\n      .validate(\n        {\n          password,\n          email,\n          username,\n          samePassword,\n        },\n        { abortEarly: false }\n      )\n      .then((values) => {\n        dispatch(signupUser(values));\n      })\n      .catch((e) => {\n        console.log('e', e);\n        e.errors.forEach((q) => {\n          switch (q) {\n            case 'password':\n              setPasswordError('Şifre en az 8 karakterden oluşmalı');\n              break;\n            case 'email':\n              setEmailError('Lütfen @boun.edu.tr emaili giriniz.');\n              break;\n            case 'username':\n              setUsernameError(\n                'Kullanıcı adı 15 veya daha az harften oluşmalı'\n              );\n              break;\n            case 'samePassword':\n              setSamePasswordError('Şifreler Eşleşmeli');\n              break;\n            default:\n              return;\n          }\n        });\n      });\n  };\n\n  return (\n    <Grid\n      textAlign=\"center\"\n      style={{ height: '100vh' }}\n      verticalAlign=\"middle\"\n      columns=\"equal\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h1\" color=\"green\" textAlign=\"center\">\n          Çimlerde Yerinizi Alın.\n        </Header>\n\n        <Message color=\"green\">\n          Çim uygulamasına sadece <Label color=\"blue\">@boun.edu.tr</Label>{' '}\n          emaili olanlar kayıt olabilir.\n        </Message>\n        <Form size=\"large\">\n          <Segment>\n            <Form.Input\n              fluid\n              icon={<Icon name=\"user\" color=\"green\" />}\n              iconPosition=\"left\"\n              placeholder=\"Kullanıcı Adı\"\n              onChange={(e) => usernameSet(e.target.value)}\n            />\n\n            {usernameError && (\n              <Label basic color=\"red\" pointing=\"above\">\n                {usernameError}\n              </Label>\n            )}\n\n            <Form.Input\n              fluid\n              icon={<Icon color=\"green\" name=\"mail\" />}\n              iconPosition=\"left\"\n              placeholder=\"Eposta Adresi\"\n              onChange={(e) => emailSet(e.target.value)}\n            />\n            {emailError && (\n              <Label basic color=\"red\" pointing=\"above\">\n                {emailError}\n              </Label>\n            )}\n            <Form.Field inline>\n              <Form.Input\n                fluid\n                icon={<Icon color=\"green\" name=\"key\" />}\n                iconPosition=\"left\"\n                placeholder=\"Şifre\"\n                type=\"password\"\n                onChange={(e) => passwordSet(e.target.value)}\n              />\n              {passwordError && (\n                <Label basic color=\"red\" pointing=\"above\">\n                  {passwordError}\n                </Label>\n              )}\n            </Form.Field>\n            <Form.Field inline>\n              <Form.Input\n                fluid\n                icon={<Icon color=\"green\" name=\"key\" />}\n                iconPosition=\"left\"\n                placeholder=\"Şifrenizi Tekrar Yazın\"\n                type=\"password\"\n                autoComplete=\"new-password\"\n                onChange={(e) => samePasswordSet(e.target.value)}\n              />\n              {samePasswordError && (\n                <Label basic color=\"red\" pointing=\"above\">\n                  {samePasswordError}\n                </Label>\n              )}\n            </Form.Field>\n            <Divider />\n            <Button fluid size=\"large\" primary onClick={handleSubmit}>\n              Hesap Oluştur\n            </Button>\n          </Segment>\n        </Form>\n        <Message info>\n          Zaten Üye misiniz? <Link to=\"/login\">Giriş Yap</Link>\n        </Message>\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\nimport { Switch, Route, Redirect, Link } from 'react-router-dom';\nimport Login from './components/Login/Login';\nimport Signup from './components/Signup/Signup';\nimport Footer from './components/Footer/Footer';\nconst UnauthorizedApp = () => {\n  return (\n    <div>\n      <Switch>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/signup\">\n          <Signup />\n        </Route>\n        <Route path=\"/\">\n          <Login />\n        </Route>\n      </Switch>\n      <Footer />\n    </div>\n  );\n};\n\nexport default UnauthorizedApp;\n"],"sourceRoot":""}