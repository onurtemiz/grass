{"version":3,"sources":["components/Footer/Footer.js","components/Login/Login.js","components/Signup/Signup.js","UnauthorizedApp.js"],"names":["Footer","Login","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleLogin","values","setSubmitting","a","loginUser","onSubmit","e","preventDefault","TextField","error","required","size","id","label","variant","value","placeholder","onChange","target","type","autoComplete","Button","color","to","Signup","handleSubmit","signupUser","validationSchema","Yup","firstName","max","lastName","matches","min","Container","maxWidth","fixed","initialValues","htmlFor","name","UnauthorizedApp","path"],"mappings":"sGAAA,oBAMeA,IAJA,WACb,OAAO,wE,+JCoDMC,EAhDD,WACZ,IAAMC,EAAWC,cADC,EAEQC,mBAAS,IAFjB,mBAEXC,EAFW,KAEJC,EAFI,OAGcF,mBAAS,IAHvB,mBAGXG,EAHW,KAGDC,EAHC,KAIZC,EAAW,uCAAG,WAAOC,EAAQC,GAAf,SAAAC,EAAA,sDAClBV,EAASW,YAAUH,IADD,2CAAH,wDASjB,OACE,6BACE,0BAAMI,SAPO,SAACC,GAChBA,EAAEC,iBACFP,EAAY,CAAEJ,QAAOE,eAMjB,kBAACU,EAAA,EAAD,CACEC,OAAO,EACPC,UAAQ,EACRC,KAAK,QACLC,GAAG,oBACHC,MAAM,QACNC,QAAQ,WACRC,MAAOnB,EACPoB,YAAY,yBACZC,SAAU,SAACX,GAAD,OAAOT,EAASS,EAAEY,OAAOH,UAErC,kBAACP,EAAA,EAAD,CACEC,OAAO,EACPE,KAAK,QACLI,MAAOjB,EACPc,GAAG,0BACHC,MAAM,WACNM,KAAK,WACLC,aAAa,mBACbN,QAAQ,WACRG,SAAU,SAACX,GAAD,OAAOP,EAAYO,EAAEY,OAAOH,UAGxC,kBAACM,EAAA,EAAD,CAAQF,KAAK,SAASL,QAAQ,YAAYQ,MAAM,WAAhD,WAIF,kBAAC,IAAD,CAAMC,GAAG,WAAT,0B,iBCqCSC,EA/EA,WACb,IAAM/B,EAAWC,cACX+B,EAAY,uCAAG,WAAOxB,EAAQC,GAAf,SAAAC,EAAA,sDACnBV,EAASiC,YAAWzB,IACpBC,GAAc,GAFK,2CAAH,wDAIZyB,EAAmBC,IAAW,CAClCC,UAAWD,MACRE,IAAI,GAAI,iCACRpB,SAAS,YACZqB,SAAUH,MACPlB,SAAS,YACToB,IAAI,GAAI,iCACXlC,MAAOgC,MACJlB,SAAS,YACTsB,QAAQ,kCAAmC,aAC9ClC,SAAU8B,MACPlB,SAAS,YACTuB,IAAI,EAAG,kCAGZ,OACE,kBAACC,EAAA,EAAD,CAAWC,SAAS,KAAKC,OAAO,GAC9B,kBAAC,IAAD,CACEC,cAAe,CACbR,UAAW,GACXE,SAAU,GACVnC,MAAO,GACPE,SAAU,IAEZ6B,iBAAkBA,EAClBtB,SAAU,SAACJ,EAAD,GAAgC,IAArBC,EAAoB,EAApBA,cACnBuB,EAAaxB,EAAQC,KAGvB,kBAAC,IAAD,KACE,6BACE,2BAAOoC,QAAQ,aAAf,gBACA,kBAAC,IAAD,CAAOC,KAAK,YAAYpB,KAAK,OAAOH,YAAY,UAElD,6BACE,kBAAC,IAAD,CAAcuB,KAAK,eAErB,6BACE,2BAAOD,QAAQ,YAAf,eACA,kBAAC,IAAD,CAAOC,KAAK,WAAWpB,KAAK,OAAOH,YAAY,WAEjD,6BACE,kBAAC,IAAD,CAAcuB,KAAK,cAErB,6BACE,2BAAOD,QAAQ,SAAf,WACA,kBAAC,IAAD,CACEC,KAAK,QACLpB,KAAK,OACLH,YAAY,4BAGhB,6BACE,kBAAC,IAAD,CAAcuB,KAAK,WAErB,6BACE,2BAAOD,QAAQ,YAAf,cAEA,kBAAC,IAAD,CAAOC,KAAK,WAAWpB,KAAK,cAE9B,6BACE,kBAAC,IAAD,CAAcoB,KAAK,cAErB,kBAAClB,EAAA,EAAD,CAAQF,KAAK,SAASL,QAAQ,WAAWQ,MAAM,UAAUX,KAAK,SAA9D,YAKJ,kBAAC,IAAD,CAAMY,GAAG,UAAT,yB,SC5DSiB,UAjBS,WACtB,OACE,6BACE,kBAAC,IAAD,CAAUjB,GAAG,WACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOkB,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAAC,EAAD,QAGJ,kBAAClD,EAAA,EAAD","file":"static/js/6.647c4798.chunk.js","sourcesContent":["import React from 'react';\n\nconst Footer = () => {\n  return <div>Consent verecek hoca arÄ±yorum...</div>;\n};\n\nexport default Footer;\n","import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { loginUser } from '../../reducers/userReducer';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { TextField, Button } from '@material-ui/core';\nconst Login = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const handleLogin = async (values, setSubmitting) => {\n    dispatch(loginUser(values));\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    handleLogin({ email, password });\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <TextField\n          error={false}\n          required\n          size=\"small\"\n          id=\"outlined-required\"\n          label=\"Email\"\n          variant=\"outlined\"\n          value={email}\n          placeholder=\"onur.temiz@boun.edu.tr\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <TextField\n          error={true}\n          size=\"small\"\n          value={password}\n          id=\"outlined-password-input\"\n          label=\"Password\"\n          type=\"password\"\n          autoComplete=\"current-password\"\n          variant=\"outlined\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n          Submit\n        </Button>\n      </form>\n      <Link to=\"/signup\">Kayit icin tiklayin.</Link>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { signupUser } from '../../reducers/userReducer';\nimport { useDispatch } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { Container, Button, TextField } from '@material-ui/core';\nconst Signup = () => {\n  const dispatch = useDispatch();\n  const handleSubmit = async (values, setSubmitting) => {\n    dispatch(signupUser(values));\n    setSubmitting(false);\n  };\n  const validationSchema = Yup.object({\n    firstName: Yup.string()\n      .max(15, 'Must be 15 characters or less')\n      .required('Required'),\n    lastName: Yup.string()\n      .required('Required')\n      .max(15, 'Must be 15 characters or less'),\n    email: Yup.string()\n      .required('Required')\n      .matches(/^[A-Z0-9._%+-]+@boun\\.edu\\.tr$/i, 'Only boun'),\n    password: Yup.string()\n      .required('Required')\n      .min(8, 'Must be 8 characters or more'),\n  });\n\n  return (\n    <Container maxWidth=\"sm\" fixed={true}>\n      <Formik\n        initialValues={{\n          firstName: '',\n          lastName: '',\n          email: '',\n          password: '',\n        }}\n        validationSchema={validationSchema}\n        onSubmit={(values, { setSubmitting }) => {\n          handleSubmit(values, setSubmitting);\n        }}\n      >\n        <Form>\n          <div>\n            <label htmlFor=\"firstName\">First Name: </label>\n            <Field name=\"firstName\" type=\"text\" placeholder=\"Onur\" />\n          </div>\n          <div>\n            <ErrorMessage name=\"firstName\" />\n          </div>\n          <div>\n            <label htmlFor=\"lastName\">Last Name: </label>\n            <Field name=\"lastName\" type=\"text\" placeholder=\"Temiz\" />\n          </div>\n          <div>\n            <ErrorMessage name=\"lastName\" />\n          </div>\n          <div>\n            <label htmlFor=\"email\">Email: </label>\n            <Field\n              name=\"email\"\n              type=\"text\"\n              placeholder=\"onur.temiz@boun.edu.tr\"\n            />\n          </div>\n          <div>\n            <ErrorMessage name=\"email\" />\n          </div>\n          <div>\n            <label htmlFor=\"password\">Password: </label>\n          \n            <Field name=\"password\" type=\"password\" />\n          </div>\n          <div>\n            <ErrorMessage name=\"password\" />\n          </div>\n          <Button type=\"submit\" variant=\"outlined\" color=\"primary\" size=\"large\">\n            Submit\n          </Button>\n        </Form>\n      </Formik>\n      <Link to=\"/login\">Uyeyseniz tiklayin.</Link>\n    </Container>\n  );\n};\n\nexport default Signup;\n","import React from 'react';\nimport { Switch, Route, Redirect, Link } from 'react-router-dom';\nimport Login from './components/Login/Login';\nimport Signup from './components/Signup/Signup';\nimport Footer from './components/Footer/Footer';\nconst UnauthorizedApp = () => {\n  return (\n    <div>\n      <Redirect to=\"/login\" />\n      <Switch>\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n        <Route path=\"/signup\">\n          <Signup />\n        </Route>\n      </Switch>\n      <Footer />\n    </div>\n  );\n};\n\nexport default UnauthorizedApp;\n"],"sourceRoot":""}